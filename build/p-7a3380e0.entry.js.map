{"version":3,"names":["CSS","actionBarContainer","content","SLOTS","actionBar","shellCenterRowCss","ShellCenterRow","constructor","hostRef","this","detached","heightScale","position","connectedCallback","connectConditionalSlotComponent","disconnectedCallback","disconnectConditionalSlotComponent","render","el","contentNode","h","key","class","getSlotted","actionBarNode","name","children","reverse","Fragment"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/shell-center-row/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/shell-center-row/shell-center-row.css?tag=calcite-shell-center-row&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/shell-center-row/shell-center-row.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    actionBarContainer: \"action-bar-container\",\n    content: \"content\",\n};\nexport const SLOTS = {\n    actionBar: \"action-bar\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  /* Base \":host\" styles for the component */\n  box-sizing: border-box;\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-2);\n  font-size: var(--calcite-font-size--1);\n}\n:host * {\n  box-sizing: border-box;\n}\n\n:host {\n  z-index: var(--calcite-z-index);\n  display: flex;\n  flex: 1 1 auto;\n  overflow: hidden;\n  background-color: transparent;\n}\n\n.content {\n  margin: 0px;\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  overflow: hidden;\n  flex: 1 0 0;\n}\n\n.action-bar-container {\n  display: flex;\n}\n\n:host([detached]) {\n  margin-inline: 0.5rem;\n  margin-block: 0.5rem 1.5rem;\n}\n\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n\n:host([detached]) {\n  animation: in-up var(--calcite-internal-animation-timing-slow) ease-in-out;\n  border-radius: 0.25rem;\n  border-width: 0px;\n  --tw-shadow: 0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);\n  --tw-shadow-colored: 0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n:host([position=end]) {\n  align-self: flex-end;\n}\n\n:host([position=start]) {\n  align-self: flex-start;\n}\n\n:host([height-scale=s]) {\n  block-size: 33.333333%;\n}\n\n:host([height-scale=m]) {\n  block-size: 70%;\n}\n\n:host([height-scale=l]) {\n  block-size: 100%;\n}\n\n:host([height-scale=l][detached]) {\n  block-size: calc(100% - 2rem);\n}\n\n::slotted(calcite-panel) {\n  block-size: 100%;\n  inline-size: 100%;\n}\n\n::slotted(calcite-action-bar),\n::slotted(calcite-action-bar[position=end]) {\n  border-inline-end: 1px solid;\n  border-color: var(--calcite-color-border-3);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { Fragment, h } from \"@stencil/core\";\nimport { connectConditionalSlotComponent, disconnectConditionalSlotComponent, } from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { CSS, SLOTS } from \"./resources\";\n/**\n * @slot - A slot for adding content to the `calcite-shell-panel`.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the `calcite-shell-panel`.\n */\nexport class ShellCenterRow {\n    constructor() {\n        this.detached = false;\n        this.heightScale = \"s\";\n        this.position = \"end\";\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectConditionalSlotComponent(this);\n    }\n    disconnectedCallback() {\n        disconnectConditionalSlotComponent(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const { el } = this;\n        const contentNode = (h(\"div\", { key: '81509aabe59bf7baa749bebc9dfdd510d7116b0e', class: CSS.content }, h(\"slot\", { key: '32508fde267a3158deb3e0f26a5119120924d701' })));\n        const actionBar = getSlotted(el, SLOTS.actionBar);\n        const actionBarNode = actionBar ? (h(\"div\", { class: CSS.actionBarContainer, key: \"action-bar\" }, h(\"slot\", { name: SLOTS.actionBar }))) : null;\n        const children = [actionBarNode, contentNode];\n        if (actionBar?.position === \"end\") {\n            children.reverse();\n        }\n        return h(Fragment, { key: '78b0898056f601e151f4ba820dad03dbf0461b4b' }, children);\n    }\n    static get is() { return \"calcite-shell-center-row\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"shell-center-row.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"shell-center-row.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"detached\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the content area displays like a floating panel.\"\n                },\n                \"attribute\": \"detached\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"heightScale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the maximum height of the component.\"\n                },\n                \"attribute\": \"height-scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"s\\\"\"\n            },\n            \"position\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"start\\\" | \\\"end\\\", Position>\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Position\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Position\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the component's position. Will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"position\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"end\\\"\"\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n//# sourceMappingURL=shell-center-row.js.map\n"],"mappings":";;;;;GAKO,MAAMA,EAAM,CACfC,mBAAoB,uBACpBC,QAAS,WAEN,MAAMC,EAAQ,CACjBC,UAAW,cCVf,MAAMC,EAAoB,qgD,MCabC,EAAc,MACvBC,YAAAC,G,UACIC,KAAKC,SAAW,MAChBD,KAAKE,YAAc,IACnBF,KAAKG,SAAW,K,CAOpBC,oBACIC,EAAgCL,K,CAEpCM,uBACIC,EAAmCP,K,CAOvCQ,SACI,MAAMC,GAAEA,GAAOT,KACf,MAAMU,EAAeC,EAAE,MAAO,CAAEC,IAAK,2CAA4CC,MAAOtB,EAAIE,SAAWkB,EAAE,OAAQ,CAAEC,IAAK,8CACxH,MAAMjB,EAAYmB,EAAWL,EAAIf,EAAMC,WACvC,MAAMoB,EAAgBpB,EAAagB,EAAE,MAAO,CAAEE,MAAOtB,EAAIC,mBAAoBoB,IAAK,cAAgBD,EAAE,OAAQ,CAAEK,KAAMtB,EAAMC,aAAiB,KAC3I,MAAMsB,EAAW,CAACF,EAAeL,GACjC,IAAIf,IAAS,MAATA,SAAS,SAATA,EAAWQ,YAAa,MAAO,CAC/Bc,EAASC,S,CAEb,OAAOP,EAAEQ,EAAU,CAAEP,IAAK,4CAA8CK,E"}