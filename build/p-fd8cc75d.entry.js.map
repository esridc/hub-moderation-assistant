{"version":3,"names":["actionMenuCss","SUPPORTED_MENU_NAV_KEYS","ActionMenu","constructor","hostRef","this","actionElements","guid","menuId","menuButtonId","connectMenuButtonEl","open","label","menuButtonEl","slottedMenuButtonEl","defaultMenuButtonEl","disconnectMenuButtonEl","setTooltipReferenceElement","active","setAttribute","toAriaBoolean","id","text","addEventListener","menuButtonClick","menuButtonKeyDown","removeEventListener","setMenuButtonEl","event","actions","target","assignedElements","flatten","filter","el","matches","setDefaultMenuButtonEl","handleCalciteActionClick","setFocus","toggleOpen","updateTooltip","tooltips","tooltipEl","expanded","referenceElement","updateAction","action","index","activeMenuItemIndex","tabIndex","toggleAttribute","activeAttr","updateActions","forEach","handleDefaultSlotChange","reduce","previousValue","currentValue","push","concat","Array","from","querySelectorAll","disabled","hidden","key","length","isActivationKey","preventDefault","click","handleActionNavigation","isValidKey","currentIndex","getRoundRobinIndex","Math","max","toggleOpenEnd","value","handlePopoverOpen","handlePopoverClose","appearance","flipPlacements","undefined","overlayPositioning","placement","scale","connectedCallback","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","expandedHandler","openHandler","calciteActionMenuOpen","emit","activeMenuItemIndexHandler","async","componentFocusable","focusElement","renderMenuButton","menuButtonSlot","h","name","SLOTS","trigger","onSlotchange","class","CSS","defaultTrigger","icon","ICONS","menu","ref","textEnabled","renderMenuItems","activeAction","activeDescendantId","autoClose","focusTrapDisabled","offsetDistance","onCalcitePopoverClose","onCalcitePopoverOpen","pointerDisabled","onClick","role","render","Fragment","tooltip","supportedKeys","find","k","PopoverManager","registeredElements","Map","registeredElementCount","queryPopover","composedPath","registeredElement","pathEl","has","get","togglePopovers","togglePopover","triggerDisabled","values","popover","includes","keyDownHandler","defaultPrevented","closeAllPopovers","clickHandler","isKeyboardTriggeredClick","registerElement","referenceEl","set","addListeners","unregisterElement","delete","removeListeners","window","container","imageContainer","closeButtonContainer","closeButton","content","hasHeader","header","headerContent","heading","defaultPopoverPlacement","ARIA_CONTROLS","ARIA_EXPANDED","popoverCss","manager","Popover","mutationObserver","createObserver","updateFocusTrapElements","openTransitionProp","hasLoaded","setTransitionEl","transitionEl","setFilteredPlacements","filteredFlipPlacements","filterValidFlipPlacements","setUpReferenceElement","warn","removeReferences","effectiveReferenceElement","getReferenceElement","connectFloatingUI","console","tagName","addReferences","getId","setExpandedAttr","removeAttribute","hide","storeArrowEl","arrowEl","reposition","closable","flipDisabled","headingLevel","messageOverrides","messages","defaultOffsetDistance","offsetSkidding","effectiveLocale","floatingLayout","defaultMessages","handleFocusTrapDisabled","deactivateFocusTrap","activateFocusTrap","flipPlacementsHandler","onMessagesChange","offsetDistanceOffsetHandler","offsetSkiddingHandler","onToggleOpenCloseComponent","overlayPositioningHandler","placementHandler","referenceElementHandler","effectiveLocaleChange","updateMessages","connectLocalized","connectMessages","connectFocusTrap","requestAnimationFrame","setUpMessages","disconnectLocalized","disconnectMessages","disconnectFloatingUI","delayed","floatingEl","type","forceUpdate","focusFirstTabbable","queryElementRoots","onBeforeOpen","calcitePopoverBeforeOpen","onOpen","calcitePopoverOpen","onBeforeClose","calcitePopoverBeforeClose","onClose","calcitePopoverClose","renderCloseButton","closeButtonEl","close","getIconScale","renderHeader","headingNode","Heading","level","displayed","arrowNode","FloatingArrow","Host","FloatingCSS","animation","animationActive","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/action-menu/action-menu.css?tag=calcite-action-menu&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/action-menu/action-menu.js","./node_modules/@esri/calcite-components/dist/collection/components/popover/PopoverManager.js","./node_modules/@esri/calcite-components/dist/collection/components/popover/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/popover/popover.css?tag=calcite-popover&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/popover/popover.js"],"sourcesContent":["/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font-size: var(--calcite-font-size-1);\n  color: var(--calcite-color-text-2);\n}\n\n::slotted(calcite-action-group) {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n::slotted(calcite-action-group:last-child) {\n  border-block-end: 0;\n}\n\n.default-trigger {\n  position: relative;\n  block-size: 100%;\n  flex: 0 1 auto;\n  align-self: stretch;\n}\n\nslot[name=trigger]::slotted(calcite-action),\ncalcite-action::slotted([slot=trigger]) {\n  position: relative;\n  block-size: 100%;\n  flex: 0 1 auto;\n  align-self: stretch;\n}\n\n.menu {\n  max-block-size: 45vh;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  overflow-y: auto;\n  overflow-x: hidden;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, } from \"@stencil/core\";\nimport { Fragment } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { activeAttr, CSS, ICONS, SLOTS } from \"./resources\";\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\nexport class ActionMenu {\n    constructor() {\n        this.actionElements = [];\n        this.guid = `calcite-action-menu-${guid()}`;\n        this.menuId = `${this.guid}-menu`;\n        this.menuButtonId = `${this.guid}-menu-button`;\n        // --------------------------------------------------------------------------\n        //\n        //  Component Methods\n        //\n        // --------------------------------------------------------------------------\n        this.connectMenuButtonEl = () => {\n            const { menuButtonId, menuId, open, label } = this;\n            const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n            if (this.menuButtonEl === menuButtonEl) {\n                return;\n            }\n            this.disconnectMenuButtonEl();\n            this.menuButtonEl = menuButtonEl;\n            this.setTooltipReferenceElement();\n            if (!menuButtonEl) {\n                return;\n            }\n            menuButtonEl.active = open;\n            menuButtonEl.setAttribute(\"aria-controls\", menuId);\n            menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n            menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n            if (!menuButtonEl.id) {\n                menuButtonEl.id = menuButtonId;\n            }\n            if (!menuButtonEl.label) {\n                menuButtonEl.label = label;\n            }\n            if (!menuButtonEl.text) {\n                menuButtonEl.text = label;\n            }\n            menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n            menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n        };\n        this.disconnectMenuButtonEl = () => {\n            const { menuButtonEl } = this;\n            if (!menuButtonEl) {\n                return;\n            }\n            menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n            menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n        };\n        this.setMenuButtonEl = (event) => {\n            const actions = event.target\n                .assignedElements({\n                flatten: true,\n            })\n                .filter((el) => el?.matches(\"calcite-action\"));\n            this.slottedMenuButtonEl = actions[0];\n            this.connectMenuButtonEl();\n        };\n        this.setDefaultMenuButtonEl = (el) => {\n            this.defaultMenuButtonEl = el;\n            this.connectMenuButtonEl();\n        };\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.handleCalciteActionClick = () => {\n            this.open = false;\n            this.setFocus();\n        };\n        this.menuButtonClick = () => {\n            this.toggleOpen();\n        };\n        this.updateTooltip = (event) => {\n            const tooltips = event.target\n                .assignedElements({\n                flatten: true,\n            })\n                .filter((el) => el?.matches(\"calcite-tooltip\"));\n            this.tooltipEl = tooltips[0];\n            this.setTooltipReferenceElement();\n        };\n        this.setTooltipReferenceElement = () => {\n            const { tooltipEl, expanded, menuButtonEl, open } = this;\n            if (tooltipEl) {\n                tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n            }\n        };\n        this.updateAction = (action, index) => {\n            const { guid, activeMenuItemIndex } = this;\n            const id = `${guid}-action-${index}`;\n            action.tabIndex = -1;\n            action.setAttribute(\"role\", \"menuitem\");\n            if (!action.id) {\n                action.id = id;\n            }\n            // data attribute is used to style the \"activeMenuItemIndex\" action using token focus styling.\n            action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n        };\n        this.updateActions = (actions) => {\n            actions?.forEach(this.updateAction);\n        };\n        this.handleDefaultSlotChange = (event) => {\n            const actions = event.target\n                .assignedElements({\n                flatten: true,\n            })\n                .reduce((previousValue, currentValue) => {\n                if (currentValue?.matches(\"calcite-action\")) {\n                    previousValue.push(currentValue);\n                    return previousValue;\n                }\n                if (currentValue?.matches(\"calcite-action-group\")) {\n                    return previousValue.concat(Array.from(currentValue.querySelectorAll(\"calcite-action\")));\n                }\n                return previousValue;\n            }, []);\n            this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n        };\n        this.menuButtonKeyDown = (event) => {\n            const { key } = event;\n            const { actionElements, activeMenuItemIndex, open } = this;\n            if (!actionElements.length) {\n                return;\n            }\n            if (isActivationKey(key)) {\n                event.preventDefault();\n                if (!open) {\n                    this.toggleOpen();\n                    return;\n                }\n                const action = actionElements[activeMenuItemIndex];\n                action ? action.click() : this.toggleOpen(false);\n            }\n            if (key === \"Tab\") {\n                this.open = false;\n                return;\n            }\n            if (key === \"Escape\") {\n                this.toggleOpen(false);\n                event.preventDefault();\n                return;\n            }\n            this.handleActionNavigation(event, key, actionElements);\n        };\n        this.handleActionNavigation = (event, key, actions) => {\n            if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n                return;\n            }\n            event.preventDefault();\n            if (!this.open) {\n                this.toggleOpen();\n                if (key === \"Home\" || key === \"ArrowDown\") {\n                    this.activeMenuItemIndex = 0;\n                }\n                if (key === \"End\" || key === \"ArrowUp\") {\n                    this.activeMenuItemIndex = actions.length - 1;\n                }\n                return;\n            }\n            if (key === \"Home\") {\n                this.activeMenuItemIndex = 0;\n            }\n            if (key === \"End\") {\n                this.activeMenuItemIndex = actions.length - 1;\n            }\n            const currentIndex = this.activeMenuItemIndex;\n            if (key === \"ArrowUp\") {\n                this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n            }\n            if (key === \"ArrowDown\") {\n                this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n            }\n        };\n        this.toggleOpenEnd = () => {\n            this.setFocus();\n            this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n        };\n        this.toggleOpen = (value = !this.open) => {\n            this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n            this.open = value;\n        };\n        this.handlePopoverOpen = () => {\n            this.open = true;\n        };\n        this.handlePopoverClose = () => {\n            this.open = false;\n        };\n        this.appearance = \"solid\";\n        this.expanded = false;\n        this.flipPlacements = undefined;\n        this.label = undefined;\n        this.open = false;\n        this.overlayPositioning = \"absolute\";\n        this.placement = \"auto\";\n        this.scale = undefined;\n        this.menuButtonEl = undefined;\n        this.activeMenuItemIndex = -1;\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        this.connectMenuButtonEl();\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        this.disconnectMenuButtonEl();\n    }\n    expandedHandler() {\n        this.open = false;\n        this.setTooltipReferenceElement();\n    }\n    openHandler(open) {\n        this.activeMenuItemIndex = this.open ? 0 : -1;\n        if (this.menuButtonEl) {\n            this.menuButtonEl.active = open;\n        }\n        this.calciteActionMenuOpen.emit();\n        this.setTooltipReferenceElement();\n    }\n    activeMenuItemIndexHandler() {\n        this.updateActions(this.actionElements);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    // --------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        return focusElement(this.menuButtonEl);\n    }\n    renderMenuButton() {\n        const { appearance, label, scale, expanded } = this;\n        const menuButtonSlot = (h(\"slot\", { name: SLOTS.trigger, onSlotchange: this.setMenuButtonEl }, h(\"calcite-action\", { appearance: appearance, class: CSS.defaultTrigger, icon: ICONS.menu, ref: this.setDefaultMenuButtonEl, scale: scale, text: label, textEnabled: expanded })));\n        return menuButtonSlot;\n    }\n    renderMenuItems() {\n        const { actionElements, activeMenuItemIndex, open, menuId, menuButtonEl, label, placement, overlayPositioning, flipPlacements, } = this;\n        const activeAction = actionElements[activeMenuItemIndex];\n        const activeDescendantId = activeAction?.id || null;\n        return (h(\"calcite-popover\", { autoClose: true, flipPlacements: flipPlacements, focusTrapDisabled: true, label: label, offsetDistance: 0, onCalcitePopoverClose: this.handlePopoverClose, onCalcitePopoverOpen: this.handlePopoverOpen, open: open, overlayPositioning: overlayPositioning, placement: placement, pointerDisabled: true, referenceElement: menuButtonEl }, h(\"div\", { \"aria-activedescendant\": activeDescendantId, \"aria-labelledby\": menuButtonEl?.id, class: CSS.menu, id: menuId, onClick: this.handleCalciteActionClick, role: \"menu\", tabIndex: -1 }, h(\"slot\", { onSlotchange: this.handleDefaultSlotChange }))));\n    }\n    render() {\n        return (h(Fragment, { key: '9feaace5a0750686cc4ad4e7ac83859cc26a7a20' }, this.renderMenuButton(), this.renderMenuItems(), h(\"slot\", { key: 'ba73adb74c8c729467f300fd4ff33c7af23f2ad7', name: SLOTS.tooltip, onSlotchange: this.updateTooltip })));\n    }\n    isValidKey(key, supportedKeys) {\n        return !!supportedKeys.find((k) => k === key);\n    }\n    static get is() { return \"calcite-action-menu\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"action-menu.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"action-menu.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"appearance\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"solid\\\" | \\\"transparent\\\", Appearance>\",\n                    \"resolved\": \"\\\"solid\\\" | \\\"transparent\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Appearance\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Appearance\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the appearance of the component.\"\n                },\n                \"attribute\": \"appearance\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"solid\\\"\"\n            },\n            \"expanded\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is expanded.\"\n                },\n                \"attribute\": \"expanded\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"flipPlacements\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FlipPlacement[]\",\n                    \"resolved\": \"FlipPlacement[]\",\n                    \"references\": {\n                        \"FlipPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::FlipPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Defines the available placements that can be used when a flip occurs.\"\n                }\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the text string for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is open.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"overlayPositioning\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"OverlayPositioning\",\n                    \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n                    \"references\": {\n                        \"OverlayPositioning\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::OverlayPositioning\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n`\\\"fixed\\\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n                },\n                \"attribute\": \"overlay-positioning\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"absolute\\\"\"\n            },\n            \"placement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"LogicalPlacement\",\n                    \"resolved\": \"\\\"auto\\\" | \\\"top\\\" | \\\"bottom\\\" | \\\"right\\\" | \\\"left\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | \\\"leading\\\" | \\\"trailing\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"leading-start\\\" | \\\"leading-end\\\" | \\\"trailing-end\\\" | \\\"trailing-start\\\"\",\n                    \"references\": {\n                        \"LogicalPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::LogicalPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines where the component will be positioned relative to the `referenceElement`.\"\n                },\n                \"attribute\": \"placement\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"auto\\\"\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component's trigger `calcite-action`.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"menuButtonEl\": {},\n            \"activeMenuItemIndex\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteActionMenuOpen\",\n                \"name\": \"calciteActionMenuOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the `open` property is toggled.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"expanded\",\n                \"methodName\": \"expandedHandler\"\n            }, {\n                \"propName\": \"open\",\n                \"methodName\": \"openHandler\"\n            }, {\n                \"propName\": \"activeMenuItemIndex\",\n                \"methodName\": \"activeMenuItemIndexHandler\"\n            }];\n    }\n}\n//# sourceMappingURL=action-menu.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { isActivationKey } from \"../../utils/key\";\nimport { isKeyboardTriggeredClick } from \"../../utils/dom\";\nexport default class PopoverManager {\n    constructor() {\n        // --------------------------------------------------------------------------\n        //\n        //  Private Properties\n        //\n        // --------------------------------------------------------------------------\n        this.registeredElements = new Map();\n        this.registeredElementCount = 0;\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.queryPopover = (composedPath) => {\n            const { registeredElements } = this;\n            const registeredElement = composedPath.find((pathEl) => registeredElements.has(pathEl));\n            return registeredElements.get(registeredElement);\n        };\n        this.togglePopovers = (event) => {\n            const composedPath = event.composedPath();\n            const togglePopover = this.queryPopover(composedPath);\n            if (togglePopover && !togglePopover.triggerDisabled) {\n                togglePopover.open = !togglePopover.open;\n            }\n            Array.from(this.registeredElements.values())\n                .filter((popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover))\n                .forEach((popover) => (popover.open = false));\n        };\n        this.keyDownHandler = (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            if (event.key === \"Escape\") {\n                this.closeAllPopovers();\n            }\n            else if (isActivationKey(event.key)) {\n                this.togglePopovers(event);\n            }\n        };\n        this.clickHandler = (event) => {\n            if (isKeyboardTriggeredClick(event)) {\n                return;\n            }\n            this.togglePopovers(event);\n        };\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    // --------------------------------------------------------------------------\n    registerElement(referenceEl, popover) {\n        this.registeredElementCount++;\n        this.registeredElements.set(referenceEl, popover);\n        if (this.registeredElementCount === 1) {\n            this.addListeners();\n        }\n    }\n    unregisterElement(referenceEl) {\n        if (this.registeredElements.delete(referenceEl)) {\n            this.registeredElementCount--;\n        }\n        if (this.registeredElementCount === 0) {\n            this.removeListeners();\n        }\n    }\n    closeAllPopovers() {\n        Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n    }\n    addListeners() {\n        window.addEventListener(\"click\", this.clickHandler);\n        window.addEventListener(\"keydown\", this.keyDownHandler);\n    }\n    removeListeners() {\n        window.removeEventListener(\"click\", this.clickHandler);\n        window.removeEventListener(\"keydown\", this.keyDownHandler);\n    }\n}\n//# sourceMappingURL=PopoverManager.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    container: \"container\",\n    imageContainer: \"image-container\",\n    closeButtonContainer: \"close-button-container\",\n    closeButton: \"close-button\",\n    content: \"content\",\n    hasHeader: \"has-header\",\n    header: \"header\",\n    headerContent: \"header-content\",\n    heading: \"heading\",\n};\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-popover-z-index: Sets the z-index value for the component.\n*/\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, var(--calcite-z-index-popup));\n  display: block;\n  position: absolute;\n  z-index: var(--calcite-floating-ui-z-index);\n}\n\n.calcite-floating-ui-anim {\n  position: relative;\n  transition: var(--calcite-floating-ui-transition);\n  transition-property: transform, visibility, opacity;\n  opacity: 0;\n  box-shadow: 0 0 16px 0 rgba(0, 0, 0, 0.16);\n  z-index: var(--calcite-z-index);\n  border-radius: 0.25rem;\n}\n\n:host([data-placement^=bottom]) .calcite-floating-ui-anim {\n  transform: translateY(-5px);\n}\n\n:host([data-placement^=top]) .calcite-floating-ui-anim {\n  transform: translateY(5px);\n}\n\n:host([data-placement^=left]) .calcite-floating-ui-anim {\n  transform: translateX(5px);\n}\n\n:host([data-placement^=right]) .calcite-floating-ui-anim {\n  transform: translateX(-5px);\n}\n\n:host([data-placement]) .calcite-floating-ui-anim--active {\n  opacity: 1;\n  transform: translate(0);\n}\n\n:host([calcite-hydrated-hidden]) {\n  visibility: hidden !important;\n  pointer-events: none;\n}\n\n.calcite-floating-ui-arrow {\n  pointer-events: none;\n  position: absolute;\n  z-index: calc(var(--calcite-z-index) * -1);\n  fill: var(--calcite-color-foreground-1);\n}\n\n.calcite-floating-ui-arrow__stroke {\n  stroke: var(--calcite-color-border-3);\n}\n\n:host([scale=s]) .heading {\n  padding-inline: 0.75rem;\n  padding-block: 0.5rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n\n:host([scale=m]) .heading {\n  padding-inline: 1rem;\n  padding-block: 0.75rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n\n:host([scale=l]) .heading {\n  padding-inline: 1.25rem;\n  padding-block: 1rem;\n  font-size: var(--calcite-font-size-1);\n  line-height: 1.375;\n}\n\n:host {\n  pointer-events: none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  border-radius: 0.25rem;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-3);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-color-border-3);\n}\n\n.header {\n  display: flex;\n  flex: 1 1 auto;\n  align-items: stretch;\n  justify-content: flex-start;\n  border-width: 0px;\n  border-block-end-width: 1px;\n  border-style: solid;\n  border-block-end-color: var(--calcite-color-border-3);\n}\n\n.heading {\n  margin: 0px;\n  display: block;\n  flex: 1 1 auto;\n  align-self: center;\n  white-space: normal;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-color-text-1);\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.container {\n  position: relative;\n  display: flex;\n  block-size: 100%;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  border-radius: 0.25rem;\n  color: var(--calcite-color-text-1);\n}\n.container.has-header {\n  flex-direction: column;\n}\n\n.content {\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-self: center;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.close-button-container {\n  display: flex;\n  overflow: hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: 0.25rem;\n  border-end-end-radius: 0.25rem;\n}\n\n.has-header .close-button-container {\n  border-end-end-radius: none;\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  block-size: 100%;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { forceUpdate, h, Host, } from \"@stencil/core\";\nimport { connectFloatingUI, defaultOffsetDistance, disconnectFloatingUI, filterValidFlipPlacements, FloatingCSS, reposition, } from \"../../utils/floating-ui\";\nimport { activateFocusTrap, connectFocusTrap, deactivateFocusTrap, updateFocusTrapElements, } from \"../../utils/focusTrapComponent\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading } from \"../functional/Heading\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { getIconScale } from \"../../utils/component\";\nimport PopoverManager from \"./PopoverManager\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\nconst manager = new PopoverManager();\n/**\n * @slot - A slot for adding custom content.\n */\nexport class Popover {\n    constructor() {\n        this.mutationObserver = createObserver(\"mutation\", () => this.updateFocusTrapElements());\n        this.guid = `calcite-popover-${guid()}`;\n        this.openTransitionProp = \"opacity\";\n        this.hasLoaded = false;\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.setTransitionEl = (el) => {\n            this.transitionEl = el;\n        };\n        this.setFilteredPlacements = () => {\n            const { el, flipPlacements } = this;\n            this.filteredFlipPlacements = flipPlacements\n                ? filterValidFlipPlacements(flipPlacements, el)\n                : null;\n        };\n        this.setUpReferenceElement = (warn = true) => {\n            this.removeReferences();\n            this.effectiveReferenceElement = this.getReferenceElement();\n            connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n            const { el, referenceElement, effectiveReferenceElement } = this;\n            if (warn && referenceElement && !effectiveReferenceElement) {\n                console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n                    el,\n                });\n            }\n            this.addReferences();\n        };\n        this.getId = () => {\n            return this.el.id || this.guid;\n        };\n        this.setExpandedAttr = () => {\n            const { effectiveReferenceElement, open } = this;\n            if (!effectiveReferenceElement) {\n                return;\n            }\n            if (\"setAttribute\" in effectiveReferenceElement) {\n                effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n            }\n        };\n        this.addReferences = () => {\n            const { effectiveReferenceElement } = this;\n            if (!effectiveReferenceElement) {\n                return;\n            }\n            const id = this.getId();\n            if (\"setAttribute\" in effectiveReferenceElement) {\n                effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n            }\n            manager.registerElement(effectiveReferenceElement, this.el);\n            this.setExpandedAttr();\n        };\n        this.removeReferences = () => {\n            const { effectiveReferenceElement } = this;\n            if (!effectiveReferenceElement) {\n                return;\n            }\n            if (\"removeAttribute\" in effectiveReferenceElement) {\n                effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n                effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n            }\n            manager.unregisterElement(effectiveReferenceElement);\n        };\n        this.hide = () => {\n            this.open = false;\n        };\n        this.storeArrowEl = (el) => {\n            this.arrowEl = el;\n            this.reposition(true);\n        };\n        this.autoClose = false;\n        this.closable = false;\n        this.flipDisabled = false;\n        this.focusTrapDisabled = false;\n        this.pointerDisabled = false;\n        this.flipPlacements = undefined;\n        this.heading = undefined;\n        this.headingLevel = undefined;\n        this.label = undefined;\n        this.messageOverrides = undefined;\n        this.messages = undefined;\n        this.offsetDistance = defaultOffsetDistance;\n        this.offsetSkidding = 0;\n        this.open = false;\n        this.overlayPositioning = \"absolute\";\n        this.placement = defaultPopoverPlacement;\n        this.referenceElement = undefined;\n        this.scale = \"m\";\n        this.triggerDisabled = false;\n        this.effectiveLocale = \"\";\n        this.floatingLayout = \"vertical\";\n        this.effectiveReferenceElement = undefined;\n        this.defaultMessages = undefined;\n    }\n    handleFocusTrapDisabled(focusTrapDisabled) {\n        if (!this.open) {\n            return;\n        }\n        focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n    }\n    flipPlacementsHandler() {\n        this.setFilteredPlacements();\n        this.reposition(true);\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    offsetDistanceOffsetHandler() {\n        this.reposition(true);\n    }\n    offsetSkiddingHandler() {\n        this.reposition(true);\n    }\n    openHandler() {\n        onToggleOpenCloseComponent(this);\n        this.reposition(true);\n        this.setExpandedAttr();\n    }\n    overlayPositioningHandler() {\n        this.reposition(true);\n    }\n    placementHandler() {\n        this.reposition(true);\n    }\n    referenceElementHandler() {\n        this.setUpReferenceElement();\n        this.reposition(true);\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        this.setFilteredPlacements();\n        connectLocalized(this);\n        connectMessages(this);\n        connectFocusTrap(this);\n        // we set up the ref element in the next frame to ensure PopoverManager\n        // event handlers are invoked after connect (mainly for `components` output target)\n        requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n    }\n    async componentWillLoad() {\n        await setUpMessages(this);\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        if (this.referenceElement && !this.effectiveReferenceElement) {\n            this.setUpReferenceElement();\n        }\n        if (this.open) {\n            onToggleOpenCloseComponent(this);\n        }\n        this.hasLoaded = true;\n    }\n    disconnectedCallback() {\n        this.removeReferences();\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n        deactivateFocusTrap(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    // --------------------------------------------------------------------------\n    /**\n     * Updates the position of the component.\n     *\n     * @param delayed\n     */\n    async reposition(delayed = false) {\n        const { el, effectiveReferenceElement, placement, overlayPositioning, flipDisabled, filteredFlipPlacements, offsetDistance, offsetSkidding, arrowEl, } = this;\n        return reposition(this, {\n            floatingEl: el,\n            referenceEl: effectiveReferenceElement,\n            overlayPositioning,\n            placement,\n            flipDisabled,\n            flipPlacements: filteredFlipPlacements,\n            offsetDistance,\n            offsetSkidding,\n            arrowEl,\n            type: \"popover\",\n        }, delayed);\n    }\n    /**\n     * Sets focus on the component's first focusable element.\n     */\n    async setFocus() {\n        await componentFocusable(this);\n        forceUpdate(this.el);\n        focusFirstTabbable(this.el);\n    }\n    /**\n     * Updates the element(s) that are used within the focus-trap of the component.\n     */\n    async updateFocusTrapElements() {\n        updateFocusTrapElements(this);\n    }\n    getReferenceElement() {\n        const { referenceElement, el } = this;\n        return ((typeof referenceElement === \"string\"\n            ? queryElementRoots(el, { id: referenceElement })\n            : referenceElement) || null);\n    }\n    onBeforeOpen() {\n        this.calcitePopoverBeforeOpen.emit();\n    }\n    onOpen() {\n        this.calcitePopoverOpen.emit();\n        activateFocusTrap(this);\n    }\n    onBeforeClose() {\n        this.calcitePopoverBeforeClose.emit();\n    }\n    onClose() {\n        this.calcitePopoverClose.emit();\n        deactivateFocusTrap(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    renderCloseButton() {\n        const { messages, closable } = this;\n        return closable ? (h(\"div\", { class: CSS.closeButtonContainer, key: CSS.closeButtonContainer }, h(\"calcite-action\", { appearance: \"transparent\", class: CSS.closeButton, onClick: this.hide, ref: (closeButtonEl) => (this.closeButtonEl = closeButtonEl), scale: this.scale, text: messages.close }, h(\"calcite-icon\", { icon: \"x\", scale: getIconScale(this.scale) })))) : null;\n    }\n    renderHeader() {\n        const { heading, headingLevel } = this;\n        const headingNode = heading ? (h(Heading, { class: CSS.heading, level: headingLevel }, heading)) : null;\n        return headingNode ? (h(\"div\", { class: CSS.header, key: CSS.header }, headingNode, this.renderCloseButton())) : null;\n    }\n    render() {\n        const { effectiveReferenceElement, heading, label, open, pointerDisabled, floatingLayout } = this;\n        const displayed = effectiveReferenceElement && open;\n        const hidden = !displayed;\n        const arrowNode = !pointerDisabled ? (h(FloatingArrow, { floatingLayout: floatingLayout, key: \"floating-arrow\", ref: this.storeArrowEl })) : null;\n        return (h(Host, { key: '3d353c97791fd0d5b2c1138f3b068669024b3512', \"aria-hidden\": toAriaBoolean(hidden), \"aria-label\": label, \"aria-live\": \"polite\", \"calcite-hydrated-hidden\": hidden, id: this.getId(), role: \"dialog\" }, h(\"div\", { key: '1248ef4c8e83e622335b71a3b0034bf0490d7583', class: {\n                [FloatingCSS.animation]: true,\n                [FloatingCSS.animationActive]: displayed,\n            }, ref: this.setTransitionEl }, arrowNode, h(\"div\", { key: '8b2272c0ba2f4e4a4090942f6fbaf6ebc29e8806', class: {\n                [CSS.hasHeader]: !!heading,\n                [CSS.container]: true,\n            } }, this.renderHeader(), h(\"div\", { key: '1891093fcb573a52309328248aa9d4a2a057c7e4', class: CSS.content }, h(\"slot\", { key: '67bcfcbf92172b4575d44a201238faba5ceac271' })), !heading ? this.renderCloseButton() : null))));\n    }\n    static get is() { return \"calcite-popover\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"popover.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"popover.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"autoClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\"\n                },\n                \"attribute\": \"auto-close\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"closable\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays a close button within the component.\"\n                },\n                \"attribute\": \"closable\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"flipDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\"\n                },\n                \"attribute\": \"flip-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"focusTrapDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, prevents focus trapping.\"\n                },\n                \"attribute\": \"focus-trap-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"pointerDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, removes the caret pointer.\"\n                },\n                \"attribute\": \"pointer-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"flipPlacements\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FlipPlacement[]\",\n                    \"resolved\": \"FlipPlacement[]\",\n                    \"references\": {\n                        \"FlipPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::FlipPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Defines the available placements that can be used when a flip occurs.\"\n                }\n            },\n            \"heading\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component header text.\"\n                },\n                \"attribute\": \"heading\",\n                \"reflect\": false\n            },\n            \"headingLevel\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"HeadingLevel\",\n                    \"resolved\": \"1 | 2 | 3 | 4 | 5 | 6\",\n                    \"references\": {\n                        \"HeadingLevel\": {\n                            \"location\": \"import\",\n                            \"path\": \"../functional/Heading\",\n                            \"id\": \"src/components/functional/Heading.tsx::HeadingLevel\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\"\n                },\n                \"attribute\": \"heading-level\",\n                \"reflect\": true\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<PopoverMessages>\",\n                    \"resolved\": \"{ close?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"PopoverMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/popover/t9n\",\n                            \"id\": \"src/components/popover/assets/popover/t9n/index.d.ts::PopoverMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"PopoverMessages\",\n                    \"resolved\": \"{ close: string; }\",\n                    \"references\": {\n                        \"PopoverMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/popover/t9n\",\n                            \"id\": \"src/components/popover/assets/popover/t9n/index.d.ts::PopoverMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"offsetDistance\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"default\",\n                            \"text\": \"6\"\n                        }],\n                    \"text\": \"Offsets the position of the popover away from the `referenceElement`.\"\n                },\n                \"attribute\": \"offset-distance\",\n                \"reflect\": true,\n                \"defaultValue\": \"defaultOffsetDistance\"\n            },\n            \"offsetSkidding\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Offsets the position of the component along the `referenceElement`.\"\n                },\n                \"attribute\": \"offset-skidding\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            },\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays and positions the component.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"overlayPositioning\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"OverlayPositioning\",\n                    \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n                    \"references\": {\n                        \"OverlayPositioning\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::OverlayPositioning\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\n`\\\"fixed\\\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n                },\n                \"attribute\": \"overlay-positioning\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"absolute\\\"\"\n            },\n            \"placement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"LogicalPlacement\",\n                    \"resolved\": \"\\\"auto\\\" | \\\"top\\\" | \\\"bottom\\\" | \\\"right\\\" | \\\"left\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | \\\"leading\\\" | \\\"trailing\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"leading-start\\\" | \\\"leading-end\\\" | \\\"trailing-end\\\" | \\\"trailing-start\\\"\",\n                    \"references\": {\n                        \"LogicalPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::LogicalPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines where the component will be positioned relative to the `referenceElement`.\"\n                },\n                \"attribute\": \"placement\",\n                \"reflect\": true,\n                \"defaultValue\": \"defaultPopoverPlacement\"\n            },\n            \"referenceElement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ReferenceElement | string\",\n                    \"resolved\": \"Element | VirtualElement | string\",\n                    \"references\": {\n                        \"ReferenceElement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::ReferenceElement\"\n                        }\n                    }\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\"\n                },\n                \"attribute\": \"reference-element\",\n                \"reflect\": false\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"triggerDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\\n\\nThis property can be set to `true` to manage when the component is open.\"\n                },\n                \"attribute\": \"trigger-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"floatingLayout\": {},\n            \"effectiveReferenceElement\": {},\n            \"defaultMessages\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calcitePopoverBeforeClose\",\n                \"name\": \"calcitePopoverBeforeClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is requested to be closed and before the closing transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calcitePopoverClose\",\n                \"name\": \"calcitePopoverClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is closed and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calcitePopoverBeforeOpen\",\n                \"name\": \"calcitePopoverBeforeOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calcitePopoverOpen\",\n                \"name\": \"calcitePopoverOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is open and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"reposition\": {\n                \"complexType\": {\n                    \"signature\": \"(delayed?: boolean) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"delayed\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Updates the position of the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"delayed\"\n                        }]\n                }\n            },\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first focusable element.\",\n                    \"tags\": []\n                }\n            },\n            \"updateFocusTrapElements\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Updates the element(s) that are used within the focus-trap of the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"focusTrapDisabled\",\n                \"methodName\": \"handleFocusTrapDisabled\"\n            }, {\n                \"propName\": \"flipPlacements\",\n                \"methodName\": \"flipPlacementsHandler\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"offsetDistance\",\n                \"methodName\": \"offsetDistanceOffsetHandler\"\n            }, {\n                \"propName\": \"offsetSkidding\",\n                \"methodName\": \"offsetSkiddingHandler\"\n            }, {\n                \"propName\": \"open\",\n                \"methodName\": \"openHandler\"\n            }, {\n                \"propName\": \"overlayPositioning\",\n                \"methodName\": \"overlayPositioningHandler\"\n            }, {\n                \"propName\": \"placement\",\n                \"methodName\": \"placementHandler\"\n            }, {\n                \"propName\": \"referenceElement\",\n                \"methodName\": \"referenceElementHandler\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=popover.js.map\n"],"mappings":"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"}