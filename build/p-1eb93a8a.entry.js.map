{"version":3,"names":["CSS","scrim","content","BREAKPOINTS","s","l","scrimCss","Scrim","constructor","hostRef","this","resizeObserver","createObserver","handleResize","handleDefaultSlotChange","event","hasContent","slotChangeHasContent","storeLoaderEl","el","loaderEl","loading","messages","undefined","messageOverrides","loaderScale","defaultMessages","effectiveLocale","onMessagesChange","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","_a","observe","async","setUpMessages","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnect","render","h","key","class","label","ref","scale","hidden","onSlotchange","getScale","size","Math","min","clientHeight","clientWidth","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/scrim/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/scrim/scrim.css?tag=calcite-scrim&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/scrim/scrim.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    scrim: \"scrim\",\n    content: \"content\",\n};\nexport const BREAKPOINTS = {\n    s: 72, // Less than 72px.\n    // medium is assumed default.\n    l: 480, // Greater than or equal to 480px.\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-scrim-background: Specifies the background color of the scrim.\n*/\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n  position: absolute;\n  inset: 0px;\n  z-index: var(--calcite-z-index-overlay);\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    --tw-bg-opacity: 0;\n  }\n  100% {\n    --tw-text-opacity: 1;\n  }\n}\n.scrim {\n  position: absolute;\n  inset: 0px;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  padding: 1rem;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\nexport class Scrim {\n    constructor() {\n        this.resizeObserver = createObserver(\"resize\", () => this.handleResize());\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.handleDefaultSlotChange = (event) => {\n            this.hasContent = slotChangeHasContent(event);\n        };\n        this.storeLoaderEl = (el) => {\n            this.loaderEl = el;\n            this.handleResize();\n        };\n        this.loading = false;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.loaderScale = undefined;\n        this.defaultMessages = undefined;\n        this.effectiveLocale = \"\";\n        this.hasContent = false;\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectLocalized(this);\n        connectMessages(this);\n        this.resizeObserver?.observe(this.el);\n    }\n    async componentWillLoad() {\n        await setUpMessages(this);\n    }\n    disconnectedCallback() {\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        this.resizeObserver?.disconnect();\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Method\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const { hasContent, loading, messages } = this;\n        return (h(\"div\", { key: '8a78d64b0efe56e14f45b20f762872bfa92e4b55', class: CSS.scrim }, loading ? (h(\"calcite-loader\", { label: messages.loading, ref: this.storeLoaderEl, scale: this.loaderScale })) : null, h(\"div\", { key: '6602698fbbf1ff03c92ee28c8d59f7a023a84498', class: CSS.content, hidden: !hasContent }, h(\"slot\", { key: 'dff9d95e751fec33ea9e68c12dca129050689a61', onSlotchange: this.handleDefaultSlotChange }))));\n    }\n    getScale(size) {\n        if (size < BREAKPOINTS.s) {\n            return \"s\";\n        }\n        else if (size >= BREAKPOINTS.l) {\n            return \"l\";\n        }\n        else {\n            return \"m\";\n        }\n    }\n    handleResize() {\n        const { loaderEl, el } = this;\n        if (!loaderEl) {\n            return;\n        }\n        this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n    }\n    static get is() { return \"calcite-scrim\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"scrim.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"scrim.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a busy indicator is displayed.\"\n                },\n                \"attribute\": \"loading\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"ScrimMessages\",\n                    \"resolved\": \"{ loading: string; }\",\n                    \"references\": {\n                        \"ScrimMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/scrim/t9n\",\n                            \"id\": \"src/components/scrim/assets/scrim/t9n/index.d.ts::ScrimMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<ScrimMessages>\",\n                    \"resolved\": \"{ loading?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"ScrimMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/scrim/t9n\",\n                            \"id\": \"src/components/scrim/assets/scrim/t9n/index.d.ts::ScrimMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"loaderScale\": {},\n            \"defaultMessages\": {},\n            \"effectiveLocale\": {},\n            \"hasContent\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=scrim.js.map\n"],"mappings":";;;;;GAKO,MAAMA,EAAM,CACfC,MAAO,QACPC,QAAS,WAEN,MAAMC,EAAc,CACvBC,EAAG,GAEHC,EAAG,KCZP,MAAMC,EAAW,ysB,MCcJC,EAAK,MACdC,YAAAC,G,UACIC,KAAKC,eAAiBC,EAAe,UAAU,IAAMF,KAAKG,iBAM1DH,KAAKI,wBAA2BC,IAC5BL,KAAKM,WAAaC,EAAqBF,EAAM,EAEjDL,KAAKQ,cAAiBC,IAClBT,KAAKU,SAAWD,EAChBT,KAAKG,cAAc,EAEvBH,KAAKW,QAAU,MACfX,KAAKY,SAAWC,UAChBb,KAAKc,iBAAmBD,UACxBb,KAAKe,YAAcF,UACnBb,KAAKgB,gBAAkBH,UACvBb,KAAKiB,gBAAkB,GACvBjB,KAAKM,WAAa,K,CAEtBY,mB,CAGAC,wBACIC,EAAepB,KAAMA,KAAKiB,gB,CAO9BI,oB,MACIC,EAAiBtB,MACjBuB,EAAgBvB,OAChBwB,EAAAxB,KAAKC,kBAAc,MAAAuB,SAAA,SAAAA,EAAEC,QAAQzB,KAAKS,G,CAEtCiB,gCACUC,EAAc3B,K,CAExB4B,uB,MACIC,EAAoB7B,MACpB8B,EAAmB9B,OACnBwB,EAAAxB,KAAKC,kBAAc,MAAAuB,SAAA,SAAAA,EAAEO,Y,CAOzBC,SACI,MAAM1B,WAAEA,EAAUK,QAAEA,EAAOC,SAAEA,GAAaZ,KAC1C,OAAQiC,EAAE,MAAO,CAAEC,IAAK,2CAA4CC,MAAO7C,EAAIC,OAASoB,EAAWsB,EAAE,iBAAkB,CAAEG,MAAOxB,EAASD,QAAS0B,IAAKrC,KAAKQ,cAAe8B,MAAOtC,KAAKe,cAAkB,KAAMkB,EAAE,MAAO,CAAEC,IAAK,2CAA4CC,MAAO7C,EAAIE,QAAS+C,QAASjC,GAAc2B,EAAE,OAAQ,CAAEC,IAAK,2CAA4CM,aAAcxC,KAAKI,2B,CAE1YqC,SAASC,GACL,GAAIA,EAAOjD,EAAYC,EAAG,CACtB,MAAO,G,MAEN,GAAIgD,GAAQjD,EAAYE,EAAG,CAC5B,MAAO,G,KAEN,CACD,MAAO,G,EAGfQ,e,MACI,MAAMO,SAAEA,EAAQD,GAAEA,GAAOT,KACzB,IAAKU,EAAU,CACX,M,CAEJV,KAAKe,YAAcf,KAAKyC,UAASjB,EAAAmB,KAAKC,IAAInC,EAAGoC,aAAcpC,EAAGqC,gBAAY,MAAAtB,SAAA,EAAAA,EAAI,E,CAcvEuB,wBAAe,MAAO,CAAC,SAAU,C"}