{"version":3,"names":["CSS","itemWrapper","segmentedControlCss","SegmentedControl","constructor","hostRef","this","handleClick","event","disabled","target","localName","selectItem","mutationObserver","createObserver","setUpItems","appearance","form","undefined","required","name","layout","scale","value","selectedItem","status","validationMessage","validationIcon","validity","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","width","handlePropsChange","handleItemPropChange","valueHandler","items","getItems","forEach","item","checked","handleSelectedItemChange","newItem","oldItem","match","filter","pop","tabIndex","componentWillLoad","setUpLoadableComponent","componentDidLoad","afterConnectDefaultValueSet","setComponentLoaded","connectedCallback","connectInteractive","connectLabel","connectForm","_a","observe","el","childList","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","unobserve","componentDidRender","updateHostInteraction","render","h","Host","key","onClick","role","class","InteractiveContainer","HiddenFormInputSlot","component","Validation","icon","message","handleSelected","preventDefault","stopPropagation","handleKeyDown","keys","indexOf","adjustedKey","getElementDir","selectedIndex","index","previous","length","next","async","componentFocusable","focus","onLabelClick","setFocus","Array","from","querySelectorAll","selected","emit","matches","calciteSegmentedControlChange","isBrowser","lastChecked"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/segmented-control/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/segmented-control/segmented-control.css?tag=calcite-segmented-control&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/segmented-control/segmented-control.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    itemWrapper: \"item-wrapper\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n}\n\n.item-wrapper {\n  display: flex;\n  background-color: var(--calcite-color-foreground-1);\n  inline-size: -moz-fit-content;\n  inline-size: fit-content;\n  outline: 1px solid var(--calcite-color-border-input);\n  outline-offset: -1px;\n}\n\n:host([appearance=outline]) > .item-wrapper {\n  background-color: transparent;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host([layout=vertical]) > .item-wrapper {\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: flex-start;\n}\n\n:host([width=full]) > .item-wrapper {\n  inline-size: 100%;\n  min-inline-size: -moz-fit-content;\n  min-inline-size: fit-content;\n}\n:host([width=full]) > .item-wrapper ::slotted(calcite-segmented-control-item) {\n  flex: 1 1 auto;\n}\n\n:host([width=full][layout=vertical]) > .item-wrapper ::slotted(calcite-segmented-control-item) {\n  justify-content: flex-start;\n}\n\n.validation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n}\n\n:host([scale=m]) .validation-container,\n:host([scale=l]) .validation-container {\n  padding-block-start: 0.5rem;\n}\n\n:host([scale=s]) .validation-container {\n  padding-block-start: 0.25rem;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { afterConnectDefaultValueSet, connectForm, disconnectForm, HiddenFormInputSlot, } from \"../../utils/form\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel } from \"../../utils/label\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Validation } from \"../functional/Validation\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\n/**\n * @slot - A slot for adding `calcite-segmented-control-item`s.\n */\nexport class SegmentedControl {\n    constructor() {\n        //--------------------------------------------------------------------------\n        //\n        //  Event Listeners\n        //\n        //--------------------------------------------------------------------------\n        this.handleClick = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            if (event.target.localName === \"calcite-segmented-control-item\") {\n                this.selectItem(event.target, true);\n            }\n        };\n        this.mutationObserver = createObserver(\"mutation\", () => this.setUpItems());\n        this.appearance = \"solid\";\n        this.disabled = false;\n        this.form = undefined;\n        this.required = false;\n        this.name = undefined;\n        this.layout = \"horizontal\";\n        this.scale = \"m\";\n        this.value = null;\n        this.selectedItem = undefined;\n        this.status = \"idle\";\n        this.validationMessage = undefined;\n        this.validationIcon = undefined;\n        this.validity = {\n            valid: false,\n            badInput: false,\n            customError: false,\n            patternMismatch: false,\n            rangeOverflow: false,\n            rangeUnderflow: false,\n            stepMismatch: false,\n            tooLong: false,\n            tooShort: false,\n            typeMismatch: false,\n            valueMissing: false,\n        };\n        this.width = \"auto\";\n    }\n    handlePropsChange() {\n        this.handleItemPropChange();\n    }\n    valueHandler(value) {\n        const items = this.getItems();\n        items.forEach((item) => (item.checked = item.value === value));\n    }\n    handleSelectedItemChange(newItem, oldItem) {\n        this.value = newItem?.value;\n        if (newItem === oldItem) {\n            return;\n        }\n        const items = this.getItems();\n        const match = items.filter((item) => item === newItem).pop();\n        if (match) {\n            this.selectItem(match);\n        }\n        else if (items[0]) {\n            items[0].tabIndex = 0;\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n        this.setUpItems();\n    }\n    componentDidLoad() {\n        afterConnectDefaultValueSet(this, this.value);\n        setComponentLoaded(this);\n    }\n    connectedCallback() {\n        connectInteractive(this);\n        connectLabel(this);\n        connectForm(this);\n        this.mutationObserver?.observe(this.el, { childList: true });\n        this.handleItemPropChange();\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        this.mutationObserver?.unobserve(this.el);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    render() {\n        return (h(Host, { key: 'a732600395a937851e52f797392d535cdc76ab55', onClick: this.handleClick, role: \"radiogroup\" }, h(\"div\", { key: '890388a900d9740df1b183cd328ffde4f28a000b', class: CSS.itemWrapper }, h(InteractiveContainer, { key: '5d0edef0d414ec5f6bd2bd662465484b682d1e22', disabled: this.disabled }, h(\"slot\", { key: '6fea50f20e471622c6fffdd72815620bedf9a1fc' }), h(HiddenFormInputSlot, { key: 'd96e1d652fdd31e2d3caceecba419162770e196a', component: this }))), this.validationMessage && this.status === \"invalid\" ? (h(Validation, { icon: this.validationIcon, message: this.validationMessage, scale: this.scale, status: this.status })) : null));\n    }\n    handleSelected(event) {\n        event.preventDefault();\n        const el = event.target;\n        if (el.checked) {\n            this.selectItem(el);\n        }\n        event.stopPropagation();\n    }\n    handleKeyDown(event) {\n        const keys = [\"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \" \"];\n        const { key } = event;\n        const { el, selectedItem } = this;\n        if (keys.indexOf(key) === -1) {\n            return;\n        }\n        let adjustedKey = key;\n        if (getElementDir(el) === \"rtl\") {\n            if (key === \"ArrowRight\") {\n                adjustedKey = \"ArrowLeft\";\n            }\n            if (key === \"ArrowLeft\") {\n                adjustedKey = \"ArrowRight\";\n            }\n        }\n        const items = this.getItems();\n        let selectedIndex = -1;\n        items.forEach((item, index) => {\n            if (item === selectedItem) {\n                selectedIndex = index;\n            }\n        });\n        switch (adjustedKey) {\n            case \"ArrowLeft\":\n            case \"ArrowUp\": {\n                event.preventDefault();\n                const previous = selectedIndex < 1 ? items[items.length - 1] : items[selectedIndex - 1];\n                this.selectItem(previous, true);\n                return;\n            }\n            case \"ArrowRight\":\n            case \"ArrowDown\": {\n                event.preventDefault();\n                const next = selectedIndex === -1 ? items[1] : items[selectedIndex + 1] || items[0];\n                this.selectItem(next, true);\n                return;\n            }\n            case \" \":\n                event.preventDefault();\n                this.selectItem(event.target, true);\n                return;\n            default:\n                return;\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    // --------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        (this.selectedItem || this.getItems()[0])?.focus();\n    }\n    handleItemPropChange() {\n        const items = this.getItems();\n        items.forEach((item) => {\n            item.appearance = this.appearance;\n            item.layout = this.layout;\n            item.scale = this.scale;\n        });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    onLabelClick() {\n        this.setFocus();\n    }\n    getItems() {\n        return Array.from(this.el.querySelectorAll(\"calcite-segmented-control-item\"));\n    }\n    selectItem(selected, emit = false) {\n        if (selected === this.selectedItem) {\n            return;\n        }\n        const items = this.getItems();\n        let match = null;\n        items.forEach((item) => {\n            const matches = item === selected;\n            if ((matches && !item.checked) || (!matches && item.checked)) {\n                item.checked = matches;\n            }\n            item.tabIndex = matches ? 0 : -1;\n            if (matches) {\n                match = item;\n                if (emit) {\n                    this.calciteSegmentedControlChange.emit();\n                }\n            }\n        });\n        this.selectedItem = match;\n        if (isBrowser() && match) {\n            match.focus();\n        }\n    }\n    setUpItems() {\n        const items = this.getItems();\n        const lastChecked = items.filter((item) => item.checked).pop();\n        if (lastChecked) {\n            this.selectItem(lastChecked);\n        }\n        else if (items[0]) {\n            items[0].tabIndex = 0;\n        }\n    }\n    static get is() { return \"calcite-segmented-control\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"segmented-control.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"segmented-control.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"appearance\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"outline\\\" | \\\"outline-fill\\\" | \\\"solid\\\", Appearance>\",\n                    \"resolved\": \"\\\"outline\\\" | \\\"outline-fill\\\" | \\\"solid\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Appearance\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Appearance\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the appearance style of the component.\"\n                },\n                \"attribute\": \"appearance\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"solid\\\"\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"layout\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"horizontal\\\" | \\\"vertical\\\", Layout>\",\n                    \"resolved\": \"\\\"horizontal\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Layout\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Layout\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Defines the layout of the component.\"\n                },\n                \"attribute\": \"layout\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"horizontal\\\"\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's `selectedItem` value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"null\"\n            },\n            \"selectedItem\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"HTMLCalciteSegmentedControlItemElement\",\n                    \"resolved\": \"HTMLCalciteSegmentedControlItemElement\",\n                    \"references\": {\n                        \"HTMLCalciteSegmentedControlItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalciteSegmentedControlItemElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"The component's selected item `HTMLElement`.\"\n                }\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the status of the validation message.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"idle\\\"\"\n            },\n            \"validationMessage\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation message to display under the component.\"\n                },\n                \"attribute\": \"validation-message\",\n                \"reflect\": false\n            },\n            \"validationIcon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation icon to display under the component.\"\n                },\n                \"attribute\": \"validation-icon\",\n                \"reflect\": true\n            },\n            \"validity\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MutableValidityState\",\n                    \"resolved\": \"{ valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; }\",\n                    \"references\": {\n                        \"MutableValidityState\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/form\",\n                            \"id\": \"src/utils/form.tsx::MutableValidityState\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"mdn\",\n                            \"text\": \"[ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\"\n                        }],\n                    \"text\": \"The current validation state of the component.\"\n                },\n                \"defaultValue\": \"{\\n    valid: false,\\n    badInput: false,\\n    customError: false,\\n    patternMismatch: false,\\n    rangeOverflow: false,\\n    rangeUnderflow: false,\\n    stepMismatch: false,\\n    tooLong: false,\\n    tooShort: false,\\n    typeMismatch: false,\\n    valueMissing: false,\\n  }\"\n            },\n            \"width\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"auto\\\" | \\\"full\\\", Width>\",\n                    \"resolved\": \"\\\"auto\\\" | \\\"full\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Width\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Width\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the width of the component.\"\n                },\n                \"attribute\": \"width\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"auto\\\"\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteSegmentedControlChange\",\n                \"name\": \"calciteSegmentedControlChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the `calcite-segmented-control-item` selection changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"appearance\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"layout\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"scale\",\n                \"methodName\": \"handlePropsChange\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueHandler\"\n            }, {\n                \"propName\": \"selectedItem\",\n                \"methodName\": \"handleSelectedItemChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"calciteInternalSegmentedControlItemChange\",\n                \"method\": \"handleSelected\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"keydown\",\n                \"method\": \"handleKeyDown\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=segmented-control.js.map\n"],"mappings":"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"}