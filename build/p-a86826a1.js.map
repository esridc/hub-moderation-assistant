{"version":3,"names":["initModeChangeEvent","classList","document","body","prefersDark","window","matchMedia","matches","getMode","contains","darkMode","autoMode","emitModeChange","mode","dispatchEvent","CustomEvent","bubbles","detail","modeChangeHandler","newMode","currentMode","addEventListener","event","MutationObserver","observe","attributes","attributeFilter","appGlobalScript","isBrowser","readyState","once","stampVersion","globalScripts"],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/mode.js","./node_modules/@esri/calcite-components/dist/collection/utils/globalScript.js","@stencil/core/internal/app-globals"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { autoMode, darkMode } from \"./resources\";\n/**\n * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.\n */\nexport function initModeChangeEvent() {\n    const { classList } = document.body;\n    const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const getMode = () => classList.contains(darkMode) || (classList.contains(autoMode) && prefersDark) ? \"dark\" : \"light\";\n    const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent(\"calciteModeChange\", { bubbles: true, detail: { mode } }));\n    const modeChangeHandler = (newMode) => {\n        currentMode !== newMode && emitModeChange(newMode);\n        currentMode = newMode;\n    };\n    let currentMode = getMode();\n    // emits event on page load\n    emitModeChange(currentMode);\n    // emits event when changing OS mode preferences\n    window\n        .matchMedia(\"(prefers-color-scheme: dark)\")\n        .addEventListener(\"change\", (event) => modeChangeHandler(event.matches ? \"dark\" : \"light\"));\n    // emits event when toggling between mode classes on <body>\n    new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {\n        attributes: true,\n        attributeFilter: [\"class\"],\n    });\n}\n//# sourceMappingURL=mode.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { initModeChangeEvent } from \"./mode\";\nimport { stampVersion } from \"./config\";\nimport { isBrowser } from \"./browser\";\n/**\n * This file is imported in Stencil's `globalScript` config option.\n *\n * @see {@link https://stenciljs.com/docs/config#globalscript}\n */\nexport default function () {\n    if (isBrowser()) {\n        if (document.readyState === \"interactive\") {\n            initModeChangeEvent();\n        }\n        else {\n            document.addEventListener(\"DOMContentLoaded\", () => initModeChangeEvent(), { once: true });\n        }\n    }\n    stampVersion();\n}\n//# sourceMappingURL=globalScript.js.map\n","import appGlobalScript from '/home/runner/work/hub-moderation-assistant/hub-moderation-assistant/node_modules/@esri/calcite-components/dist/collection/utils/globalScript.js';\nexport const globalScripts = appGlobalScript;\n"],"mappings":";;;;;GASO,SAASA,IACZ,MAAMC,UAAEA,GAAcC,SAASC,KAC/B,MAAMC,EAAcC,OAAOC,WAAW,gCAAgCC,QACtE,MAAMC,EAAU,IAAMP,EAAUQ,SAASC,IAAcT,EAAUQ,SAASE,IAAaP,EAAe,OAAS,QAC/G,MAAMQ,EAAkBC,GAASX,SAASC,KAAKW,cAAc,IAAIC,YAAY,oBAAqB,CAAEC,QAAS,KAAMC,OAAQ,CAAEJ,WAC7H,MAAMK,EAAqBC,IACvBC,IAAgBD,GAAWP,EAAeO,GAC1CC,EAAcD,CAAO,EAEzB,IAAIC,EAAcZ,IAElBI,EAAeQ,GAEff,OACKC,WAAW,gCACXe,iBAAiB,UAAWC,GAAUJ,EAAkBI,EAAMf,QAAU,OAAS,WAEtF,IAAIgB,kBAAiB,IAAML,EAAkBV,OAAYgB,QAAQtB,SAASC,KAAM,CAC5EsB,WAAY,KACZC,gBAAiB,CAAC,UAE1B,CChBe,SAAAC,IACb,GAAIC,IAAa,CACf,GAAI1B,SAAS2B,aAAe,cAAe,CACzC7B,GACN,KACS,CACHE,SAASmB,iBAAiB,oBAAoB,IAAMrB,KAAuB,CAAE8B,KAAM,MACzF,CACA,CACEC,GACF,CCvBY,MAACC,EAAgBL,S"}