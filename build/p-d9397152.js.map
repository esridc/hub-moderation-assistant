{"version":3,"names":["loggedDeprecations","Set","logLevels","trace","debug","info","warn","error","off","willLog","level","logLevel","forwardToConsole","data","badgeTemplate","badgeStyle","console","call","this","listFormatter","logger","message","deprecated","context","component","name","suggested","removalVersion","key","has","add","multiSuggestions","Array","isArray","Intl","ListFormat","style","type","format","map","suggestion"],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/logger.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { logLevel } from \"./config\";\n/**\n * Exported for testing purposes only\n */\nexport const loggedDeprecations = new Set();\nconst logLevels = {\n    trace: 0,\n    debug: 1,\n    info: 2,\n    warn: 4,\n    error: 8,\n    off: 10,\n};\nfunction willLog(level) {\n    return logLevels[level] >= logLevels[logLevel];\n}\nfunction forwardToConsole(level, ...data) {\n    if (!willLog(level)) {\n        return;\n    }\n    const badgeTemplate = \"%ccalcite\";\n    const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n    console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\nlet listFormatter;\nexport const logger = {\n    debug: (message) => forwardToConsole(\"debug\", message),\n    info: (message) => forwardToConsole(\"info\", message),\n    warn: (message) => forwardToConsole(\"warn\", message),\n    error: (message) => forwardToConsole(\"error\", message),\n    trace: (message) => forwardToConsole(\"trace\", message),\n    deprecated,\n};\nfunction deprecated(context, { component, name, suggested, removalVersion }) {\n    const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n    if (loggedDeprecations.has(key)) {\n        return;\n    }\n    loggedDeprecations.add(key);\n    const multiSuggestions = Array.isArray(suggested);\n    if (multiSuggestions && !listFormatter) {\n        listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n    }\n    const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n    forwardToConsole(\"warn\", message);\n}\n//# sourceMappingURL=logger.js.map\n"],"mappings":";;;;;GASO,MAAMA,EAAqB,IAAIC,IACtC,MAAMC,EAAY,CACdC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,IAAK,IAET,SAASC,EAAQC,GACb,OAAOR,EAAUQ,IAAUR,EAAUS,EACzC,CACA,SAASC,EAAiBF,KAAUG,GAChC,IAAKJ,EAAQC,GAAQ,CACjB,MACR,CACI,MAAMI,EAAgB,YACtB,MAAMC,EAAa,0EACnBC,QAAQN,GAAOO,KAAKC,KAAMJ,EAAeC,KAAeF,EAC5D,CACA,IAAIM,EACQ,MAACC,EAAS,CAClBhB,MAAQiB,GAAYT,EAAiB,QAASS,GAC9ChB,KAAOgB,GAAYT,EAAiB,OAAQS,GAC5Cf,KAAOe,GAAYT,EAAiB,OAAQS,GAC5Cd,MAAQc,GAAYT,EAAiB,QAASS,GAC9ClB,MAAQkB,GAAYT,EAAiB,QAASS,GAC9CC,cAEJ,SAASA,EAAWC,GAASC,UAAEA,EAASC,KAAEA,EAAIC,UAAEA,EAASC,eAAEA,IACvD,MAAMC,EAAM,GAAGL,KAAWA,IAAY,YAAc,GAAKC,IAAYC,IACrE,GAAIzB,EAAmB6B,IAAID,GAAM,CAC7B,MACR,CACI5B,EAAmB8B,IAAIF,GACvB,MAAMG,EAAmBC,MAAMC,QAAQP,GACvC,GAAIK,IAAqBZ,EAAe,CACpCA,EAAgB,IAAIe,KAAKC,WAAW,KAAM,CAAEC,MAAO,OAAQC,KAAM,eACzE,CACI,MAAMhB,EAAU,IAAII,MAASF,0CAAgDI,IAAmB,SAAW,mBAAqB,IAAIA,OAAoBD,EAAY,QAAQK,EAAmBZ,EAAcmB,OAAOZ,EAAUa,KAAKC,GAAe,IAAIA,QAAkB,IAAId,gBAA0B,KACtSd,EAAiB,OAAQS,EAC7B,Q"}