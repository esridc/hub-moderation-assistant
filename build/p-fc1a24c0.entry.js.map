{"version":3,"names":["CSS","button","ICONS","plus","fabCss","Fab","constructor","hostRef","this","appearance","kind","disabled","icon","iconFlipRtl","label","undefined","loading","scale","text","textEnabled","connectedCallback","connectInteractive","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","async","componentFocusable","focusElement","buttonEl","render","title","h","InteractiveContainer","key","class","iconStart","ref","round","type","width"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/fab/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/fab/fab.css?tag=calcite-fab&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/fab/fab.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    button: \"button\",\n};\nexport const ICONS = {\n    plus: \"plus\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  display: flex;\n  background-color: transparent;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\ncalcite-button {\n  --tw-shadow: 0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);\n  --tw-shadow-colored: 0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\ncalcite-button:hover {\n  --tw-shadow: var(--calcite-shadow-md);\n  --tw-shadow-colored: var(--calcite-shadow-md);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\ncalcite-button:active {\n  --tw-shadow: 0 2px 12px -4px rgba(0, 0, 0, 0.2), 0 2px 4px -2px rgba(0, 0, 0, 0.16);\n  --tw-shadow-colored: 0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h } from \"@stencil/core\";\nimport { focusElement } from \"../../utils/dom\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { CSS, ICONS } from \"./resources\";\nexport class Fab {\n    constructor() {\n        this.appearance = \"solid\";\n        this.kind = \"brand\";\n        this.disabled = false;\n        this.icon = ICONS.plus;\n        this.iconFlipRtl = false;\n        this.label = undefined;\n        this.loading = false;\n        this.scale = \"m\";\n        this.text = undefined;\n        this.textEnabled = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    // --------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        focusElement(this.buttonEl);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const { appearance, kind, disabled, loading, scale, textEnabled, icon, label, text, iconFlipRtl, } = this;\n        const title = !textEnabled ? label || text || null : null;\n        return (h(InteractiveContainer, { key: '0466fa59a357502db1c407ffd8008f3620216bbe', disabled: disabled }, h(\"calcite-button\", { key: 'd7cc0cf746d373240a3fb2274d3eeb6283bef052', appearance: appearance === \"solid\" ? \"solid\" : \"outline-fill\", class: CSS.button, disabled: disabled, iconFlipRtl: iconFlipRtl ? \"start\" : null, iconStart: icon, kind: kind, label: label, loading: loading, ref: (buttonEl) => {\n                this.buttonEl = buttonEl;\n            }, round: true, scale: scale, title: title, type: \"button\", width: \"auto\" }, this.textEnabled ? this.text : null)));\n    }\n    static get is() { return \"calcite-fab\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"fab.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"fab.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"appearance\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"solid\\\" | \\\"outline-fill\\\", Appearance>\",\n                    \"resolved\": \"\\\"outline-fill\\\" | \\\"solid\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Appearance\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Appearance\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the appearance style of the component.\"\n                },\n                \"attribute\": \"appearance\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"solid\\\"\"\n            },\n            \"kind\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"brand\\\" | \\\"danger\\\" | \\\"inverse\\\" | \\\"neutral\\\", Kind>\",\n                    \"resolved\": \"\\\"brand\\\" | \\\"danger\\\" | \\\"inverse\\\" | \\\"neutral\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Kind\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Kind\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the kind of the component, which will apply to border and background.\"\n                },\n                \"attribute\": \"kind\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"brand\\\"\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"icon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString\",\n                    \"resolved\": \"string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"default\",\n                            \"text\": \"\\\"plus\\\"\"\n                        }],\n                    \"text\": \"Specifies an icon to display.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true,\n                \"defaultValue\": \"ICONS.plus\"\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a busy indicator is displayed.\"\n                },\n                \"attribute\": \"loading\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"text\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies text to accompany the component's icon.\"\n                },\n                \"attribute\": \"text\",\n                \"reflect\": false\n            },\n            \"textEnabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays the `text` value in the component.\"\n                },\n                \"attribute\": \"text-enabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n//# sourceMappingURL=fab.js.map\n"],"mappings":";;;;;GAKO,MAAMA,EAAM,CACfC,OAAQ,UAEL,MAAMC,EAAQ,CACjBC,KAAM,QCTV,MAAMC,EAAS,wuC,MCUFC,EAAG,MACZC,YAAAC,G,UACIC,KAAKC,WAAa,QAClBD,KAAKE,KAAO,QACZF,KAAKG,SAAW,MAChBH,KAAKI,KAAOV,EAAMC,KAClBK,KAAKK,YAAc,MACnBL,KAAKM,MAAQC,UACbP,KAAKQ,QAAU,MACfR,KAAKS,MAAQ,IACbT,KAAKU,KAAOH,UACZP,KAAKW,YAAc,K,CAOvBC,oBACIC,EAAmBb,K,CAEvBc,oBACIC,EAAuBf,K,CAE3BgB,mBACIC,EAAmBjB,K,CAEvBkB,qBACIC,EAAsBnB,K,CAE1BoB,uBACIC,EAAsBrB,K,CAQ1BsB,uBACUC,EAAmBvB,MACzBwB,EAAaxB,KAAKyB,S,CAOtBC,SACI,MAAMzB,WAAEA,EAAUC,KAAEA,EAAIC,SAAEA,EAAQK,QAAEA,EAAOC,MAAEA,EAAKE,YAAEA,EAAWP,KAAEA,EAAIE,MAAEA,EAAKI,KAAEA,EAAIL,YAAEA,GAAiBL,KACrG,MAAM2B,GAAShB,EAAcL,GAASI,GAAQ,KAAO,KACrD,OAAQkB,EAAEC,EAAsB,CAAEC,IAAK,2CAA4C3B,SAAUA,GAAYyB,EAAE,iBAAkB,CAAEE,IAAK,2CAA4C7B,WAAYA,IAAe,QAAU,QAAU,eAAgB8B,MAAOvC,EAAIC,OAAQU,SAAUA,EAAUE,YAAaA,EAAc,QAAU,KAAM2B,UAAW5B,EAAMF,KAAMA,EAAMI,MAAOA,EAAOE,QAASA,EAASyB,IAAMR,IAC5XzB,KAAKyB,SAAWA,CAAQ,EACzBS,MAAO,KAAMzB,MAAOA,EAAOkB,MAAOA,EAAOQ,KAAM,SAAUC,MAAO,QAAUpC,KAAKW,YAAcX,KAAKU,KAAO,M"}