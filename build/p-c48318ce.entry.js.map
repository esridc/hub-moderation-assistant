{"version":3,"names":["pickListCss","logger","deprecated","name","removalVersion","suggested","PickList","constructor","hostRef","this","lastSelectedItem","mutationObserver","createObserver","mutationObserverCallback","bind","setFilterEl","el","filterEl","setFilteredItems","filteredItems","deselectRemovedItems","deselectSiblingItems","selectSiblings","handleFilter","handleFilterEvent","getItemData","keyDownHandler","disabled","filteredData","filterEnabled","filterPlaceholder","undefined","filterText","headingLevel","loading","multiple","selectionFollowsFocus","selectedValues","Map","dataForFilter","connectedCallback","initialize","call","initializeObserver","connectInteractive","disconnectedCallback","cleanUpObserver","disconnectInteractive","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","handleInitialFilter","componentDidRender","updateHostInteraction","calciteListItemRemoveHandler","event","removeItem","calciteListItemChangeHandler","calciteInternalListItemPropsChangeHandler","stopPropagation","setUpFilter","calciteInternalListItemValueChangeHandler","calciteListFocusOutHandler","setUpItems","async","focusId","componentFocusable","setFocus","getIconType","ICON_TYPES","square","circle","render","h","List","key","onKeyDown","props"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/pick-list/pick-list.css?tag=calcite-pick-list&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/pick-list/pick-list.js"],"sourcesContent":["/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  position: relative;\n  box-sizing: border-box;\n  display: flex;\n  flex-shrink: 0;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: stretch;\n  background-color: transparent;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n  color: var(--calcite-color-text-2);\n}\n:host * {\n  box-sizing: border-box;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host([filter-enabled]) header {\n  margin-block-end: 0.25rem;\n  display: flex;\n  align-items: stretch;\n  justify-content: flex-end;\n  background-color: var(--calcite-color-foreground-1);\n  --tw-shadow: 0 1px 0 var(--calcite-color-border-3);\n  --tw-shadow-colored: 0 1px 0 var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n:host([filter-enabled]) header.sticky-pos {\n  position: sticky;\n  inset-block-start: 0px;\n  z-index: var(--calcite-z-index);\n}\n\ncalcite-filter {\n  margin-block-end: 0px;\n}\n\n:host([loading][disabled]) {\n  min-block-size: 2rem;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, } from \"@stencil/core\";\nimport { connectInteractive, disconnectInteractive, updateHostInteraction, } from \"../../utils/interactive\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { logger } from \"../../utils/logger\";\nimport { ICON_TYPES } from \"./resources\";\nimport { calciteInternalListItemValueChangeHandler, calciteListFocusOutHandler, calciteListItemChangeHandler, cleanUpObserver, deselectRemovedItems, deselectSiblingItems, getItemData, handleFilter, handleFilterEvent, handleInitialFilter, initialize, initializeObserver, keyDownHandler, mutationObserverCallback, removeItem, selectSiblings, setFocus, setUpItems, } from \"./shared-list-logic\";\nimport List from \"./shared-list-render\";\nlogger.deprecated(\"component\", {\n    name: \"pick-list\",\n    removalVersion: 3,\n    suggested: \"list\",\n});\n/**\n * @deprecated Use the `calcite-list` component instead.\n * @slot - A slot for adding `calcite-pick-list-item` or `calcite-pick-list-group` elements. Items are displayed as a vertical list.\n * @slot menu-actions - A slot for adding a button and menu combination for performing actions, such as sorting.\n */\nexport class PickList {\n    constructor() {\n        this.lastSelectedItem = null;\n        this.mutationObserver = createObserver(\"mutation\", mutationObserverCallback.bind(this));\n        this.setFilterEl = (el) => {\n            this.filterEl = el;\n        };\n        this.setFilteredItems = (filteredItems) => {\n            this.filteredItems = filteredItems;\n        };\n        this.deselectRemovedItems = deselectRemovedItems.bind(this);\n        this.deselectSiblingItems = deselectSiblingItems.bind(this);\n        this.selectSiblings = selectSiblings.bind(this);\n        this.handleFilter = handleFilter.bind(this);\n        this.handleFilterEvent = handleFilterEvent.bind(this);\n        this.getItemData = getItemData.bind(this);\n        this.keyDownHandler = keyDownHandler.bind(this);\n        this.disabled = false;\n        this.filteredItems = [];\n        this.filteredData = [];\n        this.filterEnabled = false;\n        this.filterPlaceholder = undefined;\n        this.filterText = undefined;\n        this.headingLevel = undefined;\n        this.loading = false;\n        this.multiple = false;\n        this.selectionFollowsFocus = false;\n        this.selectedValues = new Map();\n        this.dataForFilter = [];\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        initialize.call(this);\n        initializeObserver.call(this);\n        connectInteractive(this);\n    }\n    disconnectedCallback() {\n        cleanUpObserver.call(this);\n        disconnectInteractive(this);\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        handleInitialFilter.call(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    calciteListItemRemoveHandler(event) {\n        removeItem.call(this, event);\n    }\n    calciteListItemChangeHandler(event) {\n        calciteListItemChangeHandler.call(this, event);\n    }\n    calciteInternalListItemPropsChangeHandler(event) {\n        event.stopPropagation();\n        this.setUpFilter();\n    }\n    calciteInternalListItemValueChangeHandler(event) {\n        calciteInternalListItemValueChangeHandler.call(this, event);\n        event.stopPropagation();\n    }\n    calciteListFocusOutHandler(event) {\n        calciteListFocusOutHandler.call(this, event);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    setUpItems() {\n        setUpItems.call(this, \"calcite-pick-list-item\");\n    }\n    setUpFilter() {\n        if (this.filterEnabled) {\n            this.dataForFilter = this.getItemData();\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    // --------------------------------------------------------------------------\n    /** Returns the component's selected `calcite-pick-list-item`s. */\n    async getSelectedItems() {\n        return this.selectedValues;\n    }\n    /**\n     * Sets focus on the component's first focusable element.\n     *\n     * @param focusId\n     */\n    async setFocus(focusId) {\n        await componentFocusable(this);\n        return setFocus.call(this, focusId);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    getIconType() {\n        return this.multiple ? ICON_TYPES.square : ICON_TYPES.circle;\n    }\n    render() {\n        return h(List, { key: '870f354277bb55abb2c867ae250d85a8569505ec', onKeyDown: this.keyDownHandler, props: this });\n    }\n    static get is() { return \"calcite-pick-list\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"pick-list.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"pick-list.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"filteredItems\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"HTMLCalcitePickListItemElement[]\",\n                    \"resolved\": \"HTMLCalcitePickListItemElement[]\",\n                    \"references\": {\n                        \"HTMLCalcitePickListItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalcitePickListItemElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"The component's filtered items.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"filteredData\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"ItemData\",\n                    \"resolved\": \"{ label: string; description: string; metadata: Record<string, unknown>; value: string; }[]\",\n                    \"references\": {\n                        \"ItemData\": {\n                            \"location\": \"import\",\n                            \"path\": \"./shared-list-logic\",\n                            \"id\": \"src/components/pick-list/shared-list-logic.ts::ItemData\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"The component's filtered data.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"filterEnabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, an input appears at the top of the list that can be used by end users to filter items in the list.\"\n                },\n                \"attribute\": \"filter-enabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"filterPlaceholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Placeholder text for the filter input field.\"\n                },\n                \"attribute\": \"filter-placeholder\",\n                \"reflect\": true\n            },\n            \"filterText\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Text for the filter input field.\"\n                },\n                \"attribute\": \"filter-text\",\n                \"reflect\": true\n            },\n            \"headingLevel\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"HeadingLevel\",\n                    \"resolved\": \"1 | 2 | 3 | 4 | 5 | 6\",\n                    \"references\": {\n                        \"HeadingLevel\": {\n                            \"location\": \"import\",\n                            \"path\": \"../functional/Heading\",\n                            \"id\": \"src/components/functional/Heading.tsx::HeadingLevel\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\"\n                },\n                \"attribute\": \"heading-level\",\n                \"reflect\": true\n            },\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a busy indicator is displayed.\"\n                },\n                \"attribute\": \"loading\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Similar to standard radio buttons and checkboxes.\\nWhen `true`, a user can select multiple `calcite-pick-list-item`s at a time.\\nWhen `false`, only a single `calcite-pick-list-item` can be selected at a time,\\nand a new selection will deselect previous selections.\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"selectionFollowsFocus\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true` and single selection is enabled, the selection changes when navigating `calcite-pick-list-item`s via keyboard.\"\n                },\n                \"attribute\": \"selection-follows-focus\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"selectedValues\": {},\n            \"dataForFilter\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteListChange\",\n                \"name\": \"calciteListChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emits when any of the `calcite-pick-list-item` selections have changed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"Map<string, HTMLCalcitePickListItemElement>\",\n                    \"resolved\": \"Map<string, HTMLCalcitePickListItemElement>\",\n                    \"references\": {\n                        \"Map\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Map\"\n                        },\n                        \"HTMLCalcitePickListItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalcitePickListItemElement\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"calciteListFilter\",\n                \"name\": \"calciteListFilter\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emits when a filter has changed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"getSelectedItems\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<Map<string, HTMLCalcitePickListItemElement>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"Map\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Map\"\n                        },\n                        \"HTMLCalcitePickListItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalcitePickListItemElement\"\n                        }\n                    },\n                    \"return\": \"Promise<Map<string, HTMLCalcitePickListItemElement>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns the component's selected `calcite-pick-list-item`s.\",\n                    \"tags\": []\n                }\n            },\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"(focusId?: ListFocusId) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"focusId\",\n                            \"type\": \"\\\"filter\\\"\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"ListFocusId\": {\n                            \"location\": \"import\",\n                            \"path\": \"./shared-list-logic\",\n                            \"id\": \"src/components/pick-list/shared-list-logic.ts::ListFocusId\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first focusable element.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"focusId\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"calciteListItemRemove\",\n                \"method\": \"calciteListItemRemoveHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteListItemChange\",\n                \"method\": \"calciteListItemChangeHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteInternalListItemPropsChange\",\n                \"method\": \"calciteInternalListItemPropsChangeHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteInternalListItemValueChange\",\n                \"method\": \"calciteInternalListItemValueChangeHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"focusout\",\n                \"method\": \"calciteListFocusOutHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=pick-list.js.map\n"],"mappings":"smBAAA,MAAMA,EAAc,itCCapBC,EAAOC,WAAW,YAAa,CAC3BC,KAAM,YACNC,eAAgB,EAChBC,UAAW,S,MAOFC,EAAQ,MACjBC,YAAAC,G,oHACIC,KAAKC,iBAAmB,KACxBD,KAAKE,iBAAmBC,EAAe,WAAYC,EAAyBC,KAAKL,OACjFA,KAAKM,YAAeC,IAChBP,KAAKQ,SAAWD,CAAE,EAEtBP,KAAKS,iBAAoBC,IACrBV,KAAKU,cAAgBA,CAAa,EAEtCV,KAAKW,qBAAuBA,EAAqBN,KAAKL,MACtDA,KAAKY,qBAAuBA,EAAqBP,KAAKL,MACtDA,KAAKa,eAAiBA,EAAeR,KAAKL,MAC1CA,KAAKc,aAAeA,EAAaT,KAAKL,MACtCA,KAAKe,kBAAoBA,EAAkBV,KAAKL,MAChDA,KAAKgB,YAAcA,EAAYX,KAAKL,MACpCA,KAAKiB,eAAiBA,EAAeZ,KAAKL,MAC1CA,KAAKkB,SAAW,MAChBlB,KAAKU,cAAgB,GACrBV,KAAKmB,aAAe,GACpBnB,KAAKoB,cAAgB,MACrBpB,KAAKqB,kBAAoBC,UACzBtB,KAAKuB,WAAaD,UAClBtB,KAAKwB,aAAeF,UACpBtB,KAAKyB,QAAU,MACfzB,KAAK0B,SAAW,MAChB1B,KAAK2B,sBAAwB,MAC7B3B,KAAK4B,eAAiB,IAAIC,IAC1B7B,KAAK8B,cAAgB,E,CAOzBC,oBACIC,EAAWC,KAAKjC,MAChBkC,EAAmBD,KAAKjC,MACxBmC,EAAmBnC,K,CAEvBoC,uBACIC,EAAgBJ,KAAKjC,MACrBsC,EAAsBtC,K,CAE1BuC,oBACIC,EAAuBxC,K,CAE3ByC,mBACIC,EAAmB1C,MACnB2C,EAAoBV,KAAKjC,K,CAE7B4C,qBACIC,EAAsB7C,K,CAE1B8C,6BAA6BC,GACzBC,EAAWf,KAAKjC,KAAM+C,E,CAE1BE,6BAA6BF,GACzBE,EAA6BhB,KAAKjC,KAAM+C,E,CAE5CG,0CAA0CH,GACtCA,EAAMI,kBACNnD,KAAKoD,a,CAETC,0CAA0CN,GACtCM,EAA0CpB,KAAKjC,KAAM+C,GACrDA,EAAMI,iB,CAEVG,2BAA2BP,GACvBO,EAA2BrB,KAAKjC,KAAM+C,E,CAO1CQ,aACIA,EAAWtB,KAAKjC,KAAM,yB,CAE1BoD,cACI,GAAIpD,KAAKoB,cAAe,CACpBpB,KAAK8B,cAAgB9B,KAAKgB,a,EASlCwC,yBACI,OAAOxD,KAAK4B,c,CAOhB4B,eAAeC,SACLC,EAAmB1D,MACzB,OAAO2D,EAAS1B,KAAKjC,KAAMyD,E,CAO/BG,cACI,OAAO5D,KAAK0B,SAAWmC,EAAWC,OAASD,EAAWE,M,CAE1DC,SACI,OAAOC,EAAEC,EAAM,CAAEC,IAAK,2CAA4CC,UAAWpE,KAAKiB,eAAgBoD,MAAOrE,M"}