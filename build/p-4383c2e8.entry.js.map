{"version":3,"names":["CSS","container","contentContainer","contentContainerHasContent","contentContainerHasOnlyContentTopAndBottom","textContentContainer","description","heading","icon","interactive","largeVisualDeprecated","row","selected","selectionIcon","textContent","ICONS","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","SLOTS","contentBottom","contentEnd","contentStart","contentTop","tileCss","Tile","constructor","hostRef","this","clickHandler","setFocus","handleSelectEvent","disabled","selectionMode","calciteTileSelect","emit","handleSlotChange","event","slotName","target","dataset","name","slotChangeHasAssignedElement","setContainerEl","el","containerEl","active","alignment","undefined","embed","href","iconFlipRtl","label","layout","scale","selectionAppearance","hasContentBottom","hasContentEnd","hasContentStart","hasContentTop","async","componentFocusable","_a","focus","connectedCallback","connectInteractive","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","componentDidRender","updateHostInteraction","setUpLoadableComponent","keyDownHandler","key","preventDefault","calciteInternalTileKeyEvent","renderSelectionIcon","h","class","renderTile","isLargeVisual","disableInteraction","Boolean","role","hasContent","hasOnlyContentTopAndBottom","toAriaBoolean","onClick","ref","tabIndex","onSlotchange","flipRtl","render","InteractiveContainer"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/tile/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/tile/tile.css?tag=calcite-tile&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/tile/tile.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    container: \"container\",\n    contentContainer: \"content-container\",\n    contentContainerHasContent: \"content-container--has-content\",\n    contentContainerHasOnlyContentTopAndBottom: \"content-container--has-only-content-top-and-bottom\",\n    textContentContainer: \"text-content-container\",\n    description: \"description\",\n    heading: \"heading\",\n    icon: \"icon\",\n    interactive: \"interactive\",\n    largeVisualDeprecated: \"large-visual-deprecated\",\n    row: \"row\",\n    selected: \"selected\",\n    selectionIcon: \"selection-icon\",\n    textContent: \"text-content\",\n};\nexport const ICONS = {\n    selectedMultiple: \"check-square-f\",\n    selectedSingle: \"circle-f\",\n    unselectedMultiple: \"square\",\n    unselectedSingle: \"circle\",\n};\nexport const SLOTS = {\n    contentBottom: \"content-bottom\",\n    contentEnd: \"content-end\",\n    contentStart: \"content-start\",\n    contentTop: \"content-top\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-tile-background-color: Specifies the background color of the component.\n* @prop --calcite-tile-border-color: Specifies the border color of the component.\n* @prop --calcite-tile-description-text-color: Specifies the description text color of the component.\n* @prop --calcite-tile-heading-text-color: Specifies the heading text color of the component.\n*/\n:host {\n  --calcite-tile-background-color: var(--calcite-color-foreground-1);\n  --calcite-tile-border-color: var(--calcite-color-border-2);\n  --calcite-tile-description-text-color: var(--calcite-color-text-3);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-2);\n  --calcite-ui-icon-color: var(--calcite-color-text-3);\n  box-sizing: border-box;\n  display: inline-block;\n}\n\n.container {\n  background-color: var(--calcite-tile-background-color);\n  block-size: var(--calcite-container-size-content-fluid);\n  box-sizing: border-box;\n  inline-size: var(--calcite-container-size-content-fluid);\n  outline: var(--calcite-border-width-sm, 1px) solid var(--calcite-tile-border-color);\n  -webkit-user-select: none;\n          user-select: none;\n}\n.container.interactive {\n  cursor: pointer;\n}\n.container.interactive:hover, .container.interactive:focus, .container.interactive.selected {\n  outline-color: var(--calcite-color-brand);\n  position: relative;\n}\n.container.interactive:hover .selection-icon, .container.interactive:focus .selection-icon, .container.interactive.selected .selection-icon {\n  --calcite-ui-icon-color: var(--calcite-color-brand);\n}\n.container.interactive.selected {\n  z-index: var(--calcite-z-index);\n}\n.container.interactive:focus {\n  box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n  z-index: var(--calcite-z-index-sticky);\n}\n\n.content-container,\n.row {\n  align-items: flex-start;\n  display: flex;\n}\n\n.content-container {\n  flex-direction: column;\n}\n\n.text-content-container {\n  inline-size: 100%;\n  outline-color: transparent;\n  padding: 0;\n}\n\n.text-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.heading {\n  color: var(--calcite-tile-heading-text-color);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1.20313rem;\n  overflow-wrap: break-word;\n}\n\n/* [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead */\n.large-visual-deprecated {\n  align-items: center;\n  justify-content: center;\n  min-block-size: 12rem;\n  text-align: center;\n}\n.large-visual-deprecated calcite-icon {\n  align-self: center;\n  block-size: 64px;\n  inline-size: 64px;\n}\n.large-visual-deprecated .text-content-container {\n  justify-content: center;\n}\n\n.description {\n  color: var(--calcite-tile-description-text-color);\n  font-weight: var(--calcite-font-weight-regular);\n  overflow-wrap: break-word;\n}\n\n:host([alignment=center]) .icon {\n  align-self: center;\n}\n:host([alignment=center]) .text-content-container {\n  justify-content: center;\n}\n:host([alignment=center]) .text-content {\n  text-align: center;\n}\n:host([alignment=center]) slot[name=content-start]::slotted(*),\n:host([alignment=center]) slot[name=content-end]::slotted(*),\n:host([alignment=center]) slot[name=content-top]::slotted(*),\n:host([alignment=center]) slot[name=content-bottom]::slotted(*) {\n  align-self: center;\n}\n\n:host([scale=s]) {\n  max-inline-size: 400px;\n  min-inline-size: 100px;\n}\n:host([scale=s]) .container {\n  padding: var(--calcite-spacing-sm);\n}\n:host([scale=s]) .content-container--has-content,\n:host([scale=s]) .row {\n  gap: var(--calcite-spacing-sm);\n}\n:host([scale=s]) .heading {\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.03125rem;\n}\n:host([scale=s]) .description {\n  font-size: var(--calcite-font-size--3);\n  line-height: 0.85938rem;\n}\n:host([scale=s]) .content-container--has-only-content-top-and-bottom slot[name=content-top]::slotted(*) {\n  margin-block-end: var(--calcite-spacing-sm);\n}\n\n:host([scale=m]) {\n  max-inline-size: 460px;\n  min-inline-size: 140px;\n}\n:host([scale=m]) .container {\n  padding: var(--calcite-spacing-md);\n}\n:host([scale=m]) .content-container--has-content,\n:host([scale=m]) .row {\n  gap: var(--calcite-spacing-md);\n}\n:host([scale=m]) .heading {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.20313rem;\n}\n:host([scale=m]) .description {\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.03125rem;\n}\n:host([scale=m]) .content-container--has-only-content-top-and-bottom slot[name=content-top]::slotted(*) {\n  margin-block-end: var(--calcite-spacing-md);\n}\n\n:host([scale=l]) {\n  max-inline-size: 520px;\n  min-inline-size: 160px;\n}\n:host([scale=l]) .container {\n  padding: var(--calcite-spacing-xl);\n}\n:host([scale=l]) .content-container--has-content,\n:host([scale=l]) .row {\n  gap: var(--calcite-spacing-xl);\n}\n:host([scale=l]) .heading {\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375rem;\n}\n:host([scale=l]) .description {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.20313rem;\n}\n:host([scale=l]) .content-container--has-only-content-top-and-bottom slot[name=content-top]::slotted(*) {\n  margin-block-end: var(--calcite-spacing-xl);\n}\n\n:host([selection-appearance=border][layout=horizontal]) .container.selected:focus::before,\n:host([selection-appearance=border][layout=vertical]) .container.selected:focus::before {\n  block-size: 100%;\n  box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n  content: \"\";\n  display: block;\n  inline-size: 100%;\n  inset-block-start: 0;\n  inset-inline-start: 0;\n  position: absolute;\n}\n\n:host([selection-appearance=border][layout=horizontal]) .container.selected {\n  box-shadow: inset 0 -4px 0 0 var(--calcite-color-brand);\n}\n\n:host([selection-appearance=border][layout=vertical]) .container.selected {\n  box-shadow: inset 4px 0 0 0 var(--calcite-color-brand);\n}\n\n:host([href]:focus:not([disabled])),\n:host([href]:hover:not([disabled])) {\n  --calcite-tile-border-color: var(--calcite-color-text-link);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-link);\n  --calcite-ui-icon-color: var(--calcite-color-text-link);\n}\n:host([href]:focus:not([disabled])) .container,\n:host([href]:hover:not([disabled])) .container {\n  position: relative;\n  z-index: var(--calcite-z-index);\n}\n\n:host([href]:active:not([disabled])) .container {\n  box-shadow: 0 0 0 3px var(--calcite-tile-border-color);\n}\n\n:host([embed]) .container {\n  box-shadow: none;\n  padding: 0;\n}\n\n:host([selection-mode=none]) .container {\n  outline-color: var(--calcite-tile-border-color);\n}\n:host([selection-mode=none]) .container:focus {\n  outline-color: var(--calcite-color-brand);\n  position: relative;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host(:hover:not([disabled])),\n:host([active]:not([disabled])) {\n  --calcite-tile-description-text-color: var(--calcite-color-text-2);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-1);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}\n\n::slotted(*) {\n  max-inline-size: 100%;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, } from \"@stencil/core\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n/**\n * @slot content-top - A slot for adding non-actionable elements above the component's content.  Content slotted here will render in place of the `icon` property.\n * @slot content-bottom - A slot for adding non-actionable elements below the component's content.\n * @slot content-start - [Deprecated] use `content-top` slot instead.  A slot for adding non-actionable elements before the component's content.\n * @slot content-end - [Deprecated] use `content-bottom` slot instead. A slot for adding non-actionable elements after the component's content.\n */\nexport class Tile {\n    constructor() {\n        this.clickHandler = () => {\n            if (this.interactive) {\n                this.setFocus();\n                this.handleSelectEvent();\n            }\n        };\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.handleSelectEvent = () => {\n            if (this.disabled ||\n                !this.interactive ||\n                (this.selectionMode === \"single-persist\" && this.selected === true)) {\n                return;\n            }\n            this.calciteTileSelect.emit();\n        };\n        this.handleSlotChange = (event) => {\n            const slotName = event.target.dataset.name;\n            this[`has${slotName}`] = slotChangeHasAssignedElement(event);\n        };\n        this.setContainerEl = (el) => {\n            this.containerEl = el;\n        };\n        this.active = false;\n        this.alignment = \"start\";\n        this.description = undefined;\n        this.disabled = false;\n        this.embed = false;\n        this.heading = undefined;\n        this.href = undefined;\n        this.icon = undefined;\n        this.iconFlipRtl = false;\n        this.interactive = false;\n        this.label = undefined;\n        this.layout = \"horizontal\";\n        this.scale = \"m\";\n        this.selected = false;\n        this.selectionAppearance = \"icon\";\n        this.selectionMode = \"none\";\n        this.hasContentBottom = false;\n        this.hasContentEnd = false;\n        this.hasContentStart = false;\n        this.hasContentTop = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        if (!this.disabled && this.interactive) {\n            this.containerEl?.focus();\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    keyDownHandler(event) {\n        if (event.target === this.el) {\n            switch (event.key) {\n                case \" \":\n                case \"Enter\":\n                    this.handleSelectEvent();\n                    event.preventDefault();\n                    break;\n                case \"ArrowDown\":\n                case \"ArrowLeft\":\n                case \"ArrowRight\":\n                case \"ArrowUp\":\n                case \"Home\":\n                case \"End\":\n                    this.calciteInternalTileKeyEvent.emit(event);\n                    event.preventDefault();\n                    break;\n            }\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    renderSelectionIcon() {\n        const { selected, selectionAppearance, selectionMode } = this;\n        if (selectionAppearance === \"icon\" && selectionMode !== \"none\") {\n            return (h(\"calcite-icon\", { class: CSS.selectionIcon, icon: selected\n                    ? selectionMode === \"multiple\"\n                        ? ICONS.selectedMultiple\n                        : ICONS.selectedSingle\n                    : selectionMode === \"multiple\"\n                        ? ICONS.unselectedMultiple\n                        : ICONS.unselectedSingle, scale: \"s\" }));\n        }\n        return;\n    }\n    renderTile() {\n        const { description, disabled, hasContentBottom, hasContentEnd, hasContentStart, hasContentTop, heading, icon, iconFlipRtl, interactive, selectionMode, } = this;\n        const isLargeVisual = heading && icon && !description;\n        const disableInteraction = Boolean(this.href) || !interactive;\n        const role = selectionMode === \"multiple\" && interactive\n            ? \"checkbox\"\n            : selectionMode !== \"none\" && interactive\n                ? \"radio\"\n                : interactive\n                    ? \"button\"\n                    : undefined;\n        const hasContent = !!(description || hasContentEnd || hasContentStart || heading || icon);\n        const hasOnlyContentTopAndBottom = !hasContent && hasContentTop && hasContentBottom;\n        return (h(\"div\", { \"aria-checked\": selectionMode !== \"none\" && interactive ? toAriaBoolean(this.selected) : undefined, \"aria-disabled\": disableInteraction ? toAriaBoolean(disabled) : undefined, \"aria-label\": role && this.label, class: {\n                [CSS.container]: true,\n                [CSS.interactive]: interactive,\n                // [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead\n                [CSS.largeVisualDeprecated]: isLargeVisual,\n                [CSS.row]: true,\n                [CSS.selected]: this.selected,\n            }, onClick: this.clickHandler, ref: this.setContainerEl, role: role, tabIndex: disableInteraction ? undefined : 0 }, this.renderSelectionIcon(), h(\"div\", { class: {\n                [CSS.contentContainer]: true,\n                [CSS.contentContainerHasContent]: hasContent,\n                [CSS.contentContainerHasOnlyContentTopAndBottom]: hasOnlyContentTopAndBottom,\n            } }, h(\"slot\", { \"data-name\": \"ContentTop\", name: SLOTS.contentTop, onSlotchange: this.handleSlotChange }), icon && h(\"calcite-icon\", { class: CSS.icon, flipRtl: iconFlipRtl, icon: icon, scale: \"l\" }), h(\"div\", { class: { [CSS.textContentContainer]: true, [CSS.row]: true } }, h(\"slot\", { \"data-name\": \"ContentStart\", name: SLOTS.contentStart, onSlotchange: this.handleSlotChange }), h(\"div\", { class: CSS.textContent }, heading && h(\"div\", { class: CSS.heading }, heading), description && h(\"div\", { class: CSS.description }, description)), h(\"slot\", { \"data-name\": \"ContentEnd\", name: SLOTS.contentEnd, onSlotchange: this.handleSlotChange })), h(\"slot\", { \"data-name\": \"ContentBottom\", name: SLOTS.contentBottom, onSlotchange: this.handleSlotChange }))));\n    }\n    render() {\n        const { disabled } = this;\n        return (h(InteractiveContainer, { key: '44e009a3b57314cffef00440f612e3d1667e1872', disabled: disabled }, this.href ? (h(\"calcite-link\", { disabled: disabled, href: this.href }, this.renderTile())) : (this.renderTile())));\n    }\n    static get is() { return \"calcite-tile\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tile.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tile.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"active\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When `true`, the component is active.\"\n                },\n                \"attribute\": \"active\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Exclude<Alignment, \\\"end\\\">\",\n                    \"resolved\": \"\\\"center\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Exclude\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Exclude\"\n                        },\n                        \"Alignment\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Alignment\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the alignment of the Tile's content.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"start\\\"\"\n            },\n            \"description\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A description for the component, which displays below the heading.\"\n                },\n                \"attribute\": \"description\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"embed\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"No longer necessary.\"\n                        }],\n                    \"text\": \"The component's embed mode.\\n\\nWhen `true`, renders without a border and padding for use by other components.\"\n                },\n                \"attribute\": \"embed\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"heading\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component header text, which displays between the icon and description.\"\n                },\n                \"attribute\": \"heading\",\n                \"reflect\": true\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When embed is `\\\"false\\\"`, the URL for the component.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": true\n            },\n            \"icon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString\",\n                    \"resolved\": \"string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an icon to display.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"interactive\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When true, enables the tile to be focused, and allows the `calciteTileSelect` to emit.\\nThis is set to `true` by a parent Tile Group component.\"\n                },\n                \"attribute\": \"interactive\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"layout\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<Layout, \\\"horizontal\\\" | \\\"vertical\\\">\",\n                    \"resolved\": \"\\\"horizontal\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Layout\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Layout\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Defines the layout of the component.\\n\\nUse `\\\"horizontal\\\"` for rows, and `\\\"vertical\\\"` for a single column.\"\n                },\n                \"attribute\": \"layout\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"horizontal\\\"\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"selected\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true` and the parent's `selectionMode` is `\\\"single\\\"`, `\\\"single-persist\\\"', or `\\\"multiple\\\"`, the component is selected.\"\n                },\n                \"attribute\": \"selected\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"selectionAppearance\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectionAppearance\",\n                    \"resolved\": \"\\\"border\\\" | \\\"icon\\\"\",\n                    \"references\": {\n                        \"SelectionAppearance\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionAppearance\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the selection appearance, where:\\n\\n- `\\\"icon\\\"` (displays a checkmark or dot), or\\n- `\\\"border\\\"` (displays a border).\\n\\nThis property is set by the parent tile-group.\"\n                },\n                \"attribute\": \"selection-appearance\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"icon\\\"\"\n            },\n            \"selectionMode\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\n    \\\"multiple\\\" | \\\"none\\\" | \\\"single\\\" | \\\"single-persist\\\",\\n    SelectionMode\\n  >\",\n                    \"resolved\": \"\\\"multiple\\\" | \\\"none\\\" | \\\"single\\\" | \\\"single-persist\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"SelectionMode\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionMode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the selection mode, where:\\n\\n- `\\\"multiple\\\"` (allows any number of selected items),\\n- `\\\"single\\\"` (allows only one selected item),\\n- `\\\"single-persist\\\"` (allows only one selected item and prevents de-selection),\\n- `\\\"none\\\"` (allows no selected items).\\n\\nThis property is set by the parent tile-group.\"\n                },\n                \"attribute\": \"selection-mode\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"none\\\"\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"hasContentBottom\": {},\n            \"hasContentEnd\": {},\n            \"hasContentStart\": {},\n            \"hasContentTop\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteInternalTileKeyEvent\",\n                \"name\": \"calciteInternalTileKeyEvent\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"KeyboardEvent\",\n                    \"resolved\": \"KeyboardEvent\",\n                    \"references\": {\n                        \"KeyboardEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::KeyboardEvent\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"calciteTileSelect\",\n                \"name\": \"calciteTileSelect\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the selected state of the component changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"keydown\",\n                \"method\": \"keyDownHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=tile.js.map\n"],"mappings":"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"}