{"version":3,"names":["CSS","loader","clearButton","editingEnabled","inlineChild","inputIcon","prefix","suffix","wrapper","inputWrapper","actionWrapper","resizeIconWrapper","SLOTS","action","inputTextCss","InputText","constructor","hostRef","this","previousValueOrigin","mutationObserver","createObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputTextValue","preventDefault","submitForm","nativeEvent","setValue","committing","origin","value","emitChangeIfUserModified","previousEmittedValue","calciteInputTextChange","emit","setPreviousEmittedValue","inputTextBlurHandler","calciteInternalInputTextBlur","element","childEl","clickHandler","slottedActionEl","getSlotted","el","target","setFocus","inputTextFocusHandler","calciteInternalInputTextFocus","inputTextInputHandler","inputTextKeyDownHandler","onHiddenFormInputInput","name","stopPropagation","setChildElRef","setInputValue","newInputValue","setPreviousValue","previousValue","calciteInputTextInputEvent","calciteInputTextInput","alignment","autofocus","undefined","clearable","enterKeyHint","form","icon","iconFlipRtl","inputMode","label","loading","maxLength","minLength","validationMessage","validationIcon","validity","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","placeholder","prefixText","required","scale","status","autocomplete","pattern","suffixText","messages","messageOverrides","effectiveLocale","defaultMessages","slottedActionElDisabledInternally","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","onMessagesChange","valueWatcher","newValue","updateRequestedIcon","requestedIcon","setRequestedIcon","length","effectiveLocaleChange","updateMessages","connectedCallback","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","connectLabel","connectForm","_a","observe","childList","addEventListener","internalHiddenInputInputEvent","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","async","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","componentFocusable","focus","select","onLabelClick","syncHiddenFormInput","input","getAttribute","setAttribute","removeAttribute","render","dir","getElementDir","h","class","type","inputClearButton","clear","onClick","tabIndex","getIconScale","iconEl","flipRtl","getLabelText","defaultValue","onBlur","onFocus","onInput","onKeyDown","ref","Host","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","Validation","message","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/input-text/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/input-text/input-text.css?tag=calcite-input-text&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/input-text/input-text.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    loader: \"loader\",\n    clearButton: \"clear-button\",\n    editingEnabled: \"editing-enabled\",\n    inlineChild: \"inline-child\",\n    inputIcon: \"icon\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    wrapper: \"element-wrapper\",\n    inputWrapper: \"wrapper\",\n    actionWrapper: \"action-wrapper\",\n    resizeIconWrapper: \"resize-icon-wrapper\",\n};\nexport const SLOTS = {\n    action: \"action\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  display: block;\n}\n\n:host([scale=s]) input {\n  padding-inline-start: 0.5rem;\n  padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, 0.5rem);\n}\n:host([scale=s]) input, :host([scale=s]) .prefix, :host([scale=s]) .suffix {\n  block-size: 1.5rem;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1rem;\n}\n:host([scale=s]) .prefix, :host([scale=s]) .suffix {\n  padding-inline: 0.5rem;\n}\n:host([scale=s]) .action-wrapper calcite-button, :host([scale=s]) .action-wrapper calcite-button button {\n  block-size: 1.5rem;\n}\n:host([scale=s]) .clear-button {\n  min-block-size: 1.5rem;\n  min-inline-size: 1.5rem;\n}\n\n:host([scale=m]) input {\n  padding-inline-start: 0.75rem;\n  padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, 0.75rem);\n}\n:host([scale=m]) input, :host([scale=m]) .prefix, :host([scale=m]) .suffix {\n  block-size: 2rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1rem;\n}\n:host([scale=m]) .prefix, :host([scale=m]) .suffix {\n  padding-inline: 0.75rem;\n}\n:host([scale=m]) .action-wrapper calcite-button, :host([scale=m]) .action-wrapper calcite-button button {\n  block-size: 2rem;\n}\n:host([scale=m]) .clear-button {\n  min-block-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n:host([scale=l]) input {\n  padding-inline-start: 1rem;\n  padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, 1rem);\n}\n:host([scale=l]) input, :host([scale=l]) .prefix, :host([scale=l]) .suffix {\n  block-size: 2.75rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.25rem;\n}\n:host([scale=l]) .prefix, :host([scale=l]) .suffix {\n  padding-inline: 1rem;\n}\n:host([scale=l]) .action-wrapper calcite-button, :host([scale=l]) .action-wrapper calcite-button button {\n  block-size: 2.75rem;\n}\n:host([scale=l]) .clear-button {\n  min-block-size: 2.75rem;\n  min-inline-size: 2.75rem;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\ninput {\n  transition: var(--calcite-animation-timing), block-size 0, outline-offset 0s;\n  -webkit-appearance: none;\n  position: relative;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  max-block-size: 100%;\n  inline-size: 100%;\n  max-inline-size: 100%;\n  flex: 1 1 0%;\n  text-overflow: ellipsis;\n  border-radius: 0px;\n  background-color: var(--calcite-color-foreground-1);\n  font-family: inherit;\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-1);\n}\ninput:placeholder-shown {\n  text-overflow: ellipsis;\n}\n\ninput {\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  color: var(--calcite-color-text-1);\n}\ninput::placeholder, input:-ms-input-placeholder, input::-ms-input-placeholder {\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-3);\n}\n\ninput:focus {\n  border-color: var(--calcite-color-brand);\n  color: var(--calcite-color-text-1);\n}\n\ninput[readonly] {\n  background-color: var(--calcite-color-background);\n  font-weight: var(--calcite-font-weight-medium);\n}\n\ninput[readonly]:focus {\n  color: var(--calcite-color-text-1);\n}\n\ncalcite-icon {\n  color: var(--calcite-color-text-3);\n}\n\ninput {\n  outline-color: transparent;\n}\n\ninput:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([status=invalid]) input {\n  border-color: var(--calcite-color-status-danger);\n}\n:host([status=invalid]) input:focus {\n  outline: 2px solid var(--calcite-color-status-danger);\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([scale=s]) .icon {\n  inset-inline-start: 0.5rem;\n}\n\n:host([scale=m]) .icon {\n  inset-inline-start: 0.75rem;\n}\n\n:host([scale=l]) .icon {\n  inset-inline-start: 1rem;\n}\n\n:host([icon][scale=s]) input {\n  padding-inline-start: 2rem;\n}\n\n:host([icon][scale=m]) input {\n  padding-inline-start: 2.5rem;\n}\n\n:host([icon][scale=l]) input {\n  padding-inline-start: 3.5rem;\n}\n\n.element-wrapper {\n  position: relative;\n  order: 3;\n  display: inline-flex;\n  flex: 1 1 0%;\n  align-items: center;\n}\n\n.icon {\n  pointer-events: none;\n  position: absolute;\n  z-index: var(--calcite-z-index);\n  display: block;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n\ninput[type=text]::-ms-clear,\ninput[type=text]::-ms-reveal {\n  display: none;\n  block-size: 0px;\n  inline-size: 0px;\n}\n\n.clear-button {\n  pointer-events: initial;\n  order: 4;\n  margin: 0px;\n  box-sizing: border-box;\n  display: flex;\n  min-block-size: 100%;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  align-self: stretch;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  outline-color: transparent;\n  border-inline-start-width: 0px;\n}\n.clear-button:hover {\n  background-color: var(--calcite-color-foreground-2);\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.clear-button:hover calcite-icon {\n  color: var(--calcite-color-text-1);\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\n.clear-button:active {\n  background-color: var(--calcite-color-foreground-3);\n}\n.clear-button:active calcite-icon {\n  color: var(--calcite-color-text-1);\n}\n.clear-button:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.clear-button:disabled {\n  opacity: var(--calcite-opacity-disabled);\n}\n\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  pointer-events: none;\n  position: absolute;\n  display: block;\n}\n\n.action-wrapper {\n  order: 7;\n  display: flex;\n}\n\n.prefix,\n.suffix {\n  box-sizing: border-box;\n  display: flex;\n  block-size: auto;\n  min-block-size: 100%;\n  -webkit-user-select: none;\n          user-select: none;\n  align-content: center;\n  align-items: center;\n  overflow-wrap: break-word;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-background);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1;\n  color: var(--calcite-color-text-2);\n}\n\n.prefix {\n  order: 2;\n  border-inline-end-width: 0px;\n}\n\n.suffix {\n  order: 5;\n  border-inline-start-width: 0px;\n}\n\n:host([alignment=start]) input {\n  text-align: start;\n}\n\n:host([alignment=end]) input {\n  text-align: end;\n}\n\n.wrapper {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n:host(.no-bottom-border) input {\n  border-block-end-width: 0px;\n}\n\n:host(.border-top-color-one) input {\n  border-block-start-color: var(--calcite-color-border-1);\n}\n\ninput.inline-child {\n  background-color: transparent;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n}\ninput.inline-child .editing-enabled {\n  background-color: inherit;\n}\ninput.inline-child:not(.editing-enabled) {\n  display: flex;\n  cursor: pointer;\n  text-overflow: ellipsis;\n  border-color: transparent;\n  padding-inline-start: 0;\n}\n\n.validation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n}\n\n:host([scale=m]) .validation-container,\n:host([scale=l]) .validation-container {\n  padding-block-start: 0.5rem;\n}\n\n:host([scale=s]) .validation-container {\n  padding-block-start: 0.25rem;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { forceUpdate, h, Host, } from \"@stencil/core\";\nimport { getElementDir, getSlotted, setRequestedIcon } from \"../../utils/dom\";\nimport { connectForm, disconnectForm, HiddenFormInputSlot, internalHiddenInputInputEvent, submitForm, } from \"../../utils/form\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { syncHiddenFormInput } from \"../input/common/input\";\nimport { CSS, SLOTS } from \"./resources\";\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\nexport class InputText {\n    constructor() {\n        this.previousValueOrigin = \"initial\";\n        this.mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n        this.userChangedValue = false;\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this.keyDownHandler = (event) => {\n            if (this.readOnly || this.disabled || event.defaultPrevented) {\n                return;\n            }\n            if (this.isClearable && event.key === \"Escape\") {\n                this.clearInputTextValue(event);\n                event.preventDefault();\n            }\n            if (event.key === \"Enter\") {\n                if (submitForm(this)) {\n                    event.preventDefault();\n                }\n            }\n        };\n        this.clearInputTextValue = (nativeEvent) => {\n            this.setValue({\n                committing: true,\n                nativeEvent,\n                origin: \"user\",\n                value: \"\",\n            });\n        };\n        this.emitChangeIfUserModified = () => {\n            if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n                this.calciteInputTextChange.emit();\n                this.setPreviousEmittedValue(this.value);\n            }\n        };\n        this.inputTextBlurHandler = () => {\n            this.calciteInternalInputTextBlur.emit({\n                element: this.childEl,\n                value: this.value,\n            });\n            this.emitChangeIfUserModified();\n        };\n        this.clickHandler = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            const slottedActionEl = getSlotted(this.el, \"action\");\n            if (event.target !== slottedActionEl) {\n                this.setFocus();\n            }\n        };\n        this.inputTextFocusHandler = () => {\n            this.calciteInternalInputTextFocus.emit({\n                element: this.childEl,\n                value: this.value,\n            });\n        };\n        this.inputTextInputHandler = (nativeEvent) => {\n            if (this.disabled || this.readOnly) {\n                return;\n            }\n            this.setValue({\n                nativeEvent,\n                origin: \"user\",\n                value: nativeEvent.target.value,\n            });\n        };\n        this.inputTextKeyDownHandler = (event) => {\n            if (this.disabled || this.readOnly) {\n                return;\n            }\n            if (event.key === \"Enter\") {\n                this.emitChangeIfUserModified();\n            }\n        };\n        this.onHiddenFormInputInput = (event) => {\n            if (event.target.name === this.name) {\n                this.setValue({\n                    value: event.target.value,\n                    origin: \"direct\",\n                });\n            }\n            this.setFocus();\n            event.stopPropagation();\n        };\n        this.setChildElRef = (el) => {\n            this.childEl = el;\n        };\n        this.setInputValue = (newInputValue) => {\n            if (!this.childEl) {\n                return;\n            }\n            this.childEl.value = newInputValue;\n        };\n        this.setPreviousEmittedValue = (value) => {\n            this.previousEmittedValue = value;\n        };\n        this.setPreviousValue = (value) => {\n            this.previousValue = value;\n        };\n        this.setValue = ({ committing = false, nativeEvent, origin, previousValue, value, }) => {\n            this.setPreviousValue(previousValue ?? this.value);\n            this.previousValueOrigin = origin;\n            this.userChangedValue = origin === \"user\" && value !== this.value;\n            this.value = value;\n            if (origin === \"direct\") {\n                this.setInputValue(value);\n                this.setPreviousEmittedValue(value);\n            }\n            if (nativeEvent) {\n                const calciteInputTextInputEvent = this.calciteInputTextInput.emit();\n                if (calciteInputTextInputEvent.defaultPrevented) {\n                    this.value = this.previousValue;\n                }\n                else if (committing) {\n                    this.emitChangeIfUserModified();\n                }\n            }\n        };\n        this.alignment = \"start\";\n        this.autofocus = undefined;\n        this.clearable = false;\n        this.disabled = false;\n        this.enterKeyHint = undefined;\n        this.form = undefined;\n        this.icon = undefined;\n        this.iconFlipRtl = false;\n        this.inputMode = undefined;\n        this.label = undefined;\n        this.loading = false;\n        this.maxLength = undefined;\n        this.minLength = undefined;\n        this.validationMessage = undefined;\n        this.validationIcon = undefined;\n        this.validity = {\n            valid: false,\n            badInput: false,\n            customError: false,\n            patternMismatch: false,\n            rangeOverflow: false,\n            rangeUnderflow: false,\n            stepMismatch: false,\n            tooLong: false,\n            tooShort: false,\n            typeMismatch: false,\n            valueMissing: false,\n        };\n        this.name = undefined;\n        this.placeholder = undefined;\n        this.prefixText = undefined;\n        this.readOnly = false;\n        this.required = false;\n        this.scale = \"m\";\n        this.status = \"idle\";\n        this.autocomplete = undefined;\n        this.pattern = undefined;\n        this.suffixText = undefined;\n        this.editingEnabled = false;\n        this.value = \"\";\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.effectiveLocale = undefined;\n        this.defaultMessages = undefined;\n        this.slottedActionElDisabledInternally = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Global attributes\n    //\n    //--------------------------------------------------------------------------\n    handleGlobalAttributesChanged() {\n        forceUpdate(this);\n    }\n    disabledWatcher() {\n        this.setDisabledAction();\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    valueWatcher(newValue, previousValue) {\n        if (!this.userChangedValue) {\n            this.setValue({\n                origin: \"direct\",\n                previousValue,\n                value: !newValue ? \"\" : newValue,\n            });\n        }\n        this.userChangedValue = false;\n    }\n    updateRequestedIcon() {\n        this.requestedIcon = setRequestedIcon({}, this.icon, \"text\");\n    }\n    get isClearable() {\n        return this.clearable && this.value.length > 0;\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLocalized(this);\n        connectMessages(this);\n        this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n        if (this.inlineEditableEl) {\n            this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n        }\n        connectLabel(this);\n        connectForm(this);\n        this.mutationObserver?.observe(this.el, { childList: true });\n        this.setDisabledAction();\n        this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        this.mutationObserver?.disconnect();\n        this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        this.requestedIcon = setRequestedIcon({}, this.icon, \"text\");\n        await setUpMessages(this);\n        this.setPreviousEmittedValue(this.value);\n        this.setPreviousValue(this.value);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        this.childEl?.focus();\n    }\n    /** Selects the text of the component's `value`. */\n    async selectText() {\n        this.childEl?.select();\n    }\n    onLabelClick() {\n        this.setFocus();\n    }\n    syncHiddenFormInput(input) {\n        syncHiddenFormInput(\"text\", this, input);\n    }\n    setDisabledAction() {\n        const slottedActionEl = getSlotted(this.el, \"action\");\n        if (!slottedActionEl) {\n            return;\n        }\n        if (this.disabled) {\n            if (slottedActionEl.getAttribute(\"disabled\") == null) {\n                this.slottedActionElDisabledInternally = true;\n            }\n            slottedActionEl.setAttribute(\"disabled\", \"\");\n        }\n        else if (this.slottedActionElDisabledInternally) {\n            slottedActionEl.removeAttribute(\"disabled\");\n            this.slottedActionElDisabledInternally = false;\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const dir = getElementDir(this.el);\n        const loader = (h(\"div\", { key: '312dd68091ac57f7846a3e52fc9d800c7fced5b3', class: CSS.loader }, h(\"calcite-progress\", { key: '4debe7e7c6a87be5065019e831c65bc227a557a7', label: this.messages.loading, type: \"indeterminate\" })));\n        const inputClearButton = (h(\"button\", { key: 'fbfd74e5d928be2208ee053208f07d17bf55b4e7', \"aria-label\": this.messages.clear, class: CSS.clearButton, disabled: this.disabled || this.readOnly, onClick: this.clearInputTextValue, tabIndex: -1, type: \"button\" }, h(\"calcite-icon\", { key: '0abb236adde179134a48175ccc4bfadd483ab6bc', icon: \"x\", scale: getIconScale(this.scale) })));\n        const iconEl = (h(\"calcite-icon\", { key: '4ca36a556db3bb93ff474e21d863bc4a20380421', class: CSS.inputIcon, flipRtl: this.iconFlipRtl, icon: this.requestedIcon, scale: getIconScale(this.scale) }));\n        const prefixText = h(\"div\", { key: '066efbe771cc9ea9239f564c4ccd1996a6d8a365', class: CSS.prefix }, this.prefixText);\n        const suffixText = h(\"div\", { key: '9b34f658b7c2dae1f0ccd07be23d91987847aad6', class: CSS.suffix }, this.suffixText);\n        const childEl = (h(\"input\", { key: '198c91add28dd04f74be153edfa17be636126fb2', \"aria-label\": getLabelText(this), autocomplete: this.autocomplete, autofocus: this.el.autofocus ? true : null, class: {\n                [CSS.editingEnabled]: this.editingEnabled,\n                [CSS.inlineChild]: !!this.inlineEditableEl,\n            }, defaultValue: this.defaultValue, disabled: this.disabled ? true : null, enterKeyHint: this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\"), inputMode: this.el.inputMode || this.el.getAttribute(\"inputmode\"), maxLength: this.maxLength, minLength: this.minLength, name: this.name, onBlur: this.inputTextBlurHandler, onFocus: this.inputTextFocusHandler, onInput: this.inputTextInputHandler, onKeyDown: this.inputTextKeyDownHandler, pattern: this.pattern, placeholder: this.placeholder || \"\", readOnly: this.readOnly, ref: this.setChildElRef, required: this.required ? true : null, tabIndex: this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null, type: \"text\", value: this.value }));\n        return (h(Host, { key: '50c546649db474a19c5fedd528e1b61f4eeb1b52', onClick: this.clickHandler, onKeyDown: this.keyDownHandler }, h(InteractiveContainer, { key: '0157bca7fca6d8e1ea2cf14c1b046eef993945df', disabled: this.disabled }, h(\"div\", { key: 'b582d6b2b539d4f1fb211d95de1102046b8f747e', class: { [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" } }, this.prefixText ? prefixText : null, h(\"div\", { key: 'c1b703c7e5942ce0bcd4afd0ca5ed5d9456280fb', class: CSS.wrapper }, childEl, this.isClearable ? inputClearButton : null, this.requestedIcon ? iconEl : null, this.loading ? loader : null), h(\"div\", { key: '6890177760f4e8da27ab1b64675c875aa47c9467', class: CSS.actionWrapper }, h(\"slot\", { key: '1c3f528c03e4ecc3fe4bde16437dd99a27026dce', name: SLOTS.action })), this.suffixText ? suffixText : null, h(HiddenFormInputSlot, { key: 'ff90c44312b1a2d93b44273455bd07ce4946b802', component: this })), this.validationMessage && this.status === \"invalid\" ? (h(Validation, { icon: this.validationIcon, message: this.validationMessage, scale: this.scale, status: this.status })) : null)));\n    }\n    static get is() { return \"calcite-input-text\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"input-text.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"input-text.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\\"start\\\" | \\\"end\\\", Alignment>\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Alignment\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Alignment\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the text alignment of the component's value.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"start\\\"\"\n            },\n            \"autofocus\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"ignore\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\"\n                },\n                \"attribute\": \"autofocus\",\n                \"reflect\": false\n            },\n            \"clearable\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a clear button is displayed when the component has a value.\"\n                },\n                \"attribute\": \"clearable\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\"\n                        }],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"enterKeyHint\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"futureBreaking\",\n                            \"text\": \"kebab-cased attribute will not be supported in a future release\"\n                        }, {\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\"\n                },\n                \"attribute\": \"enter-key-hint\",\n                \"reflect\": false\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"icon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"futureBreaking\",\n                            \"text\": \"Remove boolean type as it is not supported.\"\n                        }],\n                    \"text\": \"Specifies an icon to display.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"inputMode\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"futureBreaking\",\n                            \"text\": \"kebab-cased attribute will not be supported in a future release\"\n                        }, {\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\"\n                },\n                \"attribute\": \"input-mode\",\n                \"reflect\": false\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component's button or hyperlink.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is in the loading state and `calcite-progress` is displayed.\"\n                },\n                \"attribute\": \"loading\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"maxLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\"\n                        }],\n                    \"text\": \"Specifies the maximum length of text for the component's value.\"\n                },\n                \"attribute\": \"max-length\",\n                \"reflect\": true\n            },\n            \"minLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\"\n                        }],\n                    \"text\": \"Specifies the minimum length of text for the component's value.\"\n                },\n                \"attribute\": \"min-length\",\n                \"reflect\": true\n            },\n            \"validationMessage\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation message to display under the component.\"\n                },\n                \"attribute\": \"validation-message\",\n                \"reflect\": false\n            },\n            \"validationIcon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation icon to display under the component.\"\n                },\n                \"attribute\": \"validation-icon\",\n                \"reflect\": true\n            },\n            \"validity\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MutableValidityState\",\n                    \"resolved\": \"{ valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; }\",\n                    \"references\": {\n                        \"MutableValidityState\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/form\",\n                            \"id\": \"src/utils/form.tsx::MutableValidityState\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"mdn\",\n                            \"text\": \"[ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\"\n                        }],\n                    \"text\": \"The current validation state of the component.\"\n                },\n                \"defaultValue\": \"{\\n    valid: false,\\n    badInput: false,\\n    customError: false,\\n    patternMismatch: false,\\n    rangeOverflow: false,\\n    rangeUnderflow: false,\\n    stepMismatch: false,\\n    tooLong: false,\\n    tooShort: false,\\n    typeMismatch: false,\\n    valueMissing: false,\\n  }\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\"\n                        }],\n                    \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\"\n                        }],\n                    \"text\": \"Specifies placeholder text for the component.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"prefixText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Adds text to the start of the component.\"\n                },\n                \"attribute\": \"prefix-text\",\n                \"reflect\": false\n            },\n            \"readOnly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\"\n                        }],\n                    \"text\": \"When `true`, the component's value can be read, but cannot be modified.\"\n                },\n                \"attribute\": \"read-only\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the status of the input field, which determines message and icons.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"idle\\\"\"\n            },\n            \"autocomplete\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\"\n                        }],\n                    \"text\": \"Specifies the type of content to autocomplete, for use in forms.\\nRead the native attribute's documentation on MDN for more info.\"\n                },\n                \"attribute\": \"autocomplete\",\n                \"reflect\": false\n            },\n            \"pattern\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\"\n                        }],\n                    \"text\": \"Specifies a regex pattern the component's `value` must match for validation.\\nRead the native attribute's documentation on MDN for more info.\"\n                },\n                \"attribute\": \"pattern\",\n                \"reflect\": false\n            },\n            \"suffixText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Adds text to the end of the component.\"\n                },\n                \"attribute\": \"suffix-text\",\n                \"reflect\": false\n            },\n            \"editingEnabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"editing-enabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"\\\"\\\"\"\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"InputTextMessages\",\n                    \"resolved\": \"{ clear: string; loading: string; }\",\n                    \"references\": {\n                        \"InputTextMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/input-text/t9n\",\n                            \"id\": \"src/components/input-text/assets/input-text/t9n/index.d.ts::InputTextMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<InputTextMessages>\",\n                    \"resolved\": \"{ clear?: string; loading?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"InputTextMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/input-text/t9n\",\n                            \"id\": \"src/components/input-text/assets/input-text/t9n/index.d.ts::InputTextMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"defaultMessages\": {},\n            \"slottedActionElDisabledInternally\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteInternalInputTextFocus\",\n                \"name\": \"calciteInternalInputTextFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"{\\n    element: HTMLInputElement;\\n    value: string;\\n  }\",\n                    \"resolved\": \"{ element: HTMLInputElement; value: string; }\",\n                    \"references\": {\n                        \"HTMLInputElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLInputElement\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"calciteInternalInputTextBlur\",\n                \"name\": \"calciteInternalInputTextBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"{ element: HTMLInputElement; value: string }\",\n                    \"resolved\": \"{ element: HTMLInputElement; value: string; }\",\n                    \"references\": {\n                        \"HTMLInputElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLInputElement\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"calciteInputTextInput\",\n                \"name\": \"calciteInputTextInput\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new value is typed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInputTextChange\",\n                \"name\": \"calciteInputTextChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new value is typed and committed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            },\n            \"selectText\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Selects the text of the component's `value`.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"autofocus\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"enterkeyhint\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"inputmode\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledWatcher\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueWatcher\"\n            }, {\n                \"propName\": \"icon\",\n                \"methodName\": \"updateRequestedIcon\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=input-text.js.map\n"],"mappings":"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"}