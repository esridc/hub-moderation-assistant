{"version":3,"names":["IDS","content","toggle","CSS","chevronIcon","iconStart","iconEnd","invalid","sectionHeader","sectionHeaderText","statusIcon","switch","toggleSwitch","toggleContainer","toggleSwitchContent","toggleSwitchText","valid","ICONS","menuOpen","menuClosed","blockSectionCss","BlockSection","constructor","hostRef","this","handleHeaderKeyDown","event","isActivationKey","key","toggleSection","preventDefault","stopPropagation","open","calciteBlockSectionToggle","emit","undefined","iconFlipRtl","status","text","toggleDisplay","messages","messageOverrides","effectiveLocale","defaultMessages","onMessagesChange","async","componentFocusable","focusFirstTabbable","el","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLocalized","disconnectMessages","renderStatusIcon","_a","statusIconClasses","h","class","icon","scale","renderIcon","flipRtlStart","flipRtlEnd","isIconStart","flipRtl","render","arrowIcon","toggleLabel","collapse","expand","headerNode","toAriaBoolean","id","onClick","onKeyDown","role","tabIndex","title","checked","inert","label","Host","hidden","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/block-section/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/block-section/block-section.css?tag=calcite-block-section&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/block-section/block-section.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const IDS = {\n    content: \"content\",\n    toggle: \"toggle\",\n};\nexport const CSS = {\n    chevronIcon: \"chevron-icon\",\n    content: \"content\",\n    iconStart: \"icon--start\",\n    iconEnd: \"icon--end\",\n    invalid: \"invalid\",\n    sectionHeader: \"section-header\",\n    sectionHeaderText: \"section-header__text\",\n    statusIcon: \"status-icon\",\n    switch: \"switch\",\n    toggle: \"toggle\",\n    toggleSwitch: \"toggle--switch\",\n    toggleContainer: \"toggle-container\",\n    toggleSwitchContent: \"toggle--switch__content\",\n    toggleSwitchText: \"toggle--switch__text\",\n    valid: \"valid\",\n};\nexport const ICONS = {\n    menuOpen: \"chevron-up\",\n    menuClosed: \"chevron-down\",\n    valid: \"check-circle\",\n    invalid: \"exclamation-mark-triangle\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  box-sizing: border-box;\n  display: block;\n  background-color: var(--calcite-color-foreground-1);\n  font-size: var(--calcite-font-size--1);\n  color: var(--calcite-color-text-2);\n}\n\n:host([open]) {\n  border-width: 0px;\n  border-block-end-width: 1px;\n  border-style: solid;\n  border-block-end-color: var(--calcite-color-border-3);\n}\n:host([open]) .toggle {\n  color: var(--calcite-color-text-1);\n}\n:host([open]) .toggle:hover {\n  color: var(--calcite-color-text-1);\n}\n:host([open]) .chevron-icon {\n  color: var(--calcite-color-text-3);\n}\n:host([open]) .chevron-icon:hover {\n  color: var(--calcite-color-text-1);\n}\n\n:host(:last-child) {\n  border-block-end-width: 0px;\n}\n\n.toggle {\n  inline-size: 100%;\n  border-width: 0px;\n  background-color: transparent;\n  font-family: var(--calcite-font-family);\n  gap: var(--calcite-spacing-md);\n  color: var(--calcite-color-text-2);\n  font-weight: var(--calcite-font-weight-normal);\n}\n.toggle:hover {\n  color: var(--calcite-color-text-1);\n}\n\n.toggle--switch,\n.section-header {\n  margin-inline: 0px;\n  margin-block: 0.25rem;\n  display: flex;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  align-items: center;\n  padding-inline: 0px;\n  padding-block: 0.5rem;\n  font-size: var(--calcite-font-size--1);\n  outline-color: transparent;\n}\n.toggle--switch:focus,\n.section-header:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.toggle--switch:hover,\n.section-header:hover {\n  color: var(--calcite-color-text-1);\n}\n\n.section-header__text {\n  margin-block: 0px;\n  flex: 1 1 auto;\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  word-break: break-word;\n}\n.toggle-container .toggle--switch__content {\n  display: flex;\n  flex: 1 1 auto;\n  align-items: center;\n}\n.toggle-container .icon--end,\n.toggle-container .icon--start,\n.toggle-container .chevron-icon {\n  display: flex;\n  align-items: center;\n  color: var(--calcite-color-text-3);\n}\n.toggle-container .icon--end:hover,\n.toggle-container .icon--start:hover,\n.toggle-container .chevron-icon:hover {\n  color: var(--calcite-color-text-1);\n}\n\n.status-icon {\n  display: flex;\n  align-items: center;\n}\n\n.status-icon.valid {\n  color: var(--calcite-color-status-success);\n}\n\n.status-icon.invalid {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { focusFirstTabbable, toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { CSS, ICONS, IDS } from \"./resources\";\n/**\n * @slot - A slot for adding custom content.\n */\nexport class BlockSection {\n    constructor() {\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.handleHeaderKeyDown = (event) => {\n            if (isActivationKey(event.key)) {\n                this.toggleSection();\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        };\n        this.toggleSection = () => {\n            this.open = !this.open;\n            this.calciteBlockSectionToggle.emit();\n        };\n        this.iconEnd = undefined;\n        this.iconFlipRtl = undefined;\n        this.iconStart = undefined;\n        this.open = false;\n        this.status = undefined;\n        this.text = undefined;\n        this.toggleDisplay = \"button\";\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.effectiveLocale = undefined;\n        this.defaultMessages = undefined;\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Sets focus on the component's first tabbable element.\n     *\n     */\n    async setFocus() {\n        await componentFocusable(this);\n        focusFirstTabbable(this.el);\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    async componentWillLoad() {\n        await setUpMessages(this);\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    renderStatusIcon() {\n        const { status } = this;\n        const statusIcon = ICONS[status] ?? false;\n        const statusIconClasses = {\n            [CSS.statusIcon]: true,\n            [CSS.valid]: status == \"valid\",\n            [CSS.invalid]: status == \"invalid\",\n        };\n        return statusIcon ? (h(\"calcite-icon\", { class: statusIconClasses, icon: statusIcon, scale: \"s\" })) : null;\n    }\n    renderIcon(icon) {\n        const { iconFlipRtl } = this;\n        if (icon === undefined) {\n            return null;\n        }\n        const flipRtlStart = iconFlipRtl === \"both\" || iconFlipRtl === \"start\";\n        const flipRtlEnd = iconFlipRtl === \"both\" || iconFlipRtl === \"end\";\n        const isIconStart = icon === this.iconStart;\n        /** Icon scale is not variable as the component does not have a scale property */\n        return (h(\"calcite-icon\", { class: isIconStart ? CSS.iconStart : CSS.iconEnd, flipRtl: isIconStart ? flipRtlStart : flipRtlEnd, icon: isIconStart ? this.iconStart : this.iconEnd, key: isIconStart ? this.iconStart : this.iconEnd, scale: \"s\" }));\n    }\n    render() {\n        const { messages, open, text, toggleDisplay } = this;\n        const arrowIcon = open ? ICONS.menuOpen : ICONS.menuClosed;\n        const toggleLabel = open ? messages.collapse : messages.expand;\n        const headerNode = toggleDisplay === \"switch\" ? (h(\"div\", { class: {\n                [CSS.toggleContainer]: true,\n            } }, h(\"div\", { \"aria-controls\": IDS.content, \"aria-expanded\": toAriaBoolean(open), class: {\n                [CSS.toggle]: true,\n                [CSS.toggleSwitch]: true,\n            }, id: IDS.toggle, onClick: this.toggleSection, onKeyDown: this.handleHeaderKeyDown, role: \"button\", tabIndex: 0, title: toggleLabel }, this.renderIcon(this.iconStart), h(\"div\", { class: CSS.toggleSwitchContent }, h(\"span\", { class: CSS.toggleSwitchText }, text)), this.renderIcon(this.iconEnd), this.renderStatusIcon(), h(\"calcite-switch\", { checked: open, class: CSS.switch, inert: true, label: toggleLabel, scale: \"s\" })))) : (h(\"div\", { class: {\n                [CSS.toggleContainer]: true,\n            } }, h(\"button\", { \"aria-controls\": IDS.content, \"aria-expanded\": toAriaBoolean(open), class: {\n                [CSS.sectionHeader]: true,\n                [CSS.toggle]: true,\n            }, id: IDS.toggle, onClick: this.toggleSection }, this.renderIcon(this.iconStart), h(\"span\", { class: CSS.sectionHeaderText }, text), this.renderIcon(this.iconEnd), this.renderStatusIcon(), h(\"calcite-icon\", { class: CSS.chevronIcon, icon: arrowIcon, scale: \"s\" }))));\n        return (h(Host, { key: '224c2187de037da1611a3228195e95ba43bde093' }, headerNode, h(\"section\", { key: '8b8849645851e21e26c63cef44428f30d2429a0b', \"aria-labelledby\": IDS.toggle, class: CSS.content, hidden: !open, id: IDS.content }, h(\"slot\", { key: '3f6d783aaa6d886bb4533a4dec96aafc8ba058ef' }))));\n    }\n    static get is() { return \"calcite-block-section\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"block-section.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"block-section.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"iconEnd\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString\",\n                    \"resolved\": \"string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an icon to display at the end of the component.\"\n                },\n                \"attribute\": \"icon-end\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FlipContext\",\n                    \"resolved\": \"\\\"both\\\" | \\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"FlipContext\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::FlipContext\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true\n            },\n            \"iconStart\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString\",\n                    \"resolved\": \"string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an icon to display at the start of the component.\"\n                },\n                \"attribute\": \"icon-start\",\n                \"reflect\": true\n            },\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, expands the component and its contents.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"Use `icon-start` instead.\"\n                        }],\n                    \"text\": \"Displays a status-related indicator icon.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true\n            },\n            \"text\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component header text.\"\n                },\n                \"attribute\": \"text\",\n                \"reflect\": false\n            },\n            \"toggleDisplay\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"BlockSectionToggleDisplay\",\n                    \"resolved\": \"\\\"button\\\" | \\\"switch\\\"\",\n                    \"references\": {\n                        \"BlockSectionToggleDisplay\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/block-section/interfaces.ts::BlockSectionToggleDisplay\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies how the component's toggle is displayed, where:\\n\\n`\\\"button\\\"` sets the toggle to a selectable header, and\\n\\n`\\\"switch\\\"` sets the toggle to a switch.\"\n                },\n                \"attribute\": \"toggle-display\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"button\\\"\"\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"BlockSectionMessages\",\n                    \"resolved\": \"{ collapse: string; expand: string; }\",\n                    \"references\": {\n                        \"BlockSectionMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/block-section/t9n\",\n                            \"id\": \"src/components/block-section/assets/block-section/t9n/index.d.ts::BlockSectionMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<BlockSectionMessages>\",\n                    \"resolved\": \"{ collapse?: string; expand?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"BlockSectionMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/block-section/t9n\",\n                            \"id\": \"src/components/block-section/assets/block-section/t9n/index.d.ts::BlockSectionMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"defaultMessages\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteBlockSectionToggle\",\n                \"name\": \"calciteBlockSectionToggle\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the header has been clicked.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first tabbable element.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=block-section.js.map\n"],"mappings":"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"}