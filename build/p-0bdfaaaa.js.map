{"version":3,"names":["minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","input","propName","matchesType","attributeName","toLowerCase","value","setAttribute","removeAttribute","syncHiddenFormInput","type","hiddenFormInput","isMinMaxStepType","includes","numericInputComponent","isMinMaxLengthType","textualInputComponent","isPatternType"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/input/common/input.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\nfunction updateConstraintValidation(inputComponent, input, propName, matchesType) {\n    const attributeName = propName.toLowerCase();\n    const value = inputComponent[propName];\n    if (matchesType && value != null) {\n        input.setAttribute(attributeName, `${value}`);\n    }\n    else {\n        // we remove the attribute to ensure validation-constraints are properly reset\n        input.removeAttribute(attributeName);\n    }\n}\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(type, inputComponent, hiddenFormInput) {\n    hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n    const isMinMaxStepType = minMaxStepTypes.includes(type);\n    const numericInputComponent = inputComponent;\n    updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n    updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n    updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n    const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n    const textualInputComponent = inputComponent;\n    updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n    updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n    const isPatternType = patternTypes.includes(type);\n    updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n//# sourceMappingURL=input.js.map\n"],"mappings":";;;;;AAQO,MAAMA,EAAkB,CAAC,OAAQ,iBAAkB,QAAS,SAAU,QAAS,OAAQ,QAIvF,MAAMC,EAAe,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,OAIpE,MAAMC,EAAoB,CAAC,QAAS,WAAY,SAAU,MAAO,OAAQ,WAAY,OAC5F,SAASC,EAA2BC,EAAgBC,EAAOC,EAAUC,GACjE,MAAMC,EAAgBF,EAASG,cAC/B,MAAMC,EAAQN,EAAeE,GAC7B,GAAIC,GAAeG,GAAS,KAAM,CAC9BL,EAAMM,aAAaH,EAAe,GAAGE,IAC7C,KACS,CAEDL,EAAMO,gBAAgBJ,EAC9B,CACA,CAUO,SAASK,EAAoBC,EAAMV,EAAgBW,GACtDA,EAAgBD,KAAOA,IAAS,WAAa,OAASA,EACtD,MAAME,EAAmBhB,EAAgBiB,SAASH,GAClD,MAAMI,EAAwBd,EAC9BD,EAA2Be,EAAuBH,EAAiB,MAAOC,GAC1Eb,EAA2Be,EAAuBH,EAAiB,MAAOC,GAC1Eb,EAA2Be,EAAuBH,EAAiB,OAAQC,GAC3E,MAAMG,EAAqBjB,EAAkBe,SAASH,GACtD,MAAMM,EAAwBhB,EAC9BD,EAA2BiB,EAAuBL,EAAiB,YAAaI,GAChFhB,EAA2BiB,EAAuBL,EAAiB,YAAaI,GAChF,MAAME,EAAgBpB,EAAagB,SAASH,GAC5CX,EAA2BiB,EAAuBL,EAAiB,UAAWM,EAClF,Q"}