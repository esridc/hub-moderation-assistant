{"version":3,"names":["IDS","content","toggle","header","CSS","actionsEnd","button","container","contentStart","controlContainer","description","headerContainer","headerHasText","heading","icon","iconStart","iconEnd","iconEndContainer","invalid","statusIcon","summary","title","toggleIcon","valid","SLOTS","control","headerMenuActions","ICONS","opened","closed","blockCss","Block","constructor","hostRef","this","openTransitionProp","onHeaderClick","open","calciteBlockToggle","emit","setTransitionEl","el","transitionEl","actionsEndSlotChangeHandler","event","hasEndActions","slotChangeHasAssignedElement","handleContentStartSlotChange","hasContentStart","collapsible","disabled","dragHandle","undefined","headingLevel","iconFlipRtl","loading","status","messages","messageOverrides","overlayPositioning","defaultMessages","effectiveLocale","openHandler","onToggleOpenCloseComponent","onMessagesChange","async","componentFocusable","focusFirstTabbable","onBeforeOpen","calciteBlockBeforeOpen","onOpen","calciteBlockOpen","onBeforeClose","calciteBlockBeforeClose","onClose","calciteBlockClose","effectiveLocaleChange","updateMessages","connectedCallback","connectConditionalSlotComponent","connectInteractive","connectLocalized","connectMessages","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","renderScrim","defaultSlot","h","renderLoaderStatusIcon","hasSlottedIcon","getSlotted","class","key","inline","label","scale","name","renderActionsEnd","onSlotchange","renderContentStart","hidden","renderTitle","Heading","level","renderIcon","position","flipRtl","iconValue","iconClass","render","toggleLabel","collapse","expand","headerContent","id","hasControl","hasMenuActions","collapseIcon","headerNode","toAriaBoolean","onClick","options","Host","InteractiveContainer","ref","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/block/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/block/block.css?tag=calcite-block&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/block/block.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const IDS = {\n    content: \"content\",\n    toggle: \"toggle\",\n    header: \"header\",\n};\nexport const CSS = {\n    actionsEnd: \"actions-end\",\n    button: \"button\",\n    container: \"container\",\n    content: \"content\",\n    contentStart: \"content-start\",\n    controlContainer: \"control-container\",\n    description: \"description\",\n    header: \"header\",\n    headerContainer: \"header-container\",\n    headerHasText: \"header--has-text\",\n    heading: \"heading\",\n    icon: \"icon\",\n    iconStart: \"icon--start\",\n    iconEnd: \"icon--end\",\n    iconEndContainer: \"icon-end-container\",\n    invalid: \"invalid\",\n    statusIcon: \"status-icon\",\n    summary: \"summary\",\n    title: \"title\",\n    toggle: \"toggle\",\n    toggleIcon: \"toggle-icon\",\n    valid: \"valid\",\n};\nexport const SLOTS = {\n    actionsEnd: \"actions-end\",\n    contentStart: \"content-start\",\n    control: \"control\",\n    headerMenuActions: \"header-menu-actions\",\n    icon: \"icon\",\n};\nexport const ICONS = {\n    opened: \"chevron-up\",\n    closed: \"chevron-down\",\n    valid: \"check-circle\",\n    invalid: \"exclamation-mark-triangle\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  /* Base \":host\" styles for the component */\n  box-sizing: border-box;\n  background-color: var(--calcite-color-foreground-1);\n  color: var(--calcite-color-text-2);\n  font-size: var(--calcite-font-size--1);\n}\n:host * {\n  box-sizing: border-box;\n}\n\n:host {\n  /* Component spacing variables */\n  --calcite-icon-size: 1rem;\n  --calcite-spacing-eighth: 0.125rem;\n  --calcite-spacing-quarter: 0.25rem;\n  --calcite-spacing-half: 0.5rem;\n  --calcite-spacing-three-quarters: 0.75rem;\n  --calcite-spacing: 1rem;\n  --calcite-spacing-plus-quarter: 1.25rem;\n  --calcite-spacing-plus-half: 1.5rem;\n  --calcite-spacing-double: 2rem;\n  --calcite-menu-min-width: 10rem;\n  --calcite-header-min-height: 3rem;\n  --calcite-footer-min-height: 3rem;\n}\n\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-block-padding: Specifies the padding of the block `default` slot.\n*/\n:host {\n  display: flex;\n  flex-shrink: 0;\n  flex-grow: 0;\n  flex-direction: column;\n  border-width: 0px;\n  border-block-end-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-3);\n  padding: 0px;\n  transition-property: margin;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n  transition-timing-function: cubic-bezier(0.215, 0.440, 0.420, 0.880);\n  flex-basis: auto;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n/* helper to properly scale internal durations */\n/* Shared styles for header elements */\n.header {\n  margin: 0px;\n  display: flex;\n  align-content: space-between;\n  align-items: center;\n  fill: var(--calcite-color-text-2);\n  color: var(--calcite-color-text-2);\n}\n\n.heading {\n  margin: 0px;\n  padding: 0px;\n  font-weight: var(--calcite-font-weight-medium);\n}\n\n.header .heading {\n  flex: 1 1 auto;\n  padding: 0.5rem;\n}\n\n.header {\n  justify-content: flex-start;\n}\n\n.header--has-text {\n  padding: var(--calcite-spacing-md);\n}\n\n.header,\n.toggle {\n  grid-area: header;\n}\n\n.header-container {\n  display: grid;\n  align-items: stretch;\n  grid-template: auto/auto 1fr auto auto;\n  grid-template-areas: \"handle header control menu actions-end\";\n  grid-column: header-start/actions-end;\n  grid-row: 1/2;\n}\n\n.content-start,\n.icon,\n.icon--start,\n.icon--end {\n  margin-inline-end: var(--calcite-spacing-md);\n}\n\n.icon calcite-loader {\n  margin-inline-end: var(--calcite-spacing-xxxs);\n}\n\n.icon--start,\n.icon--end {\n  color: var(--calcite-color-text-3);\n}\n\n.actions-end {\n  grid-area: actions-end;\n}\n\n.toggle {\n  margin: 0px;\n  display: flex;\n  cursor: pointer;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: space-between;\n  border-style: none;\n  padding: 0px;\n  font-family: var(--calcite-font-family);\n  outline-color: transparent;\n  text-align: initial;\n  background-color: transparent;\n}\n.toggle:hover {\n  background-color: var(--calcite-color-foreground-2);\n}\n.toggle:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\ncalcite-loader[inline] {\n  grid-area: control;\n  align-self: center;\n}\n\ncalcite-handle {\n  grid-area: handle;\n}\n\n.title {\n  margin: 0px;\n}\n\n.header .title .heading {\n  padding: 0px;\n  font-size: var(--calcite-font-size--1);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1.25;\n  color: var(--calcite-color-text-2);\n  transition-property: color;\n  transition-duration: 150ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.description {\n  margin-block-start: 0.125rem;\n  padding: 0px;\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n  color: var(--calcite-color-text-3);\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.icon {\n  display: flex;\n}\n\n.status-icon.valid {\n  color: var(--calcite-color-status-success);\n}\n\n.status-icon.invalid {\n  color: var(--calcite-color-status-danger);\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n.icon-end-container {\n  display: flex;\n  align-items: center;\n  margin-inline-start: auto;\n}\n\n.toggle-icon {\n  align-self: center;\n  justify-self: end;\n  color: var(--calcite-color-text-3);\n  transition-property: color;\n  transition-duration: 150ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  margin-inline-end: var(--calcite-spacing-md);\n}\n\n.toggle:hover .toggle-icon {\n  color: var(--calcite-color-text-1);\n}\n\n.container {\n  position: relative;\n  display: flex;\n  block-size: 100%;\n  flex-direction: column;\n}\n\n.content {\n  position: relative;\n  min-block-size: 0px;\n  flex: 1 1 0%;\n}\n\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.content {\n  animation: in var(--calcite-internal-animation-timing-slow) ease-in-out;\n  padding-block: var(--calcite-block-padding, var(--calcite-spacing-sm));\n  padding-inline: var(--calcite-block-padding, var(--calcite-spacing-md));\n}\n\n.content-start {\n  display: flex;\n  align-items: center;\n  color: var(--calcite-color-text-3);\n}\n\n.control-container {\n  margin: 0px;\n  display: flex;\n  grid-area: control;\n}\n\ncalcite-action-menu {\n  grid-area: menu;\n}\n\n.actions-end {\n  display: flex;\n  align-items: stretch;\n}\n\n:host([open]) {\n  margin-block: 0.5rem;\n}\n:host([open]) .header .title .heading {\n  color: var(--calcite-color-text-1);\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { connectConditionalSlotComponent, disconnectConditionalSlotComponent, } from \"../../utils/conditionalSlot\";\nimport { focusFirstTabbable, getSlotted, toAriaBoolean, slotChangeHasAssignedElement, } from \"../../utils/dom\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { Heading } from \"../functional/Heading\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { onToggleOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\n/**\n * @slot - A slot for adding custom content.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component. It is recommended to use two or fewer actions.\n * @slot icon - [Deprecated] A slot for adding a leading header icon with `calcite-icon`. Use `icon-start` instead.\n * @slot content-start - A slot for adding non-actionable elements before content of the component.\n * @slot control - [Deprecated] A slot for adding a single HTML input element in a header. Use `actions-end` instead.\n * @slot header-menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a dropdown menu.\n */\nexport class Block {\n    constructor() {\n        this.openTransitionProp = \"opacity\";\n        // --------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        // --------------------------------------------------------------------------\n        this.onHeaderClick = () => {\n            this.open = !this.open;\n            this.calciteBlockToggle.emit();\n        };\n        this.setTransitionEl = (el) => {\n            this.transitionEl = el;\n        };\n        this.actionsEndSlotChangeHandler = (event) => {\n            this.hasEndActions = slotChangeHasAssignedElement(event);\n        };\n        this.handleContentStartSlotChange = (event) => {\n            this.hasContentStart = slotChangeHasAssignedElement(event);\n        };\n        this.collapsible = false;\n        this.disabled = false;\n        this.dragHandle = false;\n        this.heading = undefined;\n        this.headingLevel = undefined;\n        this.iconEnd = undefined;\n        this.iconFlipRtl = undefined;\n        this.iconStart = undefined;\n        this.loading = false;\n        this.open = false;\n        this.status = undefined;\n        this.description = undefined;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.overlayPositioning = \"absolute\";\n        this.defaultMessages = undefined;\n        this.effectiveLocale = undefined;\n        this.hasContentStart = false;\n        this.hasEndActions = false;\n    }\n    openHandler() {\n        onToggleOpenCloseComponent(this);\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Sets focus on the component's first tabbable element.\n     *\n     */\n    async setFocus() {\n        await componentFocusable(this);\n        focusFirstTabbable(this.el);\n    }\n    onBeforeOpen() {\n        this.calciteBlockBeforeOpen.emit();\n    }\n    onOpen() {\n        this.calciteBlockOpen.emit();\n    }\n    onBeforeClose() {\n        this.calciteBlockBeforeClose.emit();\n    }\n    onClose() {\n        this.calciteBlockClose.emit();\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    // --------------------------------------------------------------------------\n    connectedCallback() {\n        connectConditionalSlotComponent(this);\n        connectInteractive(this);\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        disconnectConditionalSlotComponent(this);\n    }\n    async componentWillLoad() {\n        await setUpMessages(this);\n        setUpLoadableComponent(this);\n        if (this.open) {\n            onToggleOpenCloseComponent(this);\n        }\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    renderScrim() {\n        const { loading } = this;\n        const defaultSlot = h(\"slot\", null);\n        return [loading ? h(\"calcite-scrim\", { loading: loading }) : null, defaultSlot];\n    }\n    renderLoaderStatusIcon() {\n        const { loading, messages, status } = this;\n        const hasSlottedIcon = !!getSlotted(this.el, SLOTS.icon);\n        return loading ? (h(\"div\", { class: CSS.icon, key: \"loader\" }, h(\"calcite-loader\", { inline: true, label: messages.loading }))) : status ? (h(\"div\", { class: CSS.icon, key: \"status-icon\" }, h(\"calcite-icon\", { class: {\n                [CSS.statusIcon]: true,\n                [CSS.valid]: status == \"valid\",\n                [CSS.invalid]: status == \"invalid\",\n            }, icon: ICONS[status], scale: \"s\" }))) : hasSlottedIcon ? (h(\"div\", { class: CSS.icon, key: \"icon-slot\" }, h(\"slot\", { key: \"icon-slot\", name: SLOTS.icon }))) : null;\n    }\n    renderActionsEnd() {\n        return (h(\"div\", { class: CSS.actionsEnd }, h(\"slot\", { name: SLOTS.actionsEnd, onSlotchange: this.actionsEndSlotChangeHandler })));\n    }\n    renderContentStart() {\n        const { hasContentStart } = this;\n        return (h(\"div\", { class: CSS.contentStart, hidden: !hasContentStart }, h(\"slot\", { name: SLOTS.contentStart, onSlotchange: this.handleContentStartSlotChange })));\n    }\n    renderTitle() {\n        const { heading, headingLevel, description } = this;\n        return heading || description ? (h(\"div\", { class: CSS.title }, h(Heading, { class: CSS.heading, level: headingLevel }, heading), description ? h(\"div\", { class: CSS.description }, description) : null)) : null;\n    }\n    renderIcon(position) {\n        const { iconFlipRtl } = this;\n        const flipRtl = iconFlipRtl === \"both\" || position === \"start\"\n            ? iconFlipRtl === \"start\"\n            : iconFlipRtl === \"end\";\n        const iconValue = position === \"start\" ? this.iconStart : this.iconEnd;\n        const iconClass = position === \"start\" ? CSS.iconStart : CSS.iconEnd;\n        if (!iconValue) {\n            return undefined;\n        }\n        /** Icon scale is not variable as the component does not have a scale property */\n        return (h(\"calcite-icon\", { class: iconClass, flipRtl: flipRtl, icon: iconValue, key: iconValue, scale: \"s\" }));\n    }\n    render() {\n        const { collapsible, el, loading, open, heading, messages, description } = this;\n        const toggleLabel = open ? messages.collapse : messages.expand;\n        const headerContent = (h(\"header\", { key: 'f4585d3c5e71d91a3de8b60a8085e79ad0f649c2', class: { [CSS.header]: true, [CSS.headerHasText]: !!(heading || description) }, id: IDS.header }, this.renderIcon(\"start\"), this.renderContentStart(), this.renderLoaderStatusIcon(), this.renderTitle()));\n        const hasControl = !!getSlotted(el, SLOTS.control);\n        const hasMenuActions = !!getSlotted(el, SLOTS.headerMenuActions);\n        const collapseIcon = open ? ICONS.opened : ICONS.closed;\n        const headerNode = (h(\"div\", { key: '6ca859e09a3b11219a3b412998c83e91c845753f', class: CSS.headerContainer }, this.dragHandle ? h(\"calcite-handle\", { label: heading }) : null, collapsible ? (h(\"button\", { \"aria-controls\": IDS.content, \"aria-describedby\": IDS.header, \"aria-expanded\": collapsible ? toAriaBoolean(open) : null, class: CSS.toggle, id: IDS.toggle, onClick: this.onHeaderClick, title: toggleLabel }, headerContent, h(\"div\", { class: CSS.iconEndContainer }, this.renderIcon(\"end\"), h(\"calcite-icon\", { class: CSS.toggleIcon, icon: collapseIcon, scale: \"s\" })))) : this.iconEnd ? (h(\"div\", null, headerContent, h(\"div\", { class: CSS.iconEndContainer }, this.renderIcon(\"end\")))) : (headerContent), hasControl ? (h(\"div\", { \"aria-labelledby\": IDS.header, class: CSS.controlContainer }, h(\"slot\", { name: SLOTS.control }))) : null, hasMenuActions ? (h(\"calcite-action-menu\", { label: messages.options, overlayPositioning: this.overlayPositioning }, h(\"slot\", { name: SLOTS.headerMenuActions }))) : null, this.renderActionsEnd()));\n        return (h(Host, { key: 'b42f72a17e0896ae7406d4f09f346cfb75e4c9ef' }, h(InteractiveContainer, { key: '181fef154faaa7f8d1dca2e08745c76141678053', disabled: this.disabled }, h(\"article\", { key: 'd93e5b8f13529441ba99bcfcc51d5b31eab981ab', \"aria-busy\": toAriaBoolean(loading), class: {\n                [CSS.container]: true,\n            } }, headerNode, h(\"section\", { key: 'cd7759e5b8f695cd238b523075984b82de562005', \"aria-labelledby\": IDS.toggle, class: CSS.content, hidden: !open, id: IDS.content, ref: this.setTransitionEl }, this.renderScrim())))));\n    }\n    static get is() { return \"calcite-block\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"block.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"block.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"collapsible\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is collapsible.\"\n                },\n                \"attribute\": \"collapsible\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"dragHandle\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays a drag handle in the header.\"\n                },\n                \"attribute\": \"drag-handle\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"heading\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component header text.\"\n                },\n                \"attribute\": \"heading\",\n                \"reflect\": false\n            },\n            \"headingLevel\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"HeadingLevel\",\n                    \"resolved\": \"1 | 2 | 3 | 4 | 5 | 6\",\n                    \"references\": {\n                        \"HeadingLevel\": {\n                            \"location\": \"import\",\n                            \"path\": \"../functional/Heading\",\n                            \"id\": \"src/components/functional/Heading.tsx::HeadingLevel\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\"\n                },\n                \"attribute\": \"heading-level\",\n                \"reflect\": true\n            },\n            \"iconEnd\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString\",\n                    \"resolved\": \"string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an icon to display at the end of the component.\"\n                },\n                \"attribute\": \"icon-end\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FlipContext\",\n                    \"resolved\": \"\\\"both\\\" | \\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {\n                        \"FlipContext\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::FlipContext\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true\n            },\n            \"iconStart\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString\",\n                    \"resolved\": \"string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an icon to display at the start of the component.\"\n                },\n                \"attribute\": \"icon-start\",\n                \"reflect\": true\n            },\n            \"loading\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, a busy indicator is displayed.\"\n                },\n                \"attribute\": \"loading\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, expands the component and its contents.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"Use `icon-start` instead.\"\n                        }],\n                    \"text\": \"Displays a status-related indicator icon.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true\n            },\n            \"description\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A description for the component, which displays below the heading.\"\n                },\n                \"attribute\": \"description\",\n                \"reflect\": false\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"BlockMessages\",\n                    \"resolved\": \"{ collapse: string; expand: string; loading: string; options: string; }\",\n                    \"references\": {\n                        \"BlockMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/block/t9n\",\n                            \"id\": \"src/components/block/assets/block/t9n/index.d.ts::BlockMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<BlockMessages>\",\n                    \"resolved\": \"{ collapse?: string; expand?: string; loading?: string; options?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"BlockMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/block/t9n\",\n                            \"id\": \"src/components/block/assets/block/t9n/index.d.ts::BlockMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            },\n            \"overlayPositioning\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"OverlayPositioning\",\n                    \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n                    \"references\": {\n                        \"OverlayPositioning\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::OverlayPositioning\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\n`\\\"fixed\\\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n                },\n                \"attribute\": \"overlay-positioning\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"absolute\\\"\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"defaultMessages\": {},\n            \"effectiveLocale\": {},\n            \"hasContentStart\": {},\n            \"hasEndActions\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteBlockBeforeClose\",\n                \"name\": \"calciteBlockBeforeClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is requested to be closed and before the closing transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteBlockBeforeOpen\",\n                \"name\": \"calciteBlockBeforeOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteBlockClose\",\n                \"name\": \"calciteBlockClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is closed and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteBlockOpen\",\n                \"name\": \"calciteBlockOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is open and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteBlockToggle\",\n                \"name\": \"calciteBlockToggle\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"Use `openClose` events such as `calciteBlockOpen`, `calciteBlockClose`, `calciteBlockBeforeOpen`, and `calciteBlockBeforeClose` instead.\"\n                        }],\n                    \"text\": \"Fires when the component's header is clicked.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first tabbable element.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"open\",\n                \"methodName\": \"openHandler\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=block.js.map\n"],"mappings":";;;;;GAKO,MAAMA,EAAM,CACfC,QAAS,UACTC,OAAQ,SACRC,OAAQ,UAEL,MAAMC,EAAM,CACfC,WAAY,cACZC,OAAQ,SACRC,UAAW,YACXN,QAAS,UACTO,aAAc,gBACdC,iBAAkB,oBAClBC,YAAa,cACbP,OAAQ,SACRQ,gBAAiB,mBACjBC,cAAe,mBACfC,QAAS,UACTC,KAAM,OACNC,UAAW,cACXC,QAAS,YACTC,iBAAkB,qBAClBC,QAAS,UACTC,WAAY,cACZC,QAAS,UACTC,MAAO,QACPnB,OAAQ,SACRoB,WAAY,cACZC,MAAO,SAEJ,MAAMC,EAAQ,CACjBnB,WAAY,cACZG,aAAc,gBACdiB,QAAS,UACTC,kBAAmB,sBACnBZ,KAAM,QAEH,MAAMa,EAAQ,CACjBC,OAAQ,aACRC,OAAQ,eACRN,MAAO,eACPL,QAAS,6BC7Cb,MAAMY,EAAW,osJ,MCuBJC,EAAK,MACdC,YAAAC,G,ySACIC,KAAKC,mBAAqB,UAM1BD,KAAKE,cAAgB,KACjBF,KAAKG,MAAQH,KAAKG,KAClBH,KAAKI,mBAAmBC,MAAM,EAElCL,KAAKM,gBAAmBC,IACpBP,KAAKQ,aAAeD,CAAE,EAE1BP,KAAKS,4BAA+BC,IAChCV,KAAKW,cAAgBC,EAA6BF,EAAM,EAE5DV,KAAKa,6BAAgCH,IACjCV,KAAKc,gBAAkBF,EAA6BF,EAAM,EAE9DV,KAAKe,YAAc,MACnBf,KAAKgB,SAAW,MAChBhB,KAAKiB,WAAa,MAClBjB,KAAKrB,QAAUuC,UACflB,KAAKmB,aAAeD,UACpBlB,KAAKlB,QAAUoC,UACflB,KAAKoB,YAAcF,UACnBlB,KAAKnB,UAAYqC,UACjBlB,KAAKqB,QAAU,MACfrB,KAAKG,KAAO,MACZH,KAAKsB,OAASJ,UACdlB,KAAKxB,YAAc0C,UACnBlB,KAAKuB,SAAWL,UAChBlB,KAAKwB,iBAAmBN,UACxBlB,KAAKyB,mBAAqB,WAC1BzB,KAAK0B,gBAAkBR,UACvBlB,KAAK2B,gBAAkBT,UACvBlB,KAAKc,gBAAkB,MACvBd,KAAKW,cAAgB,K,CAEzBiB,cACIC,EAA2B7B,K,CAE/B8B,mB,CAYAC,uBACUC,EAAmBhC,MACzBiC,EAAmBjC,KAAKO,G,CAE5B2B,eACIlC,KAAKmC,uBAAuB9B,M,CAEhC+B,SACIpC,KAAKqC,iBAAiBhC,M,CAE1BiC,gBACItC,KAAKuC,wBAAwBlC,M,CAEjCmC,UACIxC,KAAKyC,kBAAkBpC,M,CAE3BqC,wBACIC,EAAe3C,KAAMA,KAAK2B,gB,CAO9BiB,oBACIC,EAAgC7C,MAChC8C,EAAmB9C,MACnB+C,EAAiB/C,MACjBgD,EAAgBhD,K,CAEpBiD,uBACIC,EAAsBlD,MACtBmD,EAAoBnD,MACpBoD,EAAmBpD,MACnBqD,EAAmCrD,K,CAEvC+B,gCACUuB,EAActD,MACpBuD,EAAuBvD,MACvB,GAAIA,KAAKG,KAAM,CACX0B,EAA2B7B,K,EAGnCwD,mBACIC,EAAmBzD,K,CAEvB0D,qBACIC,EAAsB3D,K,CAO1B4D,cACI,MAAMvC,QAAEA,GAAYrB,KACpB,MAAM6D,EAAcC,EAAE,OAAQ,MAC9B,MAAO,CAACzC,EAAUyC,EAAE,gBAAiB,CAAEzC,QAASA,IAAa,KAAMwC,E,CAEvEE,yBACI,MAAM1C,QAAEA,EAAOE,SAAEA,EAAQD,OAAEA,GAAWtB,KACtC,MAAMgE,IAAmBC,EAAWjE,KAAKO,GAAIjB,EAAMV,MACnD,OAAOyC,EAAWyC,EAAE,MAAO,CAAEI,MAAOhG,EAAIU,KAAMuF,IAAK,UAAYL,EAAE,iBAAkB,CAAEM,OAAQ,KAAMC,MAAO9C,EAASF,WAAeC,EAAUwC,EAAE,MAAO,CAAEI,MAAOhG,EAAIU,KAAMuF,IAAK,eAAiBL,EAAE,eAAgB,CAAEI,MAAO,CACjN,CAAChG,EAAIe,YAAa,KAClB,CAACf,EAAImB,OAAQiC,GAAU,QACvB,CAACpD,EAAIc,SAAUsC,GAAU,WAC1B1C,KAAMa,EAAM6B,GAASgD,MAAO,OAAWN,EAAkBF,EAAE,MAAO,CAAEI,MAAOhG,EAAIU,KAAMuF,IAAK,aAAeL,EAAE,OAAQ,CAAEK,IAAK,YAAaI,KAAMjF,EAAMV,QAAY,I,CAE1K4F,mBACI,OAAQV,EAAE,MAAO,CAAEI,MAAOhG,EAAIC,YAAc2F,EAAE,OAAQ,CAAES,KAAMjF,EAAMnB,WAAYsG,aAAczE,KAAKS,8B,CAEvGiE,qBACI,MAAM5D,gBAAEA,GAAoBd,KAC5B,OAAQ8D,EAAE,MAAO,CAAEI,MAAOhG,EAAII,aAAcqG,QAAS7D,GAAmBgD,EAAE,OAAQ,CAAES,KAAMjF,EAAMhB,aAAcmG,aAAczE,KAAKa,+B,CAErI+D,cACI,MAAMjG,QAAEA,EAAOwC,aAAEA,EAAY3C,YAAEA,GAAgBwB,KAC/C,OAAOrB,GAAWH,EAAesF,EAAE,MAAO,CAAEI,MAAOhG,EAAIiB,OAAS2E,EAAEe,EAAS,CAAEX,MAAOhG,EAAIS,QAASmG,MAAO3D,GAAgBxC,GAAUH,EAAcsF,EAAE,MAAO,CAAEI,MAAOhG,EAAIM,aAAeA,GAAe,MAAS,I,CAEjNuG,WAAWC,GACP,MAAM5D,YAAEA,GAAgBpB,KACxB,MAAMiF,EAAU7D,IAAgB,QAAU4D,IAAa,QACjD5D,IAAgB,QAChBA,IAAgB,MACtB,MAAM8D,EAAYF,IAAa,QAAUhF,KAAKnB,UAAYmB,KAAKlB,QAC/D,MAAMqG,EAAYH,IAAa,QAAU9G,EAAIW,UAAYX,EAAIY,QAC7D,IAAKoG,EAAW,CACZ,OAAOhE,S,CAGX,OAAQ4C,EAAE,eAAgB,CAAEI,MAAOiB,EAAWF,QAASA,EAASrG,KAAMsG,EAAWf,IAAKe,EAAWZ,MAAO,K,CAE5Gc,SACI,MAAMrE,YAAEA,EAAWR,GAAEA,EAAEc,QAAEA,EAAOlB,KAAEA,EAAIxB,QAAEA,EAAO4C,SAAEA,EAAQ/C,YAAEA,GAAgBwB,KAC3E,MAAMqF,EAAclF,EAAOoB,EAAS+D,SAAW/D,EAASgE,OACxD,MAAMC,EAAiB1B,EAAE,SAAU,CAAEK,IAAK,2CAA4CD,MAAO,CAAE,CAAChG,EAAID,QAAS,KAAM,CAACC,EAAIQ,kBAAmBC,GAAWH,IAAgBiH,GAAI3H,EAAIG,QAAU+B,KAAK+E,WAAW,SAAU/E,KAAK0E,qBAAsB1E,KAAK+D,yBAA0B/D,KAAK4E,eACjR,MAAMc,IAAezB,EAAW1D,EAAIjB,EAAMC,SAC1C,MAAMoG,IAAmB1B,EAAW1D,EAAIjB,EAAME,mBAC9C,MAAMoG,EAAezF,EAAOV,EAAMC,OAASD,EAAME,OACjD,MAAMkG,EAAc/B,EAAE,MAAO,CAAEK,IAAK,2CAA4CD,MAAOhG,EAAIO,iBAAmBuB,KAAKiB,WAAa6C,EAAE,iBAAkB,CAAEO,MAAO1F,IAAa,KAAMoC,EAAe+C,EAAE,SAAU,CAAE,gBAAiBhG,EAAIC,QAAS,mBAAoBD,EAAIG,OAAQ,gBAAiB8C,EAAc+E,EAAc3F,GAAQ,KAAM+D,MAAOhG,EAAIF,OAAQyH,GAAI3H,EAAIE,OAAQ+H,QAAS/F,KAAKE,cAAef,MAAOkG,GAAeG,EAAe1B,EAAE,MAAO,CAAEI,MAAOhG,EAAIa,kBAAoBiB,KAAK+E,WAAW,OAAQjB,EAAE,eAAgB,CAAEI,MAAOhG,EAAIkB,WAAYR,KAAMgH,EAActB,MAAO,QAAYtE,KAAKlB,QAAWgF,EAAE,MAAO,KAAM0B,EAAe1B,EAAE,MAAO,CAAEI,MAAOhG,EAAIa,kBAAoBiB,KAAK+E,WAAW,SAAQ,EAAqBW,EAAc5B,EAAE,MAAO,CAAE,kBAAmBhG,EAAIG,OAAQiG,MAAOhG,EAAIK,kBAAoBuF,EAAE,OAAQ,CAAES,KAAMjF,EAAMC,WAAe,KAAMoG,EAAkB7B,EAAE,sBAAuB,CAAEO,MAAO9C,EAASyE,QAASvE,mBAAoBzB,KAAKyB,oBAAsBqC,EAAE,OAAQ,CAAES,KAAMjF,EAAME,qBAAyB,KAAMQ,KAAKwE,oBACz/B,OAAQV,EAAEmC,EAAM,CAAE9B,IAAK,4CAA8CL,EAAEoC,EAAsB,CAAE/B,IAAK,2CAA4CnD,SAAUhB,KAAKgB,UAAY8C,EAAE,UAAW,CAAEK,IAAK,2CAA4C,YAAa2B,EAAczE,GAAU6C,MAAO,CAC/Q,CAAChG,EAAIG,WAAY,OAChBwH,EAAY/B,EAAE,UAAW,CAAEK,IAAK,2CAA4C,kBAAmBrG,EAAIE,OAAQkG,MAAOhG,EAAIH,QAAS4G,QAASxE,EAAMsF,GAAI3H,EAAIC,QAASoI,IAAKnG,KAAKM,iBAAmBN,KAAK4D,iB,CAcnMwC,wBAAe,MAAO,CAAC,SAAU,C"}