{"version":3,"names":["CSS","assistiveText","characterLimit","content","container","footer","resizeDisabled","resizeDisabledX","resizeDisabledY","characterOverLimit","readOnly","textAreaInvalid","footerSlotted","borderColor","hide","blockSizeFull","footerEndSlotOnly","SLOTS","footerStart","footerEnd","RESIZE_TIMEOUT","textAreaCss","TextArea","constructor","hostRef","this","guid","handleInput","event","value","target","calciteTextAreaInput","emit","handleChange","calciteTextAreaChange","contentSlotChangeHandler","nodes","el","childNodes","forEach","nodeName","nodeValue","trim","renderCharacterLimit","maxLength","localizedCharacterLengthObj","getLocalizedCharacterLength","h","class","isCharacterLimitExceeded","currentLength","resizeObserver","createObserver","async","componentLoaded","textAreaHeight","textAreaWidth","elHeight","elWidth","footerHeight","footerWidth","getHeightAndWidthOfElements","footerEl","style","width","setHeightAndWidthToAuto","setTextAreaEl","textAreaEl","observe","throttle","resize","height","leading","columns","undefined","disabled","form","groupSeparator","label","minLength","messages","validationMessage","validationIcon","validity","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","name","numberingSystem","placeholder","required","rows","scale","status","wrap","messageOverrides","defaultMessages","endSlotHasElements","startSlotHasElements","effectiveLocale","handleGlobalAttributesChanged","forceUpdate","onMessagesChange","connectedCallback","connectInteractive","connectLabel","connectForm","connectLocalized","connectMessages","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","setTextAreaHeight","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","_a","disconnect","render","hasFooter","Host","key","InteractiveContainer","toAriaBoolean","getLabelText","autofocus","cols","onChange","onInput","ref","onSlotchange","slotChangeHasAssignedElement","HiddenFormInputSlot","component","id","replacePlaceHoldersInMessages","Validation","icon","message","componentFocusable","focus","select","effectiveLocaleChange","updateMessages","onLabelClick","setFocus","length","toString","numberStringFormatter","numberFormatOptions","locale","signDisplay","useGrouping","localize","syncHiddenFormInput","input","setCustomValidity","getBoundingClientRect","replace","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/text-area/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/text-area/text-area.css?tag=calcite-text-area&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/text-area/text-area.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    assistiveText: \"assistive-text\",\n    characterLimit: \"character-limit\",\n    content: \"content\",\n    container: \"container\",\n    footer: \"footer\",\n    resizeDisabled: \"resize--disabled\",\n    resizeDisabledX: \"resize--disabled-x\",\n    resizeDisabledY: \"resize--disabled-y\",\n    characterOverLimit: \"character--over-limit\",\n    readOnly: \"readonly\",\n    textAreaInvalid: \"text-area--invalid\",\n    footerSlotted: \"footer--slotted\",\n    borderColor: \"border--color\",\n    hide: \"hide\",\n    blockSizeFull: \"block-size--full\",\n    footerEndSlotOnly: \"footer--end-only\",\n};\nexport const SLOTS = {\n    footerStart: \"footer-start\",\n    footerEnd: \"footer-end\",\n};\nexport const RESIZE_TIMEOUT = 100;\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  position: relative;\n  display: inline-block;\n  block-size: 100%;\n  inline-size: 100%;\n}\n\ntextarea {\n  position: relative;\n  margin: 0px;\n  box-sizing: border-box;\n  display: block;\n  inline-size: 100%;\n  border-width: 1px;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n  font-family: var(--calcite-font-family);\n  color: var(--calcite-color-text-1);\n  min-inline-size: 12rem;\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n@media screen and (max-width: 480px) {\n  textarea {\n    resize: none;\n  }\n}\ntextarea:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\ntextarea.text-area--invalid {\n  border-width: 1px;\n  border-block-end-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-color-status-danger);\n}\ntextarea.text-area--invalid:focus {\n  outline: 2px solid var(--calcite-color-status-danger);\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\ntextarea.footer--slotted {\n  min-inline-size: 18rem;\n}\n\n.footer {\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  border-width: 1px;\n  border-block-start-width: 0px;\n  border-style: solid;\n  border-color: var(--calcite-color-border-input);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n.character-limit {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  white-space: nowrap;\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-2);\n}\n\n.character--over-limit {\n  font-weight: var(--calcite-font-weight-bold);\n  color: var(--calcite-color-status-danger);\n}\n\n:host([resize=none]) textarea {\n  resize: none;\n}\n\n:host([resize=horizontal]) textarea {\n  resize: horizontal;\n}\n\n:host([resize=vertical]) textarea {\n  resize: vertical;\n}\n\n:host([scale=s]) {\n  font-size: var(--calcite-font-size--2);\n}\n:host([scale=s]) .footer {\n  padding-block: 0.25rem;\n  padding-inline: 0.5rem;\n  min-block-size: 1.75rem;\n}\n:host([scale=s]) textarea {\n  padding-block: 0.25rem;\n  padding-inline: 0.5rem;\n}\n:host([scale=s]) textarea,\n:host([scale=s]) .footer,\n:host([scale=s]) .character-limit {\n  padding-inline-start: 0.5rem;\n  font-size: var(--calcite-font-size--2);\n}\n\n:host([scale=m]) textarea {\n  padding-block: 0.5rem;\n  padding-inline: 0.75rem;\n}\n:host([scale=m]) .footer {\n  padding-block: 0.5rem;\n  padding-inline: 0.75rem;\n  min-block-size: 2.25rem;\n}\n:host([scale=m]) textarea,\n:host([scale=m]) .footer,\n:host([scale=m]) .character-limit {\n  padding-inline-start: 0.75rem;\n  font-size: var(--calcite-font-size--1);\n}\n\n:host([scale=l]) {\n  font-size: var(--calcite-font-size-0);\n}\n:host([scale=l]) textarea {\n  padding-block: 0.75rem;\n  padding-inline: 1rem;\n}\n:host([scale=l]) .footer {\n  padding-block: 0.75rem;\n  padding-inline: 1rem;\n  min-block-size: 2.75rem;\n}\n:host([scale=l]) textarea,\n:host([scale=l]) .footer,\n:host([scale=l]) .character-limit {\n  padding-inline-start: 1rem;\n  font-size: var(--calcite-font-size-0);\n}\n\n:host([status=invalid]) textarea {\n  border-color: var(--calcite-color-status-danger);\n}\n:host([status=invalid]) textarea:focus {\n  outline: 2px solid var(--calcite-color-status-danger);\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n.readonly {\n  background-color: var(--calcite-color-background);\n  font-weight: var(--calcite-font-weight-medium);\n}\n\n.border--color {\n  border-block-end-width: 1px;\n  border-color: var(--calcite-color-border-input);\n}\n.border--color:focus {\n  border-block-end-width: 2px;\n}\n\ntextarea.block-size--full {\n  block-size: 100%;\n}\n\n.content,\n.hide {\n  display: none;\n}\n\n.container {\n  display: flex;\n  inline-size: 100%;\n  justify-content: space-between;\n}\n\n.footer--end-only {\n  justify-content: flex-end;\n}\n\n.assistive-text {\n  position: absolute;\n  inline-size: 1px;\n  block-size: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.validation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n}\n\n:host([scale=m]) .validation-container,\n:host([scale=l]) .validation-container {\n  padding-block-start: 0.5rem;\n}\n\n:host([scale=s]) .validation-container {\n  padding-block-start: 0.25rem;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, forceUpdate, } from \"@stencil/core\";\nimport { throttle } from \"lodash-es\";\nimport { connectForm, disconnectForm, HiddenFormInputSlot, } from \"../../utils/form\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized, numberStringFormatter, } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { componentFocusable, componentLoaded, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { guid } from \"../../utils/guid\";\nimport { Validation } from \"../functional/Validation\";\nimport { syncHiddenFormInput } from \"../input/common/input\";\nimport { CSS, SLOTS, RESIZE_TIMEOUT } from \"./resources\";\n/**\n * @slot - A slot for adding text.\n * @slot footer-start - A slot for adding content to the start of the component's footer.\n * @slot footer-end - A slot for adding content to the end of the component's footer.\n */\nexport class TextArea {\n    constructor() {\n        this.guid = guid();\n        this.handleInput = (event) => {\n            this.value = event.target[\"value\"];\n            this.calciteTextAreaInput.emit();\n        };\n        this.handleChange = () => {\n            this.calciteTextAreaChange.emit();\n        };\n        this.contentSlotChangeHandler = () => {\n            if (!this.value) {\n                const nodes = this.el.childNodes;\n                nodes.forEach((el) => {\n                    if (el.nodeName === \"#text\") {\n                        this.value = el.nodeValue.trim();\n                    }\n                });\n            }\n        };\n        this.renderCharacterLimit = () => {\n            if (this.maxLength) {\n                this.localizedCharacterLengthObj = this.getLocalizedCharacterLength();\n                return (h(\"span\", { class: CSS.characterLimit }, h(\"span\", { class: { [CSS.characterOverLimit]: this.isCharacterLimitExceeded() } }, this.localizedCharacterLengthObj.currentLength), \"/\", this.localizedCharacterLengthObj.maxLength));\n            }\n            return null;\n        };\n        this.resizeObserver = createObserver(\"resize\", async () => {\n            await componentLoaded(this);\n            const { textAreaHeight, textAreaWidth, elHeight, elWidth, footerHeight, footerWidth } = this.getHeightAndWidthOfElements();\n            if (footerWidth > 0 && footerWidth !== textAreaWidth) {\n                this.footerEl.style.width = `${textAreaWidth}px`;\n            }\n            if (elWidth !== textAreaWidth || elHeight !== textAreaHeight + (footerHeight || 0)) {\n                this.setHeightAndWidthToAuto();\n            }\n        });\n        this.setTextAreaEl = (el) => {\n            this.textAreaEl = el;\n            this.resizeObserver.observe(el);\n        };\n        // height and width are set to auto here to avoid overlapping on to neighboring elements in the layout when user starts resizing.\n        // throttle is used to avoid flashing of textarea when user resizes.\n        this.setHeightAndWidthToAuto = throttle(() => {\n            if (this.resize === \"vertical\" || this.resize === \"both\") {\n                this.el.style.height = \"auto\";\n            }\n            if (this.resize === \"horizontal\" || this.resize === \"both\") {\n                this.el.style.width = \"auto\";\n            }\n        }, RESIZE_TIMEOUT, { leading: false });\n        this.columns = undefined;\n        this.disabled = false;\n        this.form = undefined;\n        this.groupSeparator = false;\n        this.label = undefined;\n        this.minLength = undefined;\n        this.maxLength = undefined;\n        this.messages = undefined;\n        this.validationMessage = undefined;\n        this.validationIcon = undefined;\n        this.validity = {\n            valid: false,\n            badInput: false,\n            customError: false,\n            patternMismatch: false,\n            rangeOverflow: false,\n            rangeUnderflow: false,\n            stepMismatch: false,\n            tooLong: false,\n            tooShort: false,\n            typeMismatch: false,\n            valueMissing: false,\n        };\n        this.name = undefined;\n        this.numberingSystem = undefined;\n        this.placeholder = undefined;\n        this.readOnly = false;\n        this.required = false;\n        this.resize = \"both\";\n        this.rows = undefined;\n        this.scale = \"m\";\n        this.status = \"idle\";\n        this.value = \"\";\n        this.wrap = \"soft\";\n        this.messageOverrides = undefined;\n        this.defaultMessages = undefined;\n        this.endSlotHasElements = undefined;\n        this.startSlotHasElements = undefined;\n        this.effectiveLocale = \"\";\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Global attributes\n    //\n    //--------------------------------------------------------------------------\n    handleGlobalAttributesChanged() {\n        forceUpdate(this);\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLabel(this);\n        connectForm(this);\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        await setUpMessages(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n        this.setTextAreaHeight();\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        this.resizeObserver?.disconnect();\n    }\n    render() {\n        const hasFooter = this.startSlotHasElements || this.endSlotHasElements || !!this.maxLength;\n        return (h(Host, { key: '47653fa89f4aab0847e03acbdfdb9acf9ca595d0' }, h(InteractiveContainer, { key: 'cd6c039609e5a01eb4a8d050268f6fc6f5994c30', disabled: this.disabled }, h(\"textarea\", { key: 'd4081f6959073a7d2a94cb4634ad7c3adde41e77', \"aria-describedby\": this.guid, \"aria-invalid\": toAriaBoolean(this.isCharacterLimitExceeded()), \"aria-label\": getLabelText(this), autofocus: this.el.autofocus, class: {\n                [CSS.readOnly]: this.readOnly,\n                [CSS.textAreaInvalid]: this.isCharacterLimitExceeded(),\n                [CSS.footerSlotted]: this.endSlotHasElements && this.startSlotHasElements,\n                [CSS.blockSizeFull]: !hasFooter,\n                [CSS.borderColor]: !hasFooter,\n            }, cols: this.columns, disabled: this.disabled, name: this.name, onChange: this.handleChange, onInput: this.handleInput, placeholder: this.placeholder, readOnly: this.readOnly, ref: this.setTextAreaEl, required: this.required, rows: this.rows, value: this.value, wrap: this.wrap }), h(\"span\", { key: '995e3424cd07b000ce133c22827e02b4ebf10e89', class: { [CSS.content]: true } }, h(\"slot\", { key: 'd4ecd57bf814e2d28a791d6cdb91fc795d4561ec', onSlotchange: this.contentSlotChangeHandler })), h(\"footer\", { key: '213c4a6ecaa8cac9fd66f70638378b47f84b9c67', class: {\n                [CSS.footer]: true,\n                [CSS.readOnly]: this.readOnly,\n                [CSS.hide]: !hasFooter,\n            }, ref: (el) => (this.footerEl = el) }, h(\"div\", { key: '292617d440aded7dc965bb6cd0b7fcf521d9045f', class: {\n                [CSS.container]: true,\n                [CSS.footerEndSlotOnly]: !this.startSlotHasElements && this.endSlotHasElements,\n            } }, h(\"slot\", { key: '770befb7baad233ba7870ee6044527cebbd290f2', name: SLOTS.footerStart, onSlotchange: (event) => (this.startSlotHasElements = slotChangeHasAssignedElement(event)) }), h(\"slot\", { key: '03eb22b898055d5fe73718ae021f5910debf36b5', name: SLOTS.footerEnd, onSlotchange: (event) => (this.endSlotHasElements = slotChangeHasAssignedElement(event)) })), this.renderCharacterLimit()), h(HiddenFormInputSlot, { key: '909a9f939b71898df6ac474d78bfb4fbeb5c315f', component: this }), this.isCharacterLimitExceeded() && (h(\"span\", { key: '8d79f8e592b5539f5f848f8ecfe15462ea000650', \"aria-hidden\": true, \"aria-live\": \"polite\", class: CSS.assistiveText, id: this.guid }, this.replacePlaceHoldersInMessages())), this.validationMessage && this.status === \"invalid\" ? (h(Validation, { icon: this.validationIcon, message: this.validationMessage, scale: this.scale, status: this.status })) : null)));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        this.textAreaEl.focus();\n    }\n    /** Selects the text of the component's `value`. */\n    async selectText() {\n        await componentLoaded(this);\n        this.textAreaEl.select();\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    onLabelClick() {\n        this.setFocus();\n    }\n    getLocalizedCharacterLength() {\n        const currentLength = this.value ? this.value.length.toString() : \"0\";\n        const maxLength = this.maxLength.toString();\n        if (this.numberingSystem === \"latn\") {\n            return { currentLength, maxLength };\n        }\n        numberStringFormatter.numberFormatOptions = {\n            locale: this.effectiveLocale,\n            numberingSystem: this.numberingSystem,\n            signDisplay: \"never\",\n            useGrouping: this.groupSeparator,\n        };\n        return {\n            currentLength: numberStringFormatter.localize(currentLength),\n            maxLength: numberStringFormatter.localize(maxLength),\n        };\n    }\n    syncHiddenFormInput(input) {\n        input.setCustomValidity(\"\");\n        if (this.isCharacterLimitExceeded()) {\n            input.setCustomValidity(this.replacePlaceHoldersInMessages());\n        }\n        syncHiddenFormInput(\"textarea\", this, input);\n    }\n    setTextAreaHeight() {\n        const { textAreaHeight, elHeight, footerHeight } = this.getHeightAndWidthOfElements();\n        if (footerHeight > 0 && textAreaHeight + footerHeight != elHeight) {\n            this.textAreaEl.style.height = `${elHeight - footerHeight}px`;\n        }\n    }\n    getHeightAndWidthOfElements() {\n        const { height: textAreaHeight, width: textAreaWidth } = this.textAreaEl.getBoundingClientRect();\n        const { height: elHeight, width: elWidth } = this.el.getBoundingClientRect();\n        const { height: footerHeight, width: footerWidth } = this.footerEl.getBoundingClientRect();\n        return {\n            textAreaHeight,\n            textAreaWidth,\n            elHeight,\n            elWidth,\n            footerHeight,\n            footerWidth,\n        };\n    }\n    replacePlaceHoldersInMessages() {\n        return this.messages.tooLong\n            .replace(\"{maxLength}\", this.localizedCharacterLengthObj.maxLength)\n            .replace(\"{currentLength}\", this.localizedCharacterLengthObj.currentLength);\n    }\n    isCharacterLimitExceeded() {\n        return this.value?.length > this.maxLength;\n    }\n    static get is() { return \"calcite-text-area\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"text-area.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"text-area.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"columns\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[cols](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-cols)\"\n                        }],\n                    \"text\": \"Specifies the component's number of columns.\"\n                },\n                \"attribute\": \"columns\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\"\n                        }],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"groupSeparator\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, number values are displayed with a group separator corresponding to the language and country format.\"\n                },\n                \"attribute\": \"group-separator\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"minLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-minlength)\"\n                        }],\n                    \"text\": \"Specifies the minimum number of characters allowed.\"\n                },\n                \"attribute\": \"min-length\",\n                \"reflect\": true\n            },\n            \"maxLength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-maxlength)\"\n                        }],\n                    \"text\": \"Specifies the maximum number of characters allowed.\"\n                },\n                \"attribute\": \"max-length\",\n                \"reflect\": true\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"TextAreaMessages\",\n                    \"resolved\": \"{ invalid: string; tooLong: string; }\",\n                    \"references\": {\n                        \"TextAreaMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/text-area/t9n\",\n                            \"id\": \"src/components/text-area/assets/text-area/t9n/index.d.ts::TextAreaMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"validationMessage\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation message to display under the component.\"\n                },\n                \"attribute\": \"validation-message\",\n                \"reflect\": false\n            },\n            \"validationIcon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the validation icon to display under the component.\"\n                },\n                \"attribute\": \"validation-icon\",\n                \"reflect\": true\n            },\n            \"validity\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MutableValidityState\",\n                    \"resolved\": \"{ valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; }\",\n                    \"references\": {\n                        \"MutableValidityState\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/form\",\n                            \"id\": \"src/utils/form.tsx::MutableValidityState\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"mdn\",\n                            \"text\": \"[ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\"\n                        }],\n                    \"text\": \"The current validation state of the component.\"\n                },\n                \"defaultValue\": \"{\\n    valid: false,\\n    badInput: false,\\n    customError: false,\\n    patternMismatch: false,\\n    rangeOverflow: false,\\n    rangeUnderflow: false,\\n    stepMismatch: false,\\n    tooLong: false,\\n    tooShort: false,\\n    typeMismatch: false,\\n    valueMissing: false,\\n  }\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-name)\"\n                        }],\n                    \"text\": \"Specifies the name of the component.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"numberingSystem\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NumberingSystem\",\n                    \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"latn\\\"\",\n                    \"references\": {\n                        \"NumberingSystem\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/locale\",\n                            \"id\": \"src/utils/locale.ts::NumberingSystem\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n                },\n                \"attribute\": \"numbering-system\",\n                \"reflect\": false\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-placeholder)\"\n                        }],\n                    \"text\": \"Specifies the placeholder text for the component.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"readOnly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }, {\n                            \"name\": \"mdn\",\n                            \"text\": \"[readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\"\n                        }],\n                    \"text\": \"When `true`, the component's `value` can be read, but cannot be modified.\"\n                },\n                \"attribute\": \"read-only\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[required]https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required\"\n                        }],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"resize\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"\\\"both\\\" | \\\"horizontal\\\" | \\\"vertical\\\" | \\\"none\\\"\",\n                    \"resolved\": \"\\\"both\\\" | \\\"horizontal\\\" | \\\"none\\\" | \\\"vertical\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies if the component is resizable.\"\n                },\n                \"attribute\": \"resize\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"both\\\"\"\n            },\n            \"rows\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[rows](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-rows)\"\n                        }],\n                    \"text\": \"Specifies the component's number of rows.\"\n                },\n                \"attribute\": \"rows\",\n                \"reflect\": true\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"status\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Status\",\n                    \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n                    \"references\": {\n                        \"Status\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Status\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the status of the input field, which determines message and icons.\"\n                },\n                \"attribute\": \"status\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"idle\\\"\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"\\\"\\\"\"\n            },\n            \"wrap\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"\\\"soft\\\" | \\\"hard\\\"\",\n                    \"resolved\": \"\\\"hard\\\" | \\\"soft\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"mdn\",\n                            \"text\": \"[wrap](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-wrap)\"\n                        }],\n                    \"text\": \"Specifies the wrapping mechanism for the text.\"\n                },\n                \"attribute\": \"wrap\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"soft\\\"\"\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<TextAreaMessages>\",\n                    \"resolved\": \"{ invalid?: string; tooLong?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"TextAreaMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/text-area/t9n\",\n                            \"id\": \"src/components/text-area/assets/text-area/t9n/index.d.ts::TextAreaMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"defaultMessages\": {},\n            \"endSlotHasElements\": {},\n            \"startSlotHasElements\": {},\n            \"effectiveLocale\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteTextAreaInput\",\n                \"name\": \"calciteTextAreaInput\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new `value` is typed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteTextAreaChange\",\n                \"name\": \"calciteTextAreaChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires each time a new `value` is typed and committed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            },\n            \"selectText\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Selects the text of the component's `value`.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"autofocus\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=text-area.js.map\n"],"mappings":"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"}