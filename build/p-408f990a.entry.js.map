{"version":3,"names":["CSS","icon","flipRtl","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","scale","size","name","normalizeIconName","filled","charAt","length","iconName","substring","async","fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","fetch","getAssetPath","then","resp","json","catch","console","error","path","getCachedIconData","id","numberLeadingName","isNaN","Number","parts","split","kebabCased","firstNonDigitInPartPattern","map","part","partIndex","replace","replacer","match","offset","isFirstCharInName","toUpperCase","join","iconCss","Icon","constructor","hostRef","this","textLabel","undefined","pathData","visible","connectedCallback","waitUntilVisible","loadIconPathData","disconnectedCallback","_a","intersectionObserver","disconnect","render","el","dir","getElementDir","semantic","paths","concat","h","Host","key","toAriaBoolean","role","class","svg","fill","height","viewBox","width","xmlns","d","opacity","isBrowser","fetchIconProps","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/icon/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/icon/utils.js","./node_modules/@esri/calcite-components/dist/collection/components/icon/icon.css?tag=calcite-icon&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/icon/icon.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    icon: \"icon\",\n    flipRtl: \"flip-rtl\",\n};\n//# sourceMappingURL=resources.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { getAssetPath } from \"@stencil/core\";\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache = {};\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache = {};\nexport const scaleToPx = {\n    s: 16,\n    m: 24,\n    l: 32,\n};\nfunction generateIconId({ icon, scale }) {\n    const size = scaleToPx[scale];\n    const name = normalizeIconName(icon);\n    const filled = name.charAt(name.length - 1) === \"F\";\n    const iconName = filled ? name.substring(0, name.length - 1) : name;\n    return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\nexport async function fetchIcon(props) {\n    const cachedIconKey = generateIconId(props);\n    const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n    if (cachedIconData) {\n        return cachedIconData;\n    }\n    if (!requestCache[cachedIconKey]) {\n        requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n            .then((resp) => resp.json())\n            .catch(() => {\n            console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n            return \"\";\n        });\n    }\n    const path = await requestCache[cachedIconKey];\n    iconCache[cachedIconKey] = path;\n    return path;\n}\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props) {\n    return getCachedIconDataByKey(generateIconId(props));\n}\nfunction getCachedIconDataByKey(id) {\n    return iconCache[id];\n}\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name) {\n    const numberLeadingName = !isNaN(Number(name.charAt(0)));\n    const parts = name.split(\"-\");\n    const kebabCased = parts.length > 0;\n    if (kebabCased) {\n        const firstNonDigitInPartPattern = /[a-z]/i;\n        name = parts\n            .map((part, partIndex) => {\n            return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n                const isFirstCharInName = partIndex === 0 && offset === 0;\n                if (isFirstCharInName) {\n                    return match;\n                }\n                return match.toUpperCase();\n            });\n        })\n            .join(\"\");\n    }\n    return numberLeadingName ? `i${name}` : name;\n}\n//# sourceMappingURL=utils.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n*/\n:host {\n  display: inline-flex;\n  color: var(--calcite-ui-icon-color);\n}\n\n:host([scale=s]) {\n  inline-size: 16px;\n  block-size: 16px;\n  min-inline-size: 16px;\n  min-block-size: 16px;\n}\n\n:host([scale=m]) {\n  inline-size: 24px;\n  block-size: 24px;\n  min-inline-size: 24px;\n  min-block-size: 24px;\n}\n\n:host([scale=l]) {\n  inline-size: 32px;\n  block-size: 32px;\n  min-inline-size: 32px;\n  min-block-size: 32px;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nexport class Icon {\n    constructor() {\n        this.icon = null;\n        this.flipRtl = false;\n        this.scale = \"m\";\n        this.textLabel = undefined;\n        this.pathData = undefined;\n        this.visible = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        if (!this.visible) {\n            this.waitUntilVisible(() => {\n                this.visible = true;\n                this.loadIconPathData();\n            });\n        }\n    }\n    disconnectedCallback() {\n        this.intersectionObserver?.disconnect();\n        this.intersectionObserver = null;\n    }\n    render() {\n        const { el, flipRtl, pathData, scale, textLabel } = this;\n        const dir = getElementDir(el);\n        const size = scaleToPx[scale];\n        const semantic = !!textLabel;\n        const paths = [].concat(pathData || \"\");\n        return (h(Host, { key: 'cc43afdebd39df596be0a30677a9be5ba0db4fe0', \"aria-hidden\": toAriaBoolean(!semantic), \"aria-label\": semantic ? textLabel : null, role: semantic ? \"img\" : null }, h(\"svg\", { key: 'a40833fc10f8bb7f287eb0c75f7437cb18880603', \"aria-hidden\": \"true\", class: {\n                [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n                svg: true,\n            }, fill: \"currentColor\", height: \"100%\", viewBox: `0 0 ${size} ${size}`, width: \"100%\", xmlns: \"http://www.w3.org/2000/svg\" }, paths.map((path) => typeof path === \"string\" ? (h(\"path\", { d: path })) : (h(\"path\", { d: path.d, opacity: \"opacity\" in path ? path.opacity : 1 }))))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    async loadIconPathData() {\n        const { icon, scale, visible } = this;\n        if (!isBrowser() || !icon || !visible) {\n            return;\n        }\n        const fetchIconProps = { icon, scale };\n        const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n        // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n        if (icon !== this.icon) {\n            return;\n        }\n        this.pathData = pathData;\n    }\n    waitUntilVisible(callback) {\n        this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    this.intersectionObserver.disconnect();\n                    this.intersectionObserver = null;\n                    callback();\n                }\n            });\n        }, { rootMargin: \"50px\" });\n        if (!this.intersectionObserver) {\n            callback();\n            return;\n        }\n        this.intersectionObserver.observe(this.el);\n    }\n    static get is() { return \"calcite-icon\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"icon.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"icon.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"icon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString\",\n                    \"resolved\": \"string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"see\",\n                            \"text\": \"[Icons](https://esri.github.io/calcite-ui-icons)\"\n                        }],\n                    \"text\": \"Displays a specific icon.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true,\n                \"defaultValue\": \"null\"\n            },\n            \"flipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"textLabel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\\n\\nIt is recommended to set this value if your icon is semantic.\"\n                },\n                \"attribute\": \"text-label\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"pathData\": {},\n            \"visible\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"icon\",\n                \"methodName\": \"loadIconPathData\"\n            }, {\n                \"propName\": \"scale\",\n                \"methodName\": \"loadIconPathData\"\n            }];\n    }\n}\n//# sourceMappingURL=icon.js.map\n"],"mappings":"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"}