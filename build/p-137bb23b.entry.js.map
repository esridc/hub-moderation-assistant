{"version":3,"names":["slope","p0","p1","p2","dx","dx1","dy","dy1","m","m1","p","Math","sign","min","abs","slopeSingle","bezier","m0","t","x0","y0","x1","y1","h1","join","h2","translate","width","height","max","rangeX","rangeY","point","x","y","range","data","startX","startY","reduce","area","length","minX","minY","maxX","commands","acc","i","undefined","command","last","end","graphCss","Graph","constructor","hostRef","this","graphId","guid","resizeObserver","createObserver","forceUpdate","colorStops","highlightMin","highlightMax","connectedCallback","_a","observe","el","disconnectedCallback","disconnect","render","id","clientHeight","clientWidth","h","class","preserveAspectRatio","viewBox","rangeMin","rangeMax","currentMin","currentMax","hMinX","hMaxX","areaPath","fill","x2","y2","map","offset","color","opacity","d","mask"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/graph/util.js","./node_modules/@esri/calcite-components/dist/collection/components/graph/graph.css?tag=calcite-graph&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/graph/graph.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\n/**\n * Calculate slope of the tangents\n * uses Steffen interpolation as it's monotonic\n * http://jrwalsh1.github.io/posts/interpolations/\n *\n * @param p0\n * @param p1\n * @param p2\n */\nfunction slope(p0, p1, p2) {\n    const dx = p1[0] - p0[0];\n    const dx1 = p2[0] - p1[0];\n    const dy = p1[1] - p0[1];\n    const dy1 = p2[1] - p1[1];\n    const m = dy / (dx || (dx1 < 0 && 0));\n    const m1 = dy1 / (dx1 || (dx < 0 && 0));\n    const p = (m * dx1 + m1 * dx) / (dx + dx1);\n    return (Math.sign(m) + Math.sign(m1)) * Math.min(Math.abs(m), Math.abs(m1), 0.5 * Math.abs(p)) || 0;\n}\n/**\n * Calculate slope for just one tangent (single-sided)\n *\n * @param p0\n * @param p1\n * @param m\n */\nfunction slopeSingle(p0, p1, m) {\n    const dx = p1[0] - p0[0];\n    const dy = p1[1] - p0[1];\n    return dx ? ((3 * dy) / dx - m) / 2 : m;\n}\n/**\n * Given two points and their tangent slopes,\n * calculate the bezier handle coordinates and return draw command.\n *\n * Translates Hermite Spline to BÃ©zier curve:\n * https://stackoverflow.com/questions/42574940/\n *\n * @param p0\n * @param p1\n * @param m0\n * @param m1\n * @param t\n */\nfunction bezier(p0, p1, m0, m1, t) {\n    const [x0, y0] = p0;\n    const [x1, y1] = p1;\n    const dx = (x1 - x0) / 3;\n    const h1 = t([x0 + dx, y0 + dx * m0]).join(\",\");\n    const h2 = t([x1 - dx, y1 - dx * m1]).join(\",\");\n    const p = t([x1, y1]).join(\",\");\n    return `C ${h1} ${h2} ${p}`;\n}\n/**\n * Generate a function which will translate a point\n * from the data coordinate space to svg viewbox oriented pixels\n *\n * @param root0\n * @param root0.width\n * @param root0.height\n * @param root0.min\n * @param root0.max\n */\nexport function translate({ width, height, min, max }) {\n    const rangeX = max[0] - min[0];\n    const rangeY = max[1] - min[1];\n    return (point) => {\n        const x = ((point[0] - min[0]) / rangeX) * width;\n        const y = height - (point[1] / rangeY) * height;\n        return [x, y];\n    };\n}\n/**\n * Get the min and max values from the dataset\n *\n * @param data\n */\nexport function range(data) {\n    const [startX, startY] = data[0];\n    const min = [startX, startY];\n    const max = [startX, startY];\n    return data.reduce(({ min, max }, [x, y]) => ({\n        min: [Math.min(min[0], x), Math.min(min[1], y)],\n        max: [Math.max(max[0], x), Math.max(max[1], y)],\n    }), { min, max });\n}\n/**\n * Generate drawing commands for an area graph\n * returns a string can can be passed directly to a path element's `d` attribute\n *\n * @param root0\n * @param root0.data\n * @param root0.min\n * @param root0.max\n * @param root0.t\n */\nexport function area({ data, min, max, t }) {\n    if (data.length === 0) {\n        return \"\";\n    }\n    // important points for beginning and ending the path\n    const [startX, startY] = t(data[0]);\n    const [minX, minY] = t(min);\n    const [maxX] = t(max);\n    // keep track of previous slope/points\n    let m;\n    let p0;\n    let p1;\n    // iterate over data points, calculating command for each\n    const commands = data.reduce((acc, point, i) => {\n        p0 = data[i - 2];\n        p1 = data[i - 1];\n        if (i > 1) {\n            const m1 = slope(p0, p1, point);\n            const m0 = m === undefined ? slopeSingle(p0, p1, m1) : m;\n            const command = bezier(p0, p1, m0, m1, t);\n            m = m1;\n            return `${acc} ${command}`;\n        }\n        return acc;\n    }, `M ${minX},${minY} L ${minX},${startY} L ${startX},${startY}`);\n    // close the path\n    const last = data[data.length - 1];\n    const end = bezier(p1, last, m, slopeSingle(p1, last, m), t);\n    return `${commands} ${end} L ${maxX},${minY} Z`;\n}\n//# sourceMappingURL=util.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n  display: block;\n  block-size: 100%;\n}\n\n.svg {\n  fill: currentColor;\n  stroke: transparent;\n  margin: 0px;\n  display: block;\n  block-size: 100%;\n  inline-size: 100%;\n  padding: 0px;\n}\n.svg .graph-path--highlight {\n  fill: var(--calcite-color-brand);\n  opacity: 0.5;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { forceUpdate, h } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { createObserver } from \"../../utils/observers\";\nimport { area, range, translate } from \"./util\";\nexport class Graph {\n    constructor() {\n        this.graphId = `calcite-graph-${guid()}`;\n        this.resizeObserver = createObserver(\"resize\", () => forceUpdate(this));\n        this.data = [];\n        this.colorStops = undefined;\n        this.highlightMin = undefined;\n        this.highlightMax = undefined;\n        this.min = undefined;\n        this.max = undefined;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        this.resizeObserver?.observe(this.el);\n    }\n    disconnectedCallback() {\n        this.resizeObserver?.disconnect();\n    }\n    render() {\n        const { data, colorStops, el, highlightMax, highlightMin, min, max } = this;\n        const id = this.graphId;\n        const { clientHeight: height, clientWidth: width } = el;\n        // if we have no data, return empty svg\n        if (!data || data.length === 0) {\n            return (h(\"svg\", { \"aria-hidden\": \"true\", class: \"svg\", height: height, preserveAspectRatio: \"none\", viewBox: `0 0 ${width} ${height}`, width: width }));\n        }\n        const { min: rangeMin, max: rangeMax } = range(data);\n        let currentMin = rangeMin;\n        let currentMax = rangeMax;\n        if (min < rangeMin[0] || min > rangeMin[0]) {\n            currentMin = [min, 0];\n        }\n        if (max > rangeMax[0] || max < rangeMax[0]) {\n            currentMax = [max, rangeMax[1]];\n        }\n        const t = translate({ min: currentMin, max: currentMax, width, height });\n        const [hMinX] = t([highlightMin, currentMax[1]]);\n        const [hMaxX] = t([highlightMax, currentMax[1]]);\n        const areaPath = area({ data, min: rangeMin, max: rangeMax, t });\n        const fill = colorStops ? `url(#linear-gradient-${id})` : undefined;\n        return (h(\"svg\", { \"aria-hidden\": \"true\", class: \"svg\", height: height, preserveAspectRatio: \"none\", viewBox: `0 0 ${width} ${height}`, width: width }, colorStops ? (h(\"defs\", null, h(\"linearGradient\", { id: `linear-gradient-${id}`, x1: \"0\", x2: \"1\", y1: \"0\", y2: \"0\" }, colorStops.map(({ offset, color, opacity }) => (h(\"stop\", { offset: `${offset * 100}%`, \"stop-color\": color, \"stop-opacity\": opacity })))))) : null, highlightMin !== undefined ? ([\n            h(\"mask\", { height: \"100%\", id: `${id}1`, width: \"100%\", x: \"0%\", y: \"0%\" }, h(\"path\", { d: `\n            M 0,0\n            L ${hMinX - 1},0\n            L ${hMinX - 1},${height}\n            L 0,${height}\n            Z\n          `, fill: \"white\" })),\n            h(\"mask\", { height: \"100%\", id: `${id}2`, width: \"100%\", x: \"0%\", y: \"0%\" }, h(\"path\", { d: `\n            M ${hMinX + 1},0\n            L ${hMaxX - 1},0\n            L ${hMaxX - 1},${height}\n            L ${hMinX + 1}, ${height}\n            Z\n          `, fill: \"white\" })),\n            h(\"mask\", { height: \"100%\", id: `${id}3`, width: \"100%\", x: \"0%\", y: \"0%\" }, h(\"path\", { d: `\n                M ${hMaxX + 1},0\n                L ${width},0\n                L ${width},${height}\n                L ${hMaxX + 1}, ${height}\n                Z\n              `, fill: \"white\" })),\n            h(\"path\", { class: \"graph-path\", d: areaPath, fill: fill, mask: `url(#${id}1)` }),\n            h(\"path\", { class: \"graph-path--highlight\", d: areaPath, fill: fill, mask: `url(#${id}2)` }),\n            h(\"path\", { class: \"graph-path\", d: areaPath, fill: fill, mask: `url(#${id}3)` }),\n        ]) : (h(\"path\", { class: \"graph-path\", d: areaPath, fill: fill }))));\n    }\n    static get is() { return \"calcite-graph\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"graph.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"graph.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"data\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"DataSeries\",\n                    \"resolved\": \"Point[]\",\n                    \"references\": {\n                        \"DataSeries\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/graph/interfaces.ts::DataSeries\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of tuples describing a single data point ([x, y])\\nThese data points should be sorted by x-axis value.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"colorStops\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ColorStop[]\",\n                    \"resolved\": \"ColorStop[]\",\n                    \"references\": {\n                        \"ColorStop\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/graph/interfaces.ts::ColorStop\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of values describing a single color stop ([offset, color, opacity])\\nThese color stops should be sorted by offset value.\"\n                }\n            },\n            \"highlightMin\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Start of highlight color if highlighting range.\"\n                },\n                \"attribute\": \"highlight-min\",\n                \"reflect\": false\n            },\n            \"highlightMax\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"End of highlight color if highlighting range.\"\n                },\n                \"attribute\": \"highlight-max\",\n                \"reflect\": false\n            },\n            \"min\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Lowest point of the range.\"\n                },\n                \"attribute\": \"min\",\n                \"reflect\": true\n            },\n            \"max\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Highest point of the range.\"\n                },\n                \"attribute\": \"max\",\n                \"reflect\": true\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n//# sourceMappingURL=graph.js.map\n"],"mappings":"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"}