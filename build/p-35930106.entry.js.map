{"version":3,"names":["isTreeItem","element","tagName","getTraversableItems","root","Array","from","querySelectorAll","filter","item","currentItem","undefined","parent","parentElement","traversable","hasChildren","expanded","treeCss","Tree","constructor","hostRef","this","keyDownHandler","event","child","el","target","supportedKeys","contains","includes","key","traversableItems","forEach","tabIndex","currentItemIndex","indexOf","nextItem","focus","preventDefault","previousItem","rootToItemPath","slice","reverse","parentItem","find","depth","disabled","firstNode","shift","lastNode","pop","lines","scale","selectionMode","selectedItems","componentWillRender","_a","closest","render","h","Host","toString","onKeyDown","role","getRootTabIndex","onFocus","focusTarget","querySelector","focusElement","onFocusIn","focusedFromRootOrOutsideTree","relatedTarget","removeAttribute","onFocusOut","willFocusOutsideTree","onInternalTreeItemSelect","childItems","nodeListToArray","stopPropagation","updateAncestorTree","isNoneSelectionMode","shouldSelect","shouldDeselectAllChildren","shouldModifyToCurrentSelection","detail","modifyCurrentSelection","shouldClearCurrentSelection","length","shouldUpdateExpand","targetItems","push","treeItem","selected","window","getSelection","removeAllRanges","i","calciteTreeSelect","emit","updateItem","indeterminate","ancestors","childItemsWithNoChildren","childItemsWithChildren","futureSelected","updateItemState","unselected","directChildItems","ancestor","descendants","activeDescendants"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/tree/utils.js","./node_modules/@esri/calcite-components/dist/collection/components/tree/tree.css?tag=calcite-tree&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/tree/tree.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport function isTreeItem(element) {\n    return element?.tagName === \"CALCITE-TREE-ITEM\";\n}\nexport function getTraversableItems(root) {\n    return Array.from(root.querySelectorAll(\"calcite-tree-item:not([disabled])\")).filter((item) => {\n        let currentItem = item;\n        while (currentItem !== root && currentItem !== undefined) {\n            const parent = currentItem.parentElement;\n            const traversable = !isTreeItem(parent) || !parent.hasChildren || parent.expanded;\n            if (!traversable) {\n                return false;\n            }\n            currentItem = currentItem.parentElement;\n        }\n        return true;\n    });\n}\n//# sourceMappingURL=utils.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n    display: block\n}\n\n:host(:focus) {\n    outline: 2px solid transparent;\n    outline-offset: 2px\n}\n\n:host([hidden]) {\n    display: none\n}\n\n[hidden] {\n    display: none\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { focusElement, nodeListToArray } from \"../../utils/dom\";\nimport { getTraversableItems, isTreeItem } from \"./utils\";\n/**\n * @slot - A slot for `calcite-tree-item` elements.\n */\nexport class Tree {\n    constructor() {\n        this.keyDownHandler = (event) => {\n            if (this.child) {\n                return;\n            }\n            const root = this.el;\n            const target = event.target;\n            const supportedKeys = [\"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"ArrowUp\", \"Home\", \"End\", \"Tab\"];\n            if (!(isTreeItem(target) && this.el.contains(target)) || !supportedKeys.includes(event.key)) {\n                return;\n            }\n            const traversableItems = getTraversableItems(root);\n            if (event.key === \"Tab\") {\n                // root tabindex will be restored when blurred/focused\n                traversableItems.forEach((item) => (item.tabIndex = -1));\n                return;\n            }\n            if (event.key === \"ArrowDown\") {\n                const currentItemIndex = traversableItems.indexOf(target);\n                const nextItem = traversableItems[currentItemIndex + 1];\n                nextItem?.focus();\n                event.preventDefault();\n                return;\n            }\n            if (event.key === \"ArrowUp\") {\n                const currentItemIndex = traversableItems.indexOf(target);\n                const previousItem = traversableItems[currentItemIndex - 1];\n                previousItem?.focus();\n                event.preventDefault();\n                return;\n            }\n            if (event.key === \"ArrowLeft\") {\n                if (target.hasChildren && target.expanded) {\n                    target.expanded = false;\n                    event.preventDefault();\n                    return;\n                }\n                const rootToItemPath = traversableItems.slice(0, traversableItems.indexOf(target)).reverse();\n                const parentItem = rootToItemPath.find((item) => item.depth === target.depth - 1);\n                parentItem?.focus();\n                event.preventDefault();\n                return;\n            }\n            if (event.key === \"ArrowRight\") {\n                if (!target.disabled && target.hasChildren) {\n                    if (!target.expanded) {\n                        target.expanded = true;\n                        event.preventDefault();\n                    }\n                    else {\n                        const currentItemIndex = traversableItems.indexOf(target);\n                        const nextItem = traversableItems[currentItemIndex + 1];\n                        nextItem?.focus();\n                        event.preventDefault();\n                    }\n                }\n                return;\n            }\n            if (event.key === \"Home\") {\n                const firstNode = traversableItems.shift();\n                if (firstNode) {\n                    firstNode.focus();\n                    event.preventDefault();\n                }\n                return;\n            }\n            if (event.key === \"End\") {\n                const lastNode = traversableItems.pop();\n                if (lastNode) {\n                    lastNode.focus();\n                    event.preventDefault();\n                }\n                return;\n            }\n        };\n        this.lines = false;\n        this.child = undefined;\n        this.scale = \"m\";\n        this.selectionMode = \"single\";\n        this.selectedItems = [];\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    componentWillRender() {\n        const parent = this.el.parentElement?.closest(\"calcite-tree\");\n        this.lines = parent ? parent.lines : this.lines;\n        this.scale = parent ? parent.scale : this.scale;\n        this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n        this.child = !!parent;\n    }\n    render() {\n        return (h(Host, { key: '11e0267b52e39a4d81bbcfbb18d8357b48b2dfa0', \"aria-multiselectable\": this.child\n                ? undefined\n                : (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\").toString(), onKeyDown: this.keyDownHandler, role: !this.child ? \"tree\" : undefined, tabIndex: this.getRootTabIndex() }, h(\"slot\", { key: 'c547c3b3931a18caae76feb6f0fe0134588dad68' })));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    onFocus() {\n        if (!this.child) {\n            const focusTarget = this.el.querySelector(\"calcite-tree-item[selected]:not([disabled])\") || this.el.querySelector(\"calcite-tree-item:not([disabled])\");\n            focusElement(focusTarget);\n        }\n    }\n    onFocusIn(event) {\n        const focusedFromRootOrOutsideTree = event.relatedTarget === this.el || !this.el.contains(event.relatedTarget);\n        if (focusedFromRootOrOutsideTree) {\n            // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)\n            this.el.removeAttribute(\"tabindex\");\n        }\n    }\n    onFocusOut(event) {\n        const willFocusOutsideTree = !this.el.contains(event.relatedTarget);\n        if (willFocusOutsideTree) {\n            this.el.tabIndex = this.getRootTabIndex();\n        }\n    }\n    onInternalTreeItemSelect(event) {\n        if (this.child) {\n            return;\n        }\n        const target = event.target;\n        const childItems = nodeListToArray(target.querySelectorAll(\"calcite-tree-item\"));\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.selectionMode === \"ancestors\") {\n            this.updateAncestorTree(event);\n            return;\n        }\n        const isNoneSelectionMode = this.selectionMode === \"none\";\n        const shouldSelect = this.selectionMode !== null &&\n            (!target.hasChildren ||\n                (target.hasChildren &&\n                    (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\")));\n        const shouldDeselectAllChildren = this.selectionMode === \"multichildren\" && target.hasChildren;\n        const shouldModifyToCurrentSelection = !isNoneSelectionMode &&\n            event.detail.modifyCurrentSelection &&\n            (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n        const shouldClearCurrentSelection = !shouldModifyToCurrentSelection &&\n            (((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") &&\n                childItems.length <= 0) ||\n                this.selectionMode === \"children\" ||\n                this.selectionMode === \"multichildren\" ||\n                (this.selectionMode === \"single-persist\" && !target.hasChildren));\n        const shouldUpdateExpand = [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode) &&\n            target.hasChildren;\n        const targetItems = [];\n        if (shouldSelect) {\n            targetItems.push(target);\n        }\n        if (shouldClearCurrentSelection) {\n            const selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item[selected]\"));\n            selectedItems.forEach((treeItem) => {\n                if (!targetItems.includes(treeItem)) {\n                    treeItem.selected = false;\n                }\n            });\n        }\n        if (shouldUpdateExpand &&\n            [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode)) {\n            target.expanded = !target.expanded;\n        }\n        if (shouldDeselectAllChildren) {\n            childItems.forEach((item) => {\n                item.selected = false;\n                if (item.hasChildren) {\n                    item.expanded = false;\n                }\n            });\n        }\n        if (shouldModifyToCurrentSelection) {\n            window.getSelection().removeAllRanges();\n        }\n        if (shouldModifyToCurrentSelection && target.selected) {\n            targetItems.forEach((treeItem) => {\n                if (!treeItem.disabled) {\n                    treeItem.selected = false;\n                }\n            });\n        }\n        else if (!isNoneSelectionMode) {\n            targetItems.forEach((treeItem) => {\n                if (!treeItem.disabled) {\n                    treeItem.selected = this.selectionMode !== \"single\" || !treeItem.selected;\n                }\n            });\n        }\n        this.selectedItems = isNoneSelectionMode\n            ? []\n            : nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n        this.calciteTreeSelect.emit();\n        event.stopPropagation();\n    }\n    updateAncestorTree(event) {\n        const item = event.target;\n        const updateItem = event.detail.updateItem;\n        if (item.disabled || (item.indeterminate && !updateItem)) {\n            return;\n        }\n        const ancestors = [];\n        let parent = item.parentElement.closest(\"calcite-tree-item\");\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.parentElement.closest(\"calcite-tree-item\");\n        }\n        const childItems = Array.from(item.querySelectorAll(\"calcite-tree-item:not([disabled])\"));\n        const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n        const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n        let futureSelected;\n        if (updateItem) {\n            futureSelected = item.hasChildren ? !(item.selected || item.indeterminate) : !item.selected;\n        }\n        else {\n            futureSelected = item.selected;\n        }\n        childItemsWithNoChildren.forEach((el) => {\n            el.selected = futureSelected;\n            el.indeterminate = false;\n        });\n        function updateItemState(childItems, item) {\n            const selected = childItems.filter((child) => child.selected);\n            const unselected = childItems.filter((child) => !child.selected);\n            item.selected = selected.length === childItems.length;\n            item.indeterminate = selected.length > 0 && unselected.length > 0;\n        }\n        childItemsWithChildren.reverse().forEach((el) => {\n            const directChildItems = Array.from(el.querySelectorAll(\":scope > calcite-tree > calcite-tree-item\"));\n            updateItemState(directChildItems, el);\n        });\n        if (updateItem) {\n            if (item.hasChildren) {\n                updateItemState(childItems, item);\n            }\n            else {\n                item.selected = futureSelected;\n                item.indeterminate = false;\n            }\n        }\n        ancestors.forEach((ancestor) => {\n            const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n            const activeDescendants = descendants.filter((el) => el.selected);\n            if (activeDescendants.length === 0) {\n                ancestor.selected = false;\n                ancestor.indeterminate = false;\n                return;\n            }\n            const indeterminate = activeDescendants.length < descendants.length;\n            ancestor.indeterminate = indeterminate;\n            ancestor.selected = !indeterminate;\n        });\n        this.selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n        if (updateItem) {\n            this.calciteTreeSelect.emit();\n        }\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    getRootTabIndex() {\n        return !this.child ? 0 : -1;\n    }\n    static get is() { return \"calcite-tree\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"tree.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"tree.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"lines\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays indentation guide lines.\"\n                },\n                \"attribute\": \"lines\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"child\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"child\",\n                \"reflect\": true\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"selectionMode\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"SelectionMode\",\n                    \"resolved\": \"\\\"ancestors\\\" | \\\"children\\\" | \\\"multichildren\\\" | \\\"multiple\\\" | \\\"none\\\" | \\\"single\\\" | \\\"single-persist\\\"\",\n                    \"references\": {\n                        \"SelectionMode\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::SelectionMode\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"default\",\n                            \"text\": \"\\\"single\\\"\"\n                        }],\n                    \"text\": \"Specifies the selection mode of the component, where:\\n\\n`\\\"ancestors\\\"` displays with a checkbox and allows any number of selections from corresponding parent and child selections,\\n\\n`\\\"children\\\"` allows any number of selections from one parent from corresponding parent and child selections,\\n\\n`\\\"multichildren\\\"` allows any number of selections from corresponding parent and child selections,\\n\\n`\\\"multiple\\\"` allows any number of selections,\\n\\n`\\\"none\\\"` allows no selections,\\n\\n`\\\"single\\\"` allows one selection, and\\n\\n`\\\"single-persist\\\"` allows and requires one selection.\"\n                },\n                \"attribute\": \"selection-mode\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"single\\\"\"\n            },\n            \"selectedItems\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"HTMLCalciteTreeItemElement[]\",\n                    \"resolved\": \"HTMLCalciteTreeItemElement[]\",\n                    \"references\": {\n                        \"HTMLCalciteTreeItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalciteTreeItemElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the component's selected items.\"\n                },\n                \"defaultValue\": \"[]\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteTreeSelect\",\n                \"name\": \"calciteTreeSelect\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the user selects/deselects `calcite-tree-items`.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"focus\",\n                \"method\": \"onFocus\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"focusin\",\n                \"method\": \"onFocusIn\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"focusout\",\n                \"method\": \"onFocusOut\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteInternalTreeItemSelect\",\n                \"method\": \"onInternalTreeItemSelect\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=tree.js.map\n"],"mappings":"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"}