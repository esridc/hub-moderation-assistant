{"version":3,"names":["CSS","container","containerRange","graph","handle","handleExtension","handleLabel","handleLabelMinValue","handleLabelValue","hyphen","hyphenWrap","static","thumb","thumbActive","thumbContainer","thumbMinValue","thumbPrecise","thumbValue","tick","tickActive","tickLabel","tickMax","tickMin","ticks","track","trackRange","transformed","maxTickElementThreshold","sliderCss","isRange","value","Array","isArray","Slider","constructor","hostRef","this","handleKeyDown","event","mirror","shouldMirror","activeProp","max","min","pageStep","step","key","isActivationKey","preventDefault","adjustment","directionFactor","isNaN","fixedDecimalAdjustment","Number","toFixed","decimalPlaces","setValue","clamp","guid","onThumbBlur","onThumbFocus","currentTarget","getAttribute","onThumbPointerDown","pointerDownDragStart","onTrackPointerDown","dragUpdate","disabled","dragProp","translate","clientX","pageX","minValueDragRange","maxValueDragRange","minMaxValueRange","newMinValue","newMaxValue","minValue","maxValue","pointerUpDragEnd","isPrimaryPointerButton","dragEnd","removeDragListeners","focusActiveHandle","lastDragPropValue","emitChange","storeTrackRef","node","trackEl","storeThumbRef","el","valueProp","minHandle","maxHandle","formatValue","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","localize","toString","fillPlacement","form","undefined","hasHistogram","histogram","histogramStops","labelHandles","labelFormatter","labelTicks","maxLabel","minLabel","mirrored","name","precise","required","snap","scale","tickValues","histogramWatcher","newHistogram","ticksWatcher","generateTickValues","valueHandler","setMinMaxFromValue","minMaxValueHandler","setValueFromMinMax","connectedCallback","connectInteractive","connectLocalized","connectLabel","connectForm","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","componentWillLoad","setUpLoadableComponent","getClosestStep","afterConnectDefaultValueSet","componentDidLoad","setComponentLoaded","componentDidRender","adjustHostObscuredHandleLabel","hyphenateCollidingRangeHandleLabels","hideObscuredBoundingTickLabels","updateHostInteraction","render","id","useMinValue","shouldUseMinValue","minInterval","getUnitInterval","maxInterval","valueIsRange","thumbTypes","buildThumbType","renderThumb","type","thumbPlacement","includes","minThumbTypes","minThumb","trackRangePlacementStyles","left","right","h","Host","onKeyDown","onTouchStart","handleTouchStart","InteractiveContainer","getLabelText","class","renderGraph","ref","onPointerDown","style","map","tickOffset","activeTicks","rangeStart","rangeEnd","renderTickLabel","HiddenFormInputSlot","component","isLabeled","isPrecise","isMinThumb","ariaLabel","ariaValuenow","displayedValue","internalLabelFormatter","thumbStyle","thumbLabelClasses","labels","thumbContent","reverse","lastDragProp","onBlur","onFocus","role","tabIndex","colorStops","data","highlightMax","highlightMin","isMinTickLabel","isMaxTickLabel","isAtEdge","shouldDisplayLabel","pointerDownHandler","x","position","prop","inRange","closerToMax","Math","abs","dragStart","isThumbActive","shadowRoot","querySelector","async","componentFocusable","focus","thumbTypeParts","push","join","onLabelClick","setFocus","getTickDensity","density","tickInterval","_a","current","window","addEventListener","valueX","getClosestHandle","emitInput","calciteSliderInput","emit","calciteSliderChange","removeEventListener","values","valueChanged","Object","keys","forEach","propName","newValue","oldValue","dragging","range","width","getBoundingClientRect","percent","clampedValue","snappedValue","floor","getDistanceX","getFontSizeForElement","element","getComputedStyle","getPropertyValue","match","num","label","labelStatic","labelTransformed","labelStaticBounds","labelStaticOffset","getHostOffset","transform","leftModifier","rightModifier","leftValueLabel","leftValueLabelStatic","leftValueLabelTransformed","leftValueLabelStaticHostOffset","rightValueLabel","rightValueLabelStatic","rightValueLabelTransformed","rightValueLabelStaticHostOffset","labelFontSize","labelTransformedOverlap","getRangeLabelOverlap","hyphenLabel","labelOffset","classList","add","leftValueLabelTranslate","sign","leftValueLabelTransformedHostOffset","rightValueLabelTranslate","rightValueLabelTransformedHostOffset","remove","minTickLabel","maxTickLabel","opacity","isMinTickLabelObscured","isMaxTickLabelObscured","leftBounds","rightBounds","hostBounds","buffer","leftLabel","rightLabel","leftLabelBounds","rightLabelBounds","leftLabelFontSize","rangeLabelOverlap","minLabelBounds","handleBounds","intersects","maxLabelBounds","customFormatter","formattedValue","delegatesFocus"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/slider/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/slider/slider.css?tag=calcite-slider&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/slider/slider.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    container: \"container\",\n    containerRange: \"container--range\",\n    graph: \"graph\",\n    handle: \"handle\",\n    handleExtension: \"handle-extension\",\n    handleLabel: \"handle__label\",\n    handleLabelMinValue: \"handle__label--minValue\",\n    handleLabelValue: \"handle__label--value\",\n    hyphen: \"hyphen\",\n    hyphenWrap: \"hyphen--wrap\",\n    static: \"static\",\n    thumb: \"thumb\",\n    thumbActive: \"thumb--active\",\n    thumbContainer: \"thumb-container\",\n    thumbMinValue: \"thumb--minValue\",\n    thumbPrecise: \"thumb--precise\",\n    thumbValue: \"thumb--value\",\n    tick: \"tick\",\n    tickActive: \"tick--active\",\n    tickLabel: \"tick__label\",\n    tickMax: \"tick__label--max\",\n    tickMin: \"tick__label--min\",\n    ticks: \"ticks\",\n    track: \"track\",\n    trackRange: \"track__range\",\n    transformed: \"transformed\",\n};\nexport const maxTickElementThreshold = 250;\n//# sourceMappingURL=resources.js.map\n","@charset \"UTF-8\";\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]){\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*){\n  pointer-events: none;\n}\n\n.scale--s {\n  --calcite-slider-handle-size: 0.625rem;\n  --calcite-slider-handle-extension-height: 0.4rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--3);\n}\n.scale--s .handle__label,\n.scale--s .tick__label{\n  line-height: .75rem;\n}\n\n.scale--m {\n  --calcite-slider-handle-size: 0.875rem;\n  --calcite-slider-handle-extension-height: 0.5rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--2);\n}\n.scale--m .handle__label,\n.scale--m .tick__label{\n  line-height: 1rem;\n}\n\n.scale--l {\n  --calcite-slider-handle-size: 1rem;\n  --calcite-slider-handle-extension-height: 0.65rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--1);\n}\n.scale--l .handle__label,\n.scale--l .tick__label{\n  line-height: 1rem;\n}\n\n.handle__label,\n.tick__label{\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-color-text-2);\n  font-size: var(--calcite-slider-container-font-size);\n}\n\n:host{\n  display: block;\n}\n\n.container{\n  position: relative;\n  display: block;\n  overflow-wrap: normal;\n  word-break: normal;\n  padding-inline: calc(var(--calcite-slider-handle-size) * 0.5);\n  padding-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-inline: 0;\n  --calcite-slider-full-handle-height: calc(\n    var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height)\n  );\n  touch-action: none;\n}\n\n:host([disabled]) .track__range,\n:host([disabled]) .tick--active {\n  background-color: var(--calcite-color-text-3);\n}\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n.scale--s .thumb:not(.thumb--precise) {\n  --calcite-slider-thumb-y-offset: -0.375rem;\n}\n\n.scale--m .thumb:not(.thumb--precise) {\n  --calcite-slider-thumb-y-offset: -0.5rem;\n}\n\n.scale--l .thumb:not(.thumb--precise) {\n  --calcite-slider-thumb-y-offset: -0.55rem;\n}\n\n:host([precise]:not([has-histogram])) .container .thumb--value {\n  --calcite-slider-thumb-y-offset: calc(var(--calcite-slider-full-handle-height) * -1);\n}\n\n.thumb-container{\n  position: relative;\n  max-inline-size: 100%;\n}\n\n.thumb {\n  --calcite-slider-thumb-x-offset: calc(var(--calcite-slider-handle-size) * 0.5);\n  position: absolute;\n  margin: 0px;\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  align-items: center;\n  border-style: none;\n  background-color: transparent;\n  padding: 0px;\n  font-family: inherit;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  transform: translate(var(--calcite-slider-thumb-x-offset), var(--calcite-slider-thumb-y-offset));\n}\n.thumb .handle__label.static, .thumb .handle__label.transformed{\n  position: absolute;\n  inset-block: 0px;\n  opacity: 0;\n}\n.thumb .handle__label.hyphen::after {\n  content: \"—\";\n  display: inline-block;\n  inline-size: 1em;\n}\n.thumb .handle__label.hyphen--wrap {\n  display: flex;\n}\n.thumb .handle{\n  box-sizing: border-box;\n  border-radius: 9999px;\n  background-color: var(--calcite-color-foreground-1);\n  outline-color: transparent;\n  block-size: var(--calcite-slider-handle-size);\n  inline-size: var(--calcite-slider-handle-size);\n  box-shadow: 0 0 0 2px var(--calcite-color-text-3) inset;\n  transition: border var(--calcite-internal-animation-timing-medium) ease, background-color var(--calcite-internal-animation-timing-medium) ease, box-shadow var(--calcite-animation-timing) ease;\n}\n.thumb .handle-extension{\n  inline-size: 0.125rem;\n  block-size: var(--calcite-slider-handle-extension-height);\n  background-color: var(--calcite-color-text-3);\n}\n.thumb:hover .handle {\n  box-shadow: 0 0 0 3px var(--calcite-color-brand) inset;\n}\n.thumb:hover .handle-extension{\n  background-color: var(--calcite-color-brand);\n}\n.thumb:focus .handle{\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.thumb:focus .handle-extension{\n  background-color: var(--calcite-color-brand);\n}\n.thumb.thumb--minValue {\n  transform: translate(calc(var(--calcite-slider-thumb-x-offset) * -1), var(--calcite-slider-thumb-y-offset));\n}\n.thumb.thumb--precise {\n  --calcite-slider-thumb-y-offset: -0.125rem;\n}\n\n:host([label-handles]) .thumb {\n  --calcite-slider-thumb-x-offset: 50%;\n}\n:host([label-handles]):host(:not([has-histogram])) .scale--s .thumb:not(.thumb--precise) {\n  --calcite-slider-thumb-y-offset: -1.4375rem;\n}\n:host([label-handles]):host(:not([has-histogram])) .scale--m .thumb:not(.thumb--precise) {\n  --calcite-slider-thumb-y-offset: -1.875rem;\n}\n:host([label-handles]):host(:not([has-histogram])) .scale--l .thumb:not(.thumb--precise) {\n  --calcite-slider-thumb-y-offset: -2rem;\n}\n\n:host([has-histogram][label-handles]) .handle__label,\n:host([label-handles]:not([has-histogram])) .thumb--minValue.thumb--precise .handle__label {\n  margin-block-start: 0.5em;\n}\n\n:host(:not([has-histogram]):not([precise])) .handle__label,\n:host([label-handles]:not([has-histogram])) .thumb--value .handle__label {\n  margin-block-end: 0.5em;\n}\n\n:host([label-handles][precise]):host(:not([has-histogram])) .scale--s .thumb--value {\n  --calcite-slider-thumb-y-offset: -2.075rem;\n}\n:host([label-handles][precise]):host(:not([has-histogram])) .scale--m .thumb--value {\n  --calcite-slider-thumb-y-offset: -2.75rem;\n}\n:host([label-handles][precise]):host(:not([has-histogram])) .scale--l .thumb--value {\n  --calcite-slider-thumb-y-offset: -3.0625rem;\n}\n\n.thumb:focus .handle,\n.thumb--active .handle{\n  background-color: var(--calcite-color-brand);\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.16);\n}\n\n.thumb:hover.thumb--precise::after,\n.thumb:focus.thumb--precise::after,\n.thumb--active.thumb--precise::after{\n  background-color: var(--calcite-color-brand);\n}\n\n.track{\n  position: relative;\n  block-size: 0.125rem;\n  border-radius: 0px;\n  background-color: var(--calcite-color-border-2);\n  transition: all var(--calcite-internal-animation-timing-medium) ease-in;\n}\n\n.track__range{\n  position: absolute;\n  inset-block-start: 0px;\n  block-size: 0.125rem;\n  background-color: var(--calcite-color-brand);\n}\n\n.container--range .track__range:hover {\n  cursor: ew-resize;\n}\n.container--range .track__range::after{\n  position: absolute;\n  inline-size: 100%;\n  content: \"\";\n  inset-block-start: calc(var(--calcite-slider-full-handle-height) * 0.5 * -1);\n  block-size: calc(var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height));\n}\n\n@media (forced-colors: active) {\n  .thumb {\n    outline-width: 0;\n    outline-offset: 0;\n  }\n  .handle{\n    outline: 2px solid transparent;\n    outline-offset: 2px;\n  }\n  .thumb:focus .handle,\n  .thumb .handle-extension,\n  .thumb:hover .handle-extension,\n  .thumb:focus .handle-extension,\n  .thumb:active .handle-extension {\n    background-color: canvasText;\n  }\n  .track {\n    background-color: canvasText;\n  }\n  .track__range {\n    background-color: highlight;\n  }\n}\n.tick{\n  position: absolute;\n  block-size: 0.25rem;\n  inline-size: 0.125rem;\n  border-width: 1px;\n  border-style: solid;\n  background-color: var(--calcite-color-border-input);\n  border-color: var(--calcite-color-foreground-1);\n  inset-block-start: -2px;\n  pointer-events: none;\n  margin-inline-start: calc(-1 * 0.125rem);\n}\n\n.tick--active{\n  background-color: var(--calcite-color-brand);\n}\n\n.tick__label{\n  pointer-events: none;\n  margin-block-start: 0.875rem;\n  display: flex;\n  justify-content: center;\n}\n\n.tick__label--min {\n  transition: opacity var(--calcite-animation-timing);\n}\n\n.tick__label--max {\n  transition: opacity var(--calcite-internal-animation-timing-fast);\n}\n\n:host([has-histogram][label-handles]) .tick__label--min,\n:host([has-histogram][label-handles]) .tick__label--max,\n:host([has-histogram][precise]) .tick__label--min,\n:host([has-histogram][precise]) .tick__label--max{\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-3);\n}\n\n.graph {\n  color: var(--calcite-color-foreground-3);\n  block-size: 48px;\n}\n\n:host([label-ticks][ticks]) .container {\n  padding-block-end: calc(0.875rem + var(--calcite-slider-container-font-size));\n}\n\n:host([has-histogram]):host([precise][label-handles]) .container {\n  padding-block-end: calc(var(--calcite-slider-full-handle-height) + 1em);\n}\n:host([has-histogram]):host([label-handles]:not([precise])) .container {\n  padding-block-end: calc(var(--calcite-slider-handle-size) * 0.5 + 1em);\n}\n:host([has-histogram]):host([precise]:not([label-handles])) .container {\n  padding-block-end: var(--calcite-slider-full-handle-height);\n}\n\n:host(:not([has-histogram])):host([precise]:not([label-handles])) .container {\n  padding-block-start: var(--calcite-slider-full-handle-height);\n}\n:host(:not([has-histogram])):host([precise]:not([label-handles])) .container--range {\n  padding-block-end: var(--calcite-slider-full-handle-height);\n}\n:host(:not([has-histogram])):host([label-handles]:not([precise])) .container {\n  padding-block-start: calc(var(--calcite-slider-full-handle-height) + 4px);\n}\n:host(:not([has-histogram])):host([label-handles][precise]) .container {\n  padding-block-start: calc(var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px);\n}\n:host(:not([has-histogram])):host([label-handles][precise]) .container--range {\n  padding-block-end: calc(var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px);\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]){\n  display: none;\n}\n\n[hidden]{\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { intersects, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { afterConnectDefaultValueSet, connectForm, disconnectForm, HiddenFormInputSlot, } from \"../../utils/form\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, numberStringFormatter, } from \"../../utils/locale\";\nimport { clamp, decimalPlaces } from \"../../utils/math\";\nimport { CSS, maxTickElementThreshold } from \"./resources\";\nfunction isRange(value) {\n    return Array.isArray(value);\n}\nexport class Slider {\n    constructor() {\n        //--------------------------------------------------------------------------\n        //\n        //  Event Listeners\n        //\n        //--------------------------------------------------------------------------\n        this.handleKeyDown = (event) => {\n            const mirror = this.shouldMirror();\n            const { activeProp, max, min, pageStep, step } = this;\n            const value = this[activeProp];\n            const { key } = event;\n            if (isActivationKey(key)) {\n                event.preventDefault();\n                return;\n            }\n            let adjustment;\n            if (key === \"ArrowUp\" || key === \"ArrowRight\") {\n                const directionFactor = mirror && key === \"ArrowRight\" ? -1 : 1;\n                adjustment = value + step * directionFactor;\n            }\n            else if (key === \"ArrowDown\" || key === \"ArrowLeft\") {\n                const directionFactor = mirror && key === \"ArrowLeft\" ? -1 : 1;\n                adjustment = value - step * directionFactor;\n            }\n            else if (key === \"PageUp\") {\n                if (pageStep) {\n                    adjustment = value + pageStep;\n                }\n            }\n            else if (key === \"PageDown\") {\n                if (pageStep) {\n                    adjustment = value - pageStep;\n                }\n            }\n            else if (key === \"Home\") {\n                adjustment = min;\n            }\n            else if (key === \"End\") {\n                adjustment = max;\n            }\n            if (isNaN(adjustment)) {\n                return;\n            }\n            event.preventDefault();\n            const fixedDecimalAdjustment = Number(adjustment.toFixed(decimalPlaces(step)));\n            this.setValue({\n                [activeProp]: this.clamp(fixedDecimalAdjustment, activeProp),\n            });\n        };\n        this.activeProp = \"value\";\n        this.guid = `calcite-slider-${guid()}`;\n        this.onThumbBlur = () => {\n            this.activeProp = null;\n        };\n        this.onThumbFocus = (event) => {\n            const thumb = event.currentTarget;\n            this.activeProp = thumb.getAttribute(\"data-value-prop\");\n        };\n        this.onThumbPointerDown = (event) => {\n            const thumb = event.currentTarget;\n            this.pointerDownDragStart(event, thumb.getAttribute(\"data-value-prop\"));\n        };\n        this.onTrackPointerDown = (event) => {\n            this.pointerDownDragStart(event, \"minMaxValue\");\n        };\n        this.dragUpdate = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            event.preventDefault();\n            if (this.dragProp) {\n                const value = this.translate(event.clientX || event.pageX);\n                if (isRange(this.value) && this.dragProp === \"minMaxValue\") {\n                    if (this.minValueDragRange && this.maxValueDragRange && this.minMaxValueRange) {\n                        const newMinValue = value - this.minValueDragRange;\n                        const newMaxValue = value + this.maxValueDragRange;\n                        if (newMaxValue <= this.max &&\n                            newMinValue >= this.min &&\n                            newMaxValue - newMinValue === this.minMaxValueRange) {\n                            this.setValue({\n                                minValue: this.clamp(newMinValue, \"minValue\"),\n                                maxValue: this.clamp(newMaxValue, \"maxValue\"),\n                            });\n                        }\n                    }\n                    else {\n                        this.minValueDragRange = value - this.minValue;\n                        this.maxValueDragRange = this.maxValue - value;\n                        this.minMaxValueRange = this.maxValue - this.minValue;\n                    }\n                }\n                else {\n                    this.setValue({ [this.dragProp]: this.clamp(value, this.dragProp) });\n                }\n            }\n        };\n        this.pointerUpDragEnd = (event) => {\n            if (this.disabled || !isPrimaryPointerButton(event)) {\n                return;\n            }\n            this.dragEnd(event);\n        };\n        this.dragEnd = (event) => {\n            if (this.disabled) {\n                return;\n            }\n            this.removeDragListeners();\n            this.focusActiveHandle(event.clientX);\n            if (this.lastDragPropValue != this[this.dragProp]) {\n                this.emitChange();\n            }\n            this.dragProp = null;\n            this.lastDragPropValue = null;\n            this.minValueDragRange = null;\n            this.maxValueDragRange = null;\n            this.minMaxValueRange = null;\n        };\n        this.storeTrackRef = (node) => {\n            this.trackEl = node;\n        };\n        this.storeThumbRef = (el) => {\n            if (!el) {\n                return;\n            }\n            const valueProp = el.getAttribute(\"data-value-prop\");\n            valueProp === \"minValue\" ? (this.minHandle = el) : (this.maxHandle = el);\n        };\n        /**\n         * Returns a string representing the localized label value based if the groupSeparator prop is parsed.\n         *\n         * @param value\n         */\n        this.formatValue = (value) => {\n            numberStringFormatter.numberFormatOptions = {\n                locale: this.effectiveLocale,\n                numberingSystem: this.numberingSystem,\n                useGrouping: this.groupSeparator,\n            };\n            return numberStringFormatter.localize(value.toString());\n        };\n        this.disabled = false;\n        this.fillPlacement = \"start\";\n        this.form = undefined;\n        this.groupSeparator = false;\n        this.hasHistogram = false;\n        this.histogram = undefined;\n        this.histogramStops = undefined;\n        this.labelHandles = false;\n        this.labelFormatter = undefined;\n        this.labelTicks = false;\n        this.max = 100;\n        this.maxLabel = undefined;\n        this.maxValue = undefined;\n        this.min = 0;\n        this.minLabel = undefined;\n        this.minValue = undefined;\n        this.mirrored = false;\n        this.name = undefined;\n        this.numberingSystem = undefined;\n        this.pageStep = undefined;\n        this.precise = false;\n        this.required = false;\n        this.snap = false;\n        this.step = 1;\n        this.ticks = undefined;\n        this.value = 0;\n        this.scale = \"m\";\n        this.effectiveLocale = \"\";\n        this.minMaxValueRange = null;\n        this.minValueDragRange = null;\n        this.maxValueDragRange = null;\n        this.tickValues = [];\n    }\n    histogramWatcher(newHistogram) {\n        this.hasHistogram = !!newHistogram;\n    }\n    ticksWatcher() {\n        this.tickValues = this.generateTickValues();\n    }\n    valueHandler() {\n        this.setMinMaxFromValue();\n    }\n    minMaxValueHandler() {\n        this.setValueFromMinMax();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLocalized(this);\n        this.setMinMaxFromValue();\n        this.setValueFromMinMax();\n        connectLabel(this);\n        connectForm(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        disconnectLocalized(this);\n        this.removeDragListeners();\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n        if (!isRange(this.value)) {\n            this.value = this.snap ? this.getClosestStep(this.value) : this.clamp(this.value);\n        }\n        this.ticksWatcher();\n        this.histogramWatcher(this.histogram);\n        afterConnectDefaultValueSet(this, this.value);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    componentDidRender() {\n        if (this.labelHandles) {\n            this.adjustHostObscuredHandleLabel(\"value\");\n            if (isRange(this.value)) {\n                this.adjustHostObscuredHandleLabel(\"minValue\");\n                if (!(this.precise && !this.hasHistogram)) {\n                    this.hyphenateCollidingRangeHandleLabels();\n                }\n            }\n        }\n        this.hideObscuredBoundingTickLabels();\n        updateHostInteraction(this);\n    }\n    render() {\n        const id = this.el.id || this.guid;\n        const value = isRange(this.value) ? this.maxValue : this.value;\n        const min = this.minValue || this.min;\n        const useMinValue = this.shouldUseMinValue();\n        const minInterval = this.getUnitInterval(useMinValue ? this.minValue : min) * 100;\n        const maxInterval = this.getUnitInterval(value) * 100;\n        const mirror = this.shouldMirror();\n        const valueIsRange = isRange(this.value);\n        const thumbTypes = this.buildThumbType(\"max\");\n        const thumb = this.renderThumb({\n            type: thumbTypes,\n            thumbPlacement: thumbTypes.includes(\"histogram\") ? \"below\" : \"above\",\n            maxInterval,\n            minInterval,\n            mirror,\n        });\n        const minThumbTypes = this.buildThumbType(\"min\");\n        const minThumb = valueIsRange &&\n            this.renderThumb({\n                type: minThumbTypes,\n                thumbPlacement: minThumbTypes.includes(\"histogram\") || minThumbTypes.includes(\"precise\")\n                    ? \"below\"\n                    : \"above\",\n                maxInterval,\n                minInterval,\n                mirror,\n            });\n        const fillPlacement = valueIsRange ? \"start\" : this.fillPlacement;\n        const trackRangePlacementStyles = fillPlacement === \"none\"\n            ? {\n                left: `unset`,\n                right: `unset`,\n            }\n            : fillPlacement === \"end\"\n                ? {\n                    left: `${mirror ? minInterval : maxInterval}%`,\n                    right: `${mirror ? maxInterval : minInterval}%`,\n                }\n                : /* default */\n                    {\n                        left: `${mirror ? 100 - maxInterval : minInterval}%`,\n                        right: `${mirror ? minInterval : 100 - maxInterval}%`,\n                    };\n        return (h(Host, { key: '345553b84f2336fe5a98bb2b3050d137130c41ef', id: id, onKeyDown: this.handleKeyDown, onTouchStart: this.handleTouchStart }, h(InteractiveContainer, { key: '0d9db31db94152095071d9ff40dbf3cf8ba685d6', disabled: this.disabled }, h(\"div\", { key: '767ab1401000b02717013231c935fe1747def1b3', \"aria-label\": getLabelText(this), class: {\n                [CSS.container]: true,\n                [CSS.containerRange]: valueIsRange,\n                [`scale--${this.scale}`]: true,\n            } }, this.renderGraph(), h(\"div\", { key: '1a104ad97079f71d37efea9d933f364520d49397', class: CSS.track, ref: this.storeTrackRef }, h(\"div\", { key: '84f8033505dc0f373a0d19a641886e49ca4fe732', class: CSS.trackRange, onPointerDown: this.onTrackPointerDown, style: trackRangePlacementStyles }), h(\"div\", { key: '79f89b93a6acbb05ffce09bd2aa34ef134b3e219', class: CSS.ticks }, this.tickValues.map((tick) => {\n            const tickOffset = `${this.getUnitInterval(tick) * 100}%`;\n            let activeTicks = false;\n            if (fillPlacement === \"start\" || fillPlacement === \"end\") {\n                if (useMinValue) {\n                    activeTicks = tick >= this.minValue && tick <= this.maxValue;\n                }\n                else {\n                    const rangeStart = fillPlacement === \"start\" ? min : value;\n                    const rangeEnd = fillPlacement === \"start\" ? value : this.max;\n                    activeTicks = tick >= rangeStart && tick <= rangeEnd;\n                }\n            }\n            return (h(\"span\", { class: {\n                    [CSS.tick]: true,\n                    [CSS.tickActive]: activeTicks,\n                }, style: {\n                    left: mirror ? \"\" : tickOffset,\n                    right: mirror ? tickOffset : \"\",\n                } }, this.renderTickLabel(tick)));\n        }))), h(\"div\", { key: '9bc6ea406e2036adb87da4a6053533283434864d', class: CSS.thumbContainer }, minThumb, thumb, h(HiddenFormInputSlot, { key: 'c13236898b527a1ffc058914fe87e6004b93aaf5', component: this }))))));\n    }\n    renderThumb({ type, mirror, thumbPlacement, minInterval, maxInterval, }) {\n        const isLabeled = type.includes(\"labeled\");\n        const isPrecise = type.includes(\"precise\");\n        const isMinThumb = type.includes(\"min\");\n        const valueIsRange = isRange(this.value);\n        const value = isMinThumb\n            ? this.minValue\n            : valueIsRange\n                ? this.maxValue\n                : this.value;\n        const valueProp = isMinThumb ? \"minValue\" : valueIsRange ? \"maxValue\" : \"value\";\n        const ariaLabel = isMinThumb ? this.minLabel : valueIsRange ? this.maxLabel : this.minLabel;\n        const ariaValuenow = isMinThumb ? this.minValue : value;\n        const displayedValue = valueProp === \"minValue\"\n            ? this.internalLabelFormatter(this.minValue, \"min\")\n            : valueProp === \"maxValue\"\n                ? this.internalLabelFormatter(this.maxValue, \"max\")\n                : this.internalLabelFormatter(value, \"value\");\n        const thumbStyle = isMinThumb\n            ? { left: `${mirror ? 100 - minInterval : minInterval}%` }\n            : { right: `${mirror ? maxInterval : 100 - maxInterval}%` };\n        const thumbLabelClasses = `${CSS.handleLabel} ${isMinThumb ? CSS.handleLabelMinValue : CSS.handleLabelValue}`;\n        const labels = isLabeled\n            ? [\n                h(\"span\", { \"aria-hidden\": \"true\", class: thumbLabelClasses }, displayedValue),\n                h(\"span\", { \"aria-hidden\": \"true\", class: `${thumbLabelClasses} ${CSS.static}` }, displayedValue),\n                h(\"span\", { \"aria-hidden\": \"true\", class: `${thumbLabelClasses} ${CSS.transformed}` }, displayedValue),\n            ]\n            : [];\n        const thumbContent = [\n            ...labels,\n            h(\"div\", { class: CSS.handle }),\n            isPrecise && h(\"div\", { class: CSS.handleExtension }),\n        ];\n        if (thumbPlacement === \"below\") {\n            thumbContent.reverse();\n        }\n        return (h(\"div\", { \"aria-disabled\": this.disabled, \"aria-label\": ariaLabel, \"aria-orientation\": \"horizontal\", \"aria-valuemax\": this.max, \"aria-valuemin\": this.min, \"aria-valuenow\": ariaValuenow, class: {\n                [CSS.thumb]: true,\n                [CSS.thumbValue]: !isMinThumb,\n                [CSS.thumbActive]: this.lastDragProp !== \"minMaxValue\" && this.dragProp === valueProp,\n                [CSS.thumbPrecise]: isPrecise,\n                [CSS.thumbMinValue]: isMinThumb,\n            }, \"data-value-prop\": valueProp, key: type, onBlur: this.onThumbBlur, onFocus: this.onThumbFocus, onPointerDown: this.onThumbPointerDown, ref: this.storeThumbRef, role: \"slider\", style: thumbStyle, tabIndex: 0 }, thumbContent));\n    }\n    renderGraph() {\n        return this.histogram ? (h(\"calcite-graph\", { class: CSS.graph, colorStops: this.histogramStops, data: this.histogram, highlightMax: isRange(this.value) ? this.maxValue : this.value, highlightMin: isRange(this.value) ? this.minValue : this.min, max: this.max, min: this.min })) : null;\n    }\n    renderTickLabel(tick) {\n        const { hasHistogram, labelHandles, labelTicks, max, min, precise, value } = this;\n        const valueIsRange = isRange(value);\n        const isMinTickLabel = tick === min;\n        const isMaxTickLabel = tick === max;\n        const isAtEdge = isMinTickLabel || isMaxTickLabel;\n        const shouldDisplayLabel = labelTicks &&\n            ((!hasHistogram && (isAtEdge || !precise || !valueIsRange)) ||\n                (hasHistogram && (isAtEdge || (!precise && !labelHandles))));\n        return shouldDisplayLabel ? (h(\"span\", { class: {\n                [CSS.tickLabel]: true,\n                [CSS.tickMin]: isMinTickLabel,\n                [CSS.tickMax]: isMaxTickLabel,\n            } }, this.internalLabelFormatter(tick, \"tick\"))) : null;\n    }\n    pointerDownHandler(event) {\n        if (this.disabled || !isPrimaryPointerButton(event)) {\n            return;\n        }\n        const x = event.clientX || event.pageX;\n        const position = this.translate(x);\n        let prop = \"value\";\n        if (isRange(this.value)) {\n            const inRange = position >= this.minValue && position <= this.maxValue;\n            if (inRange && this.lastDragProp === \"minMaxValue\") {\n                prop = \"minMaxValue\";\n            }\n            else {\n                const closerToMax = Math.abs(this.maxValue - position) < Math.abs(this.minValue - position);\n                prop = closerToMax || position >= this.maxValue ? \"maxValue\" : \"minValue\";\n            }\n        }\n        this.lastDragPropValue = this[prop];\n        this.dragStart(prop);\n        const isThumbActive = this.el.shadowRoot.querySelector(`.${CSS.thumb}:active`);\n        if (!isThumbActive) {\n            this.setValue({ [prop]: this.clamp(position, prop) });\n        }\n        this.focusActiveHandle(x);\n    }\n    handleTouchStart(event) {\n        // needed to prevent extra click at the end of a handle drag\n        event.preventDefault();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        const handle = this.minHandle ? this.minHandle : this.maxHandle;\n        handle?.focus();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    buildThumbType(type) {\n        const thumbTypeParts = [type];\n        if (this.labelHandles) {\n            thumbTypeParts.push(\"labeled\");\n        }\n        if (this.precise) {\n            thumbTypeParts.push(\"precise\");\n        }\n        if (this.hasHistogram) {\n            thumbTypeParts.push(\"histogram\");\n        }\n        return thumbTypeParts.join(\"-\");\n    }\n    setValueFromMinMax() {\n        const { minValue, maxValue } = this;\n        if (typeof minValue === \"number\" && typeof maxValue === \"number\") {\n            this.value = [minValue, maxValue];\n        }\n    }\n    setMinMaxFromValue() {\n        const { value } = this;\n        if (isRange(value)) {\n            this.minValue = value[0];\n            this.maxValue = value[1];\n        }\n    }\n    onLabelClick() {\n        this.setFocus();\n    }\n    shouldMirror() {\n        return this.mirrored && !this.hasHistogram;\n    }\n    shouldUseMinValue() {\n        if (!isRange(this.value)) {\n            return false;\n        }\n        return ((this.hasHistogram && this.maxValue === 0) || (!this.hasHistogram && this.minValue === 0));\n    }\n    getTickDensity() {\n        const density = (this.max - this.min) / this.ticks / maxTickElementThreshold;\n        return density < 1 ? 1 : density;\n    }\n    generateTickValues() {\n        const tickInterval = this.ticks ?? 0;\n        if (tickInterval <= 0) {\n            return [];\n        }\n        const ticks = [this.min];\n        const density = this.getTickDensity();\n        const tickOffset = tickInterval * density;\n        let current = this.min;\n        while (current < this.max) {\n            current += tickOffset;\n            ticks.push(Math.min(current, this.max));\n        }\n        if (!ticks.includes(this.max)) {\n            ticks.push(this.max);\n        }\n        return ticks;\n    }\n    pointerDownDragStart(event, prop) {\n        if (!isPrimaryPointerButton(event)) {\n            return;\n        }\n        this.dragStart(prop);\n    }\n    dragStart(prop) {\n        this.dragProp = prop;\n        this.lastDragProp = this.dragProp;\n        this.activeProp = prop;\n        window.addEventListener(\"pointermove\", this.dragUpdate);\n        window.addEventListener(\"pointerup\", this.pointerUpDragEnd);\n        window.addEventListener(\"pointercancel\", this.dragEnd);\n    }\n    focusActiveHandle(valueX) {\n        if (this.dragProp === \"minValue\") {\n            this.minHandle.focus();\n        }\n        else if (this.dragProp === \"maxValue\" || this.dragProp === \"value\") {\n            this.maxHandle.focus();\n        }\n        else if (this.dragProp === \"minMaxValue\") {\n            this.getClosestHandle(valueX).focus();\n        }\n    }\n    emitInput() {\n        this.calciteSliderInput.emit();\n    }\n    emitChange() {\n        this.calciteSliderChange.emit();\n    }\n    removeDragListeners() {\n        window.removeEventListener(\"pointermove\", this.dragUpdate);\n        window.removeEventListener(\"pointerup\", this.pointerUpDragEnd);\n        window.removeEventListener(\"pointercancel\", this.dragEnd);\n    }\n    /**\n     * Set prop value(s) if changed at the component level\n     *\n     * @param {object} values - a set of key/value pairs delineating what properties in the component to update\n     */\n    setValue(values) {\n        let valueChanged;\n        Object.keys(values).forEach((propName) => {\n            const newValue = values[propName];\n            if (!valueChanged) {\n                const oldValue = this[propName];\n                valueChanged = oldValue !== newValue;\n            }\n            this[propName] = newValue;\n        });\n        if (!valueChanged) {\n            return;\n        }\n        const dragging = this.dragProp;\n        if (!dragging) {\n            this.emitChange();\n        }\n        this.emitInput();\n    }\n    /**\n     * If number is outside range, constrain to min or max\n     *\n     * @param value\n     * @param prop\n     * @internal\n     */\n    clamp(value, prop) {\n        value = clamp(value, this.min, this.max);\n        // ensure that maxValue and minValue don't swap positions\n        if (prop === \"maxValue\") {\n            value = Math.max(value, this.minValue);\n        }\n        if (prop === \"minValue\") {\n            value = Math.min(value, this.maxValue);\n        }\n        return value;\n    }\n    /**\n     * Translate a pixel position to value along the range\n     *\n     * @param x\n     * @internal\n     */\n    translate(x) {\n        const range = this.max - this.min;\n        const { left, width } = this.trackEl.getBoundingClientRect();\n        const percent = (x - left) / width;\n        const mirror = this.shouldMirror();\n        const clampedValue = this.clamp(this.min + range * (mirror ? 1 - percent : percent));\n        const value = Number(clampedValue.toFixed(decimalPlaces(this.step)));\n        return !(this.snap && this.step) ? value : this.getClosestStep(value);\n    }\n    /**\n     * Get closest allowed value along stepped values\n     *\n     * @param value\n     * @internal\n     */\n    getClosestStep(value) {\n        const { max, min, step } = this;\n        let snappedValue = Math.floor((value - min) / step) * step + min;\n        snappedValue = Math.min(Math.max(snappedValue, min), max);\n        if (snappedValue > max) {\n            snappedValue -= step;\n        }\n        return snappedValue;\n    }\n    getClosestHandle(valueX) {\n        return this.getDistanceX(this.maxHandle, valueX) > this.getDistanceX(this.minHandle, valueX)\n            ? this.minHandle\n            : this.maxHandle;\n    }\n    getDistanceX(el, valueX) {\n        return Math.abs(el.getBoundingClientRect().left - valueX);\n    }\n    getFontSizeForElement(element) {\n        return Number(window.getComputedStyle(element).getPropertyValue(\"font-size\").match(/\\d+/)[0]);\n    }\n    /**\n     * Get position of value along range as fractional value\n     *\n     * @param num\n     * @return {number} number in the unit interval [0,1]\n     * @internal\n     */\n    getUnitInterval(num) {\n        num = this.clamp(num);\n        const range = this.max - this.min;\n        return (num - this.min) / range;\n    }\n    adjustHostObscuredHandleLabel(name) {\n        const label = this.el.shadowRoot.querySelector(`.handle__label--${name}`);\n        const labelStatic = this.el.shadowRoot.querySelector(`.handle__label--${name}.static`);\n        const labelTransformed = this.el.shadowRoot.querySelector(`.handle__label--${name}.transformed`);\n        const labelStaticBounds = labelStatic.getBoundingClientRect();\n        const labelStaticOffset = this.getHostOffset(labelStaticBounds.left, labelStaticBounds.right);\n        label.style.transform = `translateX(${labelStaticOffset}px)`;\n        labelTransformed.style.transform = `translateX(${labelStaticOffset}px)`;\n    }\n    hyphenateCollidingRangeHandleLabels() {\n        const { shadowRoot } = this.el;\n        const mirror = this.shouldMirror();\n        const leftModifier = mirror ? \"value\" : \"minValue\";\n        const rightModifier = mirror ? \"minValue\" : \"value\";\n        const leftValueLabel = shadowRoot.querySelector(`.handle__label--${leftModifier}`);\n        const leftValueLabelStatic = shadowRoot.querySelector(`.handle__label--${leftModifier}.static`);\n        const leftValueLabelTransformed = shadowRoot.querySelector(`.handle__label--${leftModifier}.transformed`);\n        const leftValueLabelStaticHostOffset = this.getHostOffset(leftValueLabelStatic.getBoundingClientRect().left, leftValueLabelStatic.getBoundingClientRect().right);\n        const rightValueLabel = shadowRoot.querySelector(`.handle__label--${rightModifier}`);\n        const rightValueLabelStatic = shadowRoot.querySelector(`.handle__label--${rightModifier}.static`);\n        const rightValueLabelTransformed = shadowRoot.querySelector(`.handle__label--${rightModifier}.transformed`);\n        const rightValueLabelStaticHostOffset = this.getHostOffset(rightValueLabelStatic.getBoundingClientRect().left, rightValueLabelStatic.getBoundingClientRect().right);\n        const labelFontSize = this.getFontSizeForElement(leftValueLabel);\n        const labelTransformedOverlap = this.getRangeLabelOverlap(leftValueLabelTransformed, rightValueLabelTransformed);\n        const hyphenLabel = leftValueLabel;\n        const labelOffset = labelFontSize / 2;\n        if (labelTransformedOverlap > 0) {\n            hyphenLabel.classList.add(CSS.hyphen, CSS.hyphenWrap);\n            if (rightValueLabelStaticHostOffset === 0 && leftValueLabelStaticHostOffset === 0) {\n                // Neither handle overlaps the host boundary\n                let leftValueLabelTranslate = labelTransformedOverlap / 2 - labelOffset;\n                leftValueLabelTranslate =\n                    Math.sign(leftValueLabelTranslate) === -1\n                        ? Math.abs(leftValueLabelTranslate)\n                        : -leftValueLabelTranslate;\n                const leftValueLabelTransformedHostOffset = this.getHostOffset(leftValueLabelTransformed.getBoundingClientRect().left +\n                    leftValueLabelTranslate -\n                    labelOffset, leftValueLabelTransformed.getBoundingClientRect().right +\n                    leftValueLabelTranslate -\n                    labelOffset);\n                let rightValueLabelTranslate = labelTransformedOverlap / 2;\n                const rightValueLabelTransformedHostOffset = this.getHostOffset(rightValueLabelTransformed.getBoundingClientRect().left + rightValueLabelTranslate, rightValueLabelTransformed.getBoundingClientRect().right + rightValueLabelTranslate);\n                if (leftValueLabelTransformedHostOffset !== 0) {\n                    leftValueLabelTranslate += leftValueLabelTransformedHostOffset;\n                    rightValueLabelTranslate += leftValueLabelTransformedHostOffset;\n                }\n                if (rightValueLabelTransformedHostOffset !== 0) {\n                    leftValueLabelTranslate += rightValueLabelTransformedHostOffset;\n                    rightValueLabelTranslate += rightValueLabelTransformedHostOffset;\n                }\n                leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n                leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelTranslate - labelOffset}px)`;\n                rightValueLabel.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n                rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n            }\n            else if (leftValueLabelStaticHostOffset > 0 || rightValueLabelStaticHostOffset > 0) {\n                // labels overlap host boundary on the left side\n                leftValueLabel.style.transform = `translateX(${leftValueLabelStaticHostOffset + labelOffset}px)`;\n                rightValueLabel.style.transform = `translateX(${labelTransformedOverlap + rightValueLabelStaticHostOffset}px)`;\n                rightValueLabelTransformed.style.transform = `translateX(${labelTransformedOverlap + rightValueLabelStaticHostOffset}px)`;\n            }\n            else if (leftValueLabelStaticHostOffset < 0 || rightValueLabelStaticHostOffset < 0) {\n                // labels overlap host boundary on the right side\n                let leftValueLabelTranslate = Math.abs(leftValueLabelStaticHostOffset) + labelTransformedOverlap - labelOffset;\n                leftValueLabelTranslate =\n                    Math.sign(leftValueLabelTranslate) === -1\n                        ? Math.abs(leftValueLabelTranslate)\n                        : -leftValueLabelTranslate;\n                leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n                leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelTranslate - labelOffset}px)`;\n            }\n        }\n        else {\n            hyphenLabel.classList.remove(CSS.hyphen, CSS.hyphenWrap);\n            leftValueLabel.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n            leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n            rightValueLabel.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n            rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n        }\n    }\n    /**\n     * Hides bounding tick labels that are obscured by either handle.\n     */\n    hideObscuredBoundingTickLabels() {\n        const valueIsRange = isRange(this.value);\n        if (!this.hasHistogram && !valueIsRange && !this.labelHandles && !this.precise) {\n            return;\n        }\n        if (!this.hasHistogram && !valueIsRange && this.labelHandles && !this.precise) {\n            return;\n        }\n        if (!this.hasHistogram && !valueIsRange && !this.labelHandles && this.precise) {\n            return;\n        }\n        if (!this.hasHistogram && !valueIsRange && this.labelHandles && this.precise) {\n            return;\n        }\n        if (!this.hasHistogram && valueIsRange && !this.precise) {\n            return;\n        }\n        if (this.hasHistogram && !this.precise && !this.labelHandles) {\n            return;\n        }\n        const minHandle = this.el.shadowRoot.querySelector(`.${CSS.thumbMinValue}`);\n        const maxHandle = this.el.shadowRoot.querySelector(`.${CSS.thumbValue}`);\n        const minTickLabel = this.el.shadowRoot.querySelector(`.${CSS.tickMin}`);\n        const maxTickLabel = this.el.shadowRoot.querySelector(`.${CSS.tickMax}`);\n        if (!minHandle && maxHandle && minTickLabel && maxTickLabel) {\n            minTickLabel.style.opacity = this.isMinTickLabelObscured(minTickLabel, maxHandle) ? \"0\" : \"1\";\n            maxTickLabel.style.opacity = this.isMaxTickLabelObscured(maxTickLabel, maxHandle) ? \"0\" : \"1\";\n        }\n        if (minHandle && maxHandle && minTickLabel && maxTickLabel) {\n            minTickLabel.style.opacity =\n                this.isMinTickLabelObscured(minTickLabel, minHandle) ||\n                    this.isMinTickLabelObscured(minTickLabel, maxHandle)\n                    ? \"0\"\n                    : \"1\";\n            maxTickLabel.style.opacity =\n                this.isMaxTickLabelObscured(maxTickLabel, minHandle) ||\n                    (this.isMaxTickLabelObscured(maxTickLabel, maxHandle) && this.hasHistogram)\n                    ? \"0\"\n                    : \"1\";\n        }\n    }\n    /**\n     * Returns an integer representing the number of pixels to offset on the left or right side based on desired position behavior.\n     *\n     * @param leftBounds\n     * @param rightBounds\n     * @internal\n     */\n    getHostOffset(leftBounds, rightBounds) {\n        const hostBounds = this.el.getBoundingClientRect();\n        const buffer = 7;\n        if (leftBounds + buffer < hostBounds.left) {\n            return hostBounds.left - leftBounds - buffer;\n        }\n        if (rightBounds - buffer > hostBounds.right) {\n            return -(rightBounds - hostBounds.right) + buffer;\n        }\n        return 0;\n    }\n    /**\n     * Returns an integer representing the number of pixels that the two given span elements are overlapping, taking into account\n     * a space in between the two spans equal to the font-size set on them to account for the space needed to render a hyphen.\n     *\n     * @param leftLabel\n     * @param rightLabel\n     */\n    getRangeLabelOverlap(leftLabel, rightLabel) {\n        const leftLabelBounds = leftLabel.getBoundingClientRect();\n        const rightLabelBounds = rightLabel.getBoundingClientRect();\n        const leftLabelFontSize = this.getFontSizeForElement(leftLabel);\n        const rangeLabelOverlap = leftLabelBounds.right + leftLabelFontSize - rightLabelBounds.left;\n        return Math.max(rangeLabelOverlap, 0);\n    }\n    /**\n     * Returns a boolean value representing if the minLabel span element is obscured (being overlapped) by the given handle div element.\n     *\n     * @param minLabel\n     * @param handle\n     */\n    isMinTickLabelObscured(minLabel, handle) {\n        const minLabelBounds = minLabel.getBoundingClientRect();\n        const handleBounds = handle.getBoundingClientRect();\n        return intersects(minLabelBounds, handleBounds);\n    }\n    /**\n     * Returns a boolean value representing if the maxLabel span element is obscured (being overlapped) by the given handle div element.\n     *\n     * @param maxLabel\n     * @param handle\n     */\n    isMaxTickLabelObscured(maxLabel, handle) {\n        const maxLabelBounds = maxLabel.getBoundingClientRect();\n        const handleBounds = handle.getBoundingClientRect();\n        return intersects(maxLabelBounds, handleBounds);\n    }\n    internalLabelFormatter(value, type) {\n        const customFormatter = this.labelFormatter;\n        if (!customFormatter) {\n            return this.formatValue(value);\n        }\n        const formattedValue = customFormatter(value, type, this.formatValue);\n        if (formattedValue == null) {\n            return this.formatValue(value);\n        }\n        return formattedValue;\n    }\n    static get is() { return \"calcite-slider\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get delegatesFocus() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"slider.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"slider.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"fillPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"\\\"start\\\" | \\\"none\\\" | \\\"end\\\"\",\n                    \"resolved\": \"\\\"end\\\" | \\\"none\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Used to configure where the fill is placed along the slider track in relation to the value handle.\\n\\nRange mode will always display the fill between the min and max handles.\"\n                },\n                \"attribute\": \"fill-placement\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"start\\\"\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"groupSeparator\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, number values are displayed with a group separator corresponding to the language and country format.\"\n                },\n                \"attribute\": \"group-separator\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"hasHistogram\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, indicates a histogram is present.\"\n                },\n                \"attribute\": \"has-histogram\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"histogram\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"DataSeries\",\n                    \"resolved\": \"Point[]\",\n                    \"references\": {\n                        \"DataSeries\": {\n                            \"location\": \"import\",\n                            \"path\": \"../graph/interfaces\",\n                            \"id\": \"src/components/graph/interfaces.ts::DataSeries\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"see\",\n                            \"text\": \"[DataSeries](https://github.com/Esri/calcite-design-system/blob/dev/src/components/graph/interfaces.ts#L5)\"\n                        }],\n                    \"text\": \"A list of the histogram's x,y coordinates within the component's `min` and `max`. Displays above the component's track.\"\n                }\n            },\n            \"histogramStops\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"ColorStop[]\",\n                    \"resolved\": \"ColorStop[]\",\n                    \"references\": {\n                        \"ColorStop\": {\n                            \"location\": \"import\",\n                            \"path\": \"../graph/interfaces\",\n                            \"id\": \"src/components/graph/interfaces.ts::ColorStop\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A set of single color stops for a histogram, sorted by offset ascending.\"\n                }\n            },\n            \"labelHandles\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays label handles with their numeric value.\"\n                },\n                \"attribute\": \"label-handles\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"labelFormatter\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(\\n    value: number,\\n    type: \\\"value\\\" | \\\"min\\\" | \\\"max\\\" | \\\"tick\\\",\\n    defaultFormatter: (value: number) => string,\\n  ) => string | undefined\",\n                    \"resolved\": \"(value: number, type: \\\"value\\\" | \\\"max\\\" | \\\"min\\\" | \\\"tick\\\", defaultFormatter: (value: number) => string) => string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When specified, allows users to customize handle labels.\"\n                }\n            },\n            \"labelTicks\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true` and `ticks` is specified, displays label tick marks with their numeric value.\"\n                },\n                \"attribute\": \"label-ticks\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"max\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's maximum selectable value.\"\n                },\n                \"attribute\": \"max\",\n                \"reflect\": true,\n                \"defaultValue\": \"100\"\n            },\n            \"maxLabel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"For multiple selections, the accessible name for the second handle, such as `\\\"Temperature, upper bound\\\"`.\"\n                },\n                \"attribute\": \"max-label\",\n                \"reflect\": false\n            },\n            \"maxValue\": {\n                \"type\": \"number\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"For multiple selections, the component's upper value.\"\n                },\n                \"attribute\": \"max-value\",\n                \"reflect\": false\n            },\n            \"min\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's minimum selectable value.\"\n                },\n                \"attribute\": \"min\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            },\n            \"minLabel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for first (or only) handle, such as `\\\"Temperature, lower bound\\\"`.\"\n                },\n                \"attribute\": \"min-label\",\n                \"reflect\": false\n            },\n            \"minValue\": {\n                \"type\": \"number\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"For multiple selections, the component's lower value.\"\n                },\n                \"attribute\": \"min-value\",\n                \"reflect\": false\n            },\n            \"mirrored\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the slider will display values from high to low.\\n\\nNote that this value will be ignored if the slider has an associated histogram.\"\n                },\n                \"attribute\": \"mirrored\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"numberingSystem\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NumberingSystem\",\n                    \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"latn\\\"\",\n                    \"references\": {\n                        \"NumberingSystem\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/locale\",\n                            \"id\": \"src/utils/locale.ts::NumberingSystem\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n                },\n                \"attribute\": \"numbering-system\",\n                \"reflect\": false\n            },\n            \"pageStep\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the interval to move with the page up, or page down keys.\"\n                },\n                \"attribute\": \"page-step\",\n                \"reflect\": true\n            },\n            \"precise\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, sets a finer point for handles.\"\n                },\n                \"attribute\": \"precise\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"snap\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, enables snap selection in coordination with `step` via a mouse.\"\n                },\n                \"attribute\": \"snap\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"step\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the interval to move with the up, or down keys.\"\n                },\n                \"attribute\": \"step\",\n                \"reflect\": true,\n                \"defaultValue\": \"1\"\n            },\n            \"ticks\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Displays tick marks on the number line at a specified interval.\"\n                },\n                \"attribute\": \"ticks\",\n                \"reflect\": true\n            },\n            \"value\": {\n                \"type\": \"number\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"null | number | number[]\",\n                    \"resolved\": \"number | number[]\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"minMaxValueRange\": {},\n            \"minValueDragRange\": {},\n            \"maxValueDragRange\": {},\n            \"tickValues\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteSliderInput\",\n                \"name\": \"calciteSliderInput\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires on all updates to the component.\\n\\nNote: Fires frequently during drag. To perform\\nexpensive operations consider using a debounce or throttle to avoid\\nlocking up the main thread.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteSliderChange\",\n                \"name\": \"calciteSliderChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the thumb is released on the component.\\n\\nNote: To constantly listen to the drag event,\\nuse `calciteSliderInput` instead.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"histogram\",\n                \"methodName\": \"histogramWatcher\"\n            }, {\n                \"propName\": \"ticks\",\n                \"methodName\": \"ticksWatcher\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueHandler\"\n            }, {\n                \"propName\": \"minValue\",\n                \"methodName\": \"minMaxValueHandler\"\n            }, {\n                \"propName\": \"maxValue\",\n                \"methodName\": \"minMaxValueHandler\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"pointerdown\",\n                \"method\": \"pointerDownHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": true\n            }];\n    }\n}\n//# sourceMappingURL=slider.js.map\n"],"mappings":"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"}