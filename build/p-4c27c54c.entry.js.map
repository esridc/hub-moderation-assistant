{"version":3,"names":["CSS","thumbnail","background","initials","icon","stringToHex","string","mixStringDeterministically","hash","i","length","charCodeAt","hex","j","value","toString","substr","midPoint","Math","floor","reversed","split","reverse","join","substring","slice","rgbToHue","rgb","r","g","b","max","min","delta","hue","round","hexToHue","hexToRGB","avatarCss","Avatar","constructor","hostRef","this","scale","undefined","fullName","username","userId","label","thumbnailFailedToLoad","render","determineContent","h","alt","class","onError","src","generateInitials","backgroundColor","generateFillColor","role","style","el","theme","getModeName","id","name","isValidHex","l","trim","map"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/avatar/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/avatar/utils.js","./node_modules/@esri/calcite-components/dist/collection/components/avatar/avatar.css?tag=calcite-avatar&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/avatar/avatar.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    thumbnail: \"thumbnail\",\n    background: \"background\",\n    initials: \"initials\",\n    icon: \"icon\",\n};\n//# sourceMappingURL=resources.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { hexToRGB } from \"../color-picker/utils\";\n/**\n * Convert a string to a valid hex by hashing its contents\n * and using the hash as a seed for three distinct color values\n *\n * @param string\n */\nexport function stringToHex(string) {\n    // improve random color generation for similar strings.\n    string = mixStringDeterministically(string);\n    let hash = 0;\n    for (let i = 0; i < string.length; i++) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let hex = \"#\";\n    for (let j = 0; j < 3; j++) {\n        const value = (hash >> (j * 8)) & 0xff;\n        hex += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return hex;\n}\n/**\n * The function splits the string into two halves, reverses each half, and then concatenates them.\n *\n * @param {string} string - The input string to be mixed.\n * @returns {string} - The mixed string.\n */\nfunction mixStringDeterministically(string) {\n    const midPoint = Math.floor(string.length / 2);\n    const reversed = string.split(\"\").reverse().join(\"\");\n    return reversed.substring(midPoint) + reversed.slice(0, midPoint);\n}\n/**\n * Find the hue of a color given the separate RGB color channels\n *\n * @param rgb\n */\nexport function rgbToHue(rgb) {\n    let { r, g, b } = rgb;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const delta = max - min;\n    if (max === min) {\n        return 0;\n    }\n    let hue = (max + min) / 2;\n    switch (max) {\n        case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n        case g:\n            hue = (b - r) / delta + 2;\n            break;\n        case b:\n            hue = (r - g) / delta + 4;\n            break;\n    }\n    return Math.round(hue * 60);\n}\n/**\n * For a hex color, find the hue\n *\n * @param hex {string} - form of \"#------\"\n */\nexport function hexToHue(hex) {\n    return rgbToHue(hexToRGB(hex));\n}\n//# sourceMappingURL=utils.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n    display: inline-block;\n    overflow: hidden;\n    border-radius: 50%\n}\n\n:host([scale=s]) {\n    block-size: 1.5rem;\n    inline-size: 1.5rem;\n    font-size: var(--calcite-font-size--3)\n}\n\n:host([scale=m]) {\n    block-size: 2rem;\n    inline-size: 2rem;\n    font-size: var(--calcite-font-size--2)\n}\n\n:host([scale=l]) {\n    block-size: 2.75rem;\n    inline-size: 2.75rem;\n    font-size: var(--calcite-font-size-0)\n}\n\n.icon {\n    display: flex\n}\n\n.background {\n    display: flex;\n    block-size: 100%;\n    inline-size: 100%;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%\n}\n\n.initials {\n    font-weight: var(--calcite-font-weight-bold);\n    text-transform: uppercase;\n    color: var(--calcite-color-text-2)\n}\n\n.thumbnail {\n    block-size: 100%;\n    inline-size: 100%;\n    border-radius: 50%\n}\n\n:host([hidden]) {\n    display: none\n}\n\n[hidden] {\n    display: none\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h } from \"@stencil/core\";\nimport { getModeName } from \"../../utils/dom\";\nimport { isValidHex } from \"../color-picker/utils\";\nimport { CSS } from \"./resources\";\nimport { hexToHue, stringToHex } from \"./utils\";\nexport class Avatar {\n    constructor() {\n        this.scale = \"m\";\n        this.thumbnail = undefined;\n        this.fullName = undefined;\n        this.username = undefined;\n        this.userId = undefined;\n        this.label = undefined;\n        this.thumbnailFailedToLoad = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    render() {\n        return this.determineContent();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    determineContent() {\n        if (this.thumbnail && !this.thumbnailFailedToLoad) {\n            return (h(\"img\", { alt: this.label || \"\", class: CSS.thumbnail, onError: () => (this.thumbnailFailedToLoad = true), src: this.thumbnail }));\n        }\n        const initials = this.generateInitials();\n        const backgroundColor = this.generateFillColor();\n        return (h(\"span\", { \"aria-label\": this.label || this.fullName, class: CSS.background, role: \"figure\", style: { backgroundColor } }, initials ? (h(\"span\", { \"aria-hidden\": \"true\", class: CSS.initials }, initials)) : (h(\"calcite-icon\", { class: CSS.icon, icon: \"user\", scale: this.scale }))));\n    }\n    /**\n     * Generate a valid background color that is consistent and unique to this user\n     */\n    generateFillColor() {\n        const { userId, username, fullName, el } = this;\n        const theme = getModeName(el);\n        const id = userId && `#${userId.substr(userId.length - 6)}`;\n        const name = username || fullName || \"\";\n        const hex = id && isValidHex(id) ? id : stringToHex(name);\n        // if there is not unique information, or an invalid hex is produced, return a default\n        if ((!userId && !name) || !isValidHex(hex)) {\n            return `var(--calcite-color-foreground-2)`;\n        }\n        const hue = hexToHue(hex);\n        const l = theme === \"dark\" ? 20 : 90;\n        return `hsl(${hue}, 60%, ${l}%)`;\n    }\n    /**\n     * Use fullName or username to generate initials\n     */\n    generateInitials() {\n        const { fullName, username } = this;\n        if (fullName) {\n            return fullName\n                .trim()\n                .split(\" \")\n                .map((name) => name.substring(0, 1))\n                .join(\"\");\n        }\n        else if (username) {\n            return username.substring(0, 2);\n        }\n        return false;\n    }\n    static get is() { return \"calcite-avatar\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"avatar.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"avatar.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"thumbnail\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the `src` to an image (remember to add a token if the user is private).\"\n                },\n                \"attribute\": \"thumbnail\",\n                \"reflect\": true\n            },\n            \"fullName\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the full name of the user. When `label` and `thumbnail` are not defined, specifies the accessible name for the component.\"\n                },\n                \"attribute\": \"full-name\",\n                \"reflect\": true\n            },\n            \"username\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the username of the user.\"\n                },\n                \"attribute\": \"username\",\n                \"reflect\": true\n            },\n            \"userId\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the unique id of the user.\"\n                },\n                \"attribute\": \"user-id\",\n                \"reflect\": true\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies alternative text when `thumbnail` is defined, otherwise specifies an accessible label.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"thumbnailFailedToLoad\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n//# sourceMappingURL=avatar.js.map\n"],"mappings":"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"}