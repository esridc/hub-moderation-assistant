{"version":3,"names":["DURATIONS","slow","medium","fast","SLOTS","actionsEnd","title","message","link","CSS","close","container","containerBottom","containerBottomEnd","containerBottomStart","containerQueued","containerTop","containerTopEnd","containerTopStart","content","contentContainer","dismissProgress","footer","icon","containerEmbedded","queueCount","queueCountActive","textContainer","focused","alertCss","Alert","constructor","hostRef","this","handleKeyBoardFocus","keyBoardFocus","handleFocus","handleKeyBoardBlur","mouseFocus","handleBlur","autoCloseTimeoutId","totalOpenTime","totalHoverTime","openTransitionProp","setTransitionEl","el","transitionEl","closeAlert","queued","open","queue","filter","determineActiveAlert","calciteInternalAlertSync","emit","actionsEndSlotChangeHandler","event","hasEndActions","slotChangeHasAssignedElement","handleMouseOver","handleMouseLeave","window","clearTimeout","Date","now","initialOpenTime","lastMouseOverBegin","hoverDuration","timeRemaining","autoCloseDuration","setTimeout","autoClose","embedded","kind","undefined","iconFlipRtl","label","numberingSystem","placement","scale","messages","messageOverrides","defaultMessages","effectiveLocale","numberStringFormatter","NumberStringFormat","queueLength","openHandler","onToggleOpenCloseComponent","calciteInternalAlertRegister","onMessagesChange","updateDuration","connectedCallback","connectLocalized","connectMessages","numberFormatOptions","locale","signDisplay","async","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","dispatchEvent","CustomEvent","detail","alert","queueTimeout","disconnectLocalized","disconnectMessages","render","role","hidden","effectiveIcon","setRequestedIcon","KindIcons","hasQueuedAlerts","h","Host","key","toAriaBoolean","class","onPointerEnter","onPointerLeave","ref","renderIcon","onFocusin","onFocusout","name","renderActionsEnd","renderQueueCount","renderCloseButton","onClick","closeButton","type","getIconScale","queueNumber","queueText","numberFormatter","format","value","onSlotchange","flipRtl","alertSync","length","stopPropagation","alertRegister","includes","push","alertUnregister","componentFocusable","alertLinkEl","getSlotted","selector","setFocus","focus","effectiveLocaleChange","updateMessages","numberingSystemChange","_a","openAlert","onBeforeOpen","calciteAlertBeforeOpen","onOpen","calciteAlertOpen","onBeforeClose","calciteAlertBeforeClose","onClose","calciteAlertClose","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/alert/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/alert/alert.css?tag=calcite-alert&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/alert/alert.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const DURATIONS = {\n    slow: 14000,\n    medium: 10000,\n    fast: 6000,\n};\nexport const SLOTS = {\n    actionsEnd: \"actions-end\",\n    title: \"title\",\n    message: \"message\",\n    link: \"link\",\n};\nexport const CSS = {\n    actionsEnd: \"actions-end\",\n    close: \"close\",\n    container: \"container\",\n    containerBottom: \"container--bottom\",\n    containerBottomEnd: \"container--bottom-end\",\n    containerBottomStart: \"container--bottom-start\",\n    containerQueued: \"container--queued\",\n    containerTop: \"container--top\",\n    containerTopEnd: \"container--top-end\",\n    containerTopStart: \"container--top-start\",\n    content: \"content\",\n    contentContainer: \"content-container\",\n    dismissProgress: \"dismiss-progress\",\n    footer: \"footer\",\n    icon: \"icon\",\n    containerEmbedded: \"container--embedded\",\n    queueCount: \"queue-count\",\n    queueCountActive: \"queue-count--active\",\n    textContainer: \"text-container\",\n    focused: \"focused\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-alert-width: Specifies the width of the component.\n*/\n:host {\n  --calcite-alert-edge-distance: 2rem;\n  --calcite-alert-dismiss-progress-background: var(--calcite-color-transparent-tint);\n  display: block;\n}\n\n.container {\n  pointer-events: none;\n  position: fixed;\n  z-index: var(--calcite-z-index-toast);\n  margin-inline: auto;\n  margin-block: 0px;\n  box-sizing: border-box;\n  display: flex;\n  inline-size: 100%;\n  min-inline-size: min-content;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--calcite-color-foreground-1);\n  text-align: start;\n  opacity: 0;\n  --tw-shadow: 0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);\n  --tw-shadow-colored: 0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n  border-radius: var(--calcite-border-radius);\n  border-block-start: 0 solid transparent;\n  border-inline: 1px solid var(--calcite-color-border-3);\n  border-block-end: 1px solid var(--calcite-color-border-3);\n  inline-size: var(--calcite-alert-width);\n  max-inline-size: calc(100% - var(--calcite-alert-edge-distance) * 2);\n  transition: var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), all var(--calcite-animation-timing) ease-in-out;\n}\n.container--bottom, .container--top {\n  inset-inline-end: 0;\n  inset-inline-start: 0;\n}\n.container[class*=bottom] {\n  transform: translate3d(0, var(--calcite-alert-edge-distance), 0);\n  inset-block-end: var(--calcite-alert-edge-distance);\n}\n.container[class*=top] {\n  transform: translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), 0);\n  inset-block-start: var(--calcite-alert-edge-distance);\n}\n.container[class*=start] {\n  inset-inline-start: var(--calcite-alert-edge-distance);\n  inset-inline-end: auto;\n}\n.container[class*=end] {\n  inset-inline-end: var(--calcite-alert-edge-distance);\n  inset-inline-start: auto;\n}\n\n.icon {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0px;\n  margin-block: auto;\n  margin-inline-end: auto;\n  padding-inline-start: var(--calcite-alert-spacing-token-large);\n}\n\n.close {\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  justify-content: flex-end;\n  align-self: stretch;\n  border-style: none;\n  background-color: transparent;\n  color: var(--calcite-color-text-3);\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n  -webkit-appearance: none;\n  padding: var(--calcite-alert-spacing-token-large);\n  outline-color: transparent;\n}\n.close:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n.close:hover, .close:focus {\n  background-color: var(--calcite-color-foreground-2);\n  color: var(--calcite-color-text-1);\n}\n.close:active {\n  background-color: var(--calcite-color-foreground-3);\n}\n\n.queue-count {\n  visibility: hidden;\n  display: flex;\n  min-inline-size: min-content;\n  cursor: default;\n  align-items: center;\n  justify-content: space-around;\n  align-self: stretch;\n  overflow: hidden;\n  background-color: var(--calcite-color-foreground-1);\n  text-align: center;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-color-text-2);\n  opacity: 0;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  border-inline: 0 solid transparent;\n  border-start-end-radius: 0;\n}\n.queue-count--active {\n  visibility: visible;\n  opacity: 1;\n}\n\n.dismiss-progress {\n  position: absolute;\n  display: block;\n  inline-size: 100%;\n  overflow: hidden;\n  inset-inline: 0;\n  inset-block-start: -2px;\n  block-size: 2px;\n  border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0;\n}\n.dismiss-progress::after {\n  position: absolute;\n  inset-block-start: 0px;\n  display: block;\n  block-size: 2px;\n  content: \"\";\n  background-color: var(--calcite-alert-dismiss-progress-background);\n  inset-inline-end: 0;\n}\n\n.actions-end {\n  display: flex;\n  align-self: stretch;\n}\n\n.text-container {\n  box-sizing: border-box;\n  display: flex;\n  min-inline-size: 0px;\n  flex: 1 1 auto;\n  flex-direction: column;\n  overflow-wrap: break-word;\n  padding-block: var(--calcite-alert-spacing-token-small);\n  padding-inline: var(--calcite-alert-spacing-token-large) var(--calcite-alert-spacing-token-small);\n}\n\n.footer {\n  position: relative;\n  display: flex;\n  inline-size: auto;\n  justify-content: flex-end;\n  align-self: stretch;\n  padding-block-start: 1px;\n  block-size: inherit;\n}\n\n:host([scale=s]) {\n  --calcite-alert-width: 40em;\n  --calcite-alert-spacing-token-small: 0.5rem;\n  --calcite-alert-spacing-token-large: 0.75rem;\n  --calcite-alert-footer-height: 2rem;\n  --calcite-alert-footer-divider-gap: 0.125rem;\n}\n:host([scale=s]) slot[name=title]::slotted(*),\n:host([scale=s]) *::slotted([slot=title]) {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n:host([scale=s]) slot[name=message]::slotted(*),\n:host([scale=s]) *::slotted([slot=message]) {\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n}\n:host([scale=s]) slot[name=link]::slotted(*),\n:host([scale=s]) *::slotted([slot=link]) {\n  font-size: var(--calcite-font-size--2);\n  line-height: 1.375;\n}\n:host([scale=s]) .queue-count {\n  margin-inline: 0.5rem;\n}\n:host([scale=s]) .container {\n  --calcite-alert-min-height: 3.5rem;\n}\n\n:host([scale=m]) {\n  --calcite-alert-width: 50em;\n  --calcite-alert-spacing-token-small: 0.75rem;\n  --calcite-alert-spacing-token-large: 1rem;\n  --calcite-alert-footer-height: 3rem;\n  --calcite-alert-footer-divider-gap: 0.25rem;\n}\n:host([scale=m]) slot[name=title]::slotted(*),\n:host([scale=m]) *::slotted([slot=title]) {\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n:host([scale=m]) slot[name=message]::slotted(*),\n:host([scale=m]) *::slotted([slot=message]) {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n:host([scale=m]) slot[name=link]::slotted(*),\n:host([scale=m]) *::slotted([slot=link]) {\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n:host([scale=m]) .queue-count {\n  margin-inline: 0.75rem;\n}\n:host([scale=m]) .container {\n  --calcite-alert-min-height: 4.1875rem;\n}\n\n:host([scale=l]) {\n  --calcite-alert-width: 60em;\n  --calcite-alert-spacing-token-small: 1rem;\n  --calcite-alert-spacing-token-large: 1.25rem;\n  --calcite-alert-footer-height: 4rem;\n  --calcite-alert-footer-divider-gap: 0.5rem;\n}\n:host([scale=l]) slot[name=title]::slotted(*),\n:host([scale=l]) *::slotted([slot=title]) {\n  margin-block-end: 0.25rem;\n  font-size: var(--calcite-font-size-1);\n  line-height: 1.375;\n}\n:host([scale=l]) slot[name=message]::slotted(*),\n:host([scale=l]) *::slotted([slot=message]) {\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n:host([scale=l]) slot[name=link]::slotted(*),\n:host([scale=l]) *::slotted([slot=link]) {\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n:host([scale=l]) .queue-count {\n  margin-inline: 1rem;\n}\n:host([scale=l]) .container {\n  --calcite-alert-min-height: 5.625rem;\n}\n\n:host([open]) .container:not(.container--queued) {\n  border-block-start-width: 2px;\n  opacity: 1;\n  pointer-events: initial;\n}\n:host([open]) .container:not(.container--queued)[class*=bottom] {\n  transform: translate3d(0, calc(-1 * var(--calcite-alert-edge-distance)), inherit);\n}\n:host([open]) .container:not(.container--queued)[class*=top] {\n  transform: translate3d(0, var(--calcite-alert-edge-distance), inherit);\n}\n\n:host([auto-close]) > .queue-count {\n  border-inline-end: 0 solid transparent;\n}\n\nslot[name=title]::slotted(*),\n*::slotted([slot=title]) {\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-color-text-1);\n}\n\nslot[name=message]::slotted(*),\n*::slotted([slot=message]) {\n  margin: 0px;\n  display: inline;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n  font-weight: var(--calcite-font-weight-normal);\n  color: var(--calcite-color-text-2);\n  margin-inline-end: 0.5rem;\n}\n\nslot[name=link]::slotted(*),\n*::slotted([slot=link]) {\n  display: inline-flex;\n  color: var(--calcite-color-text-link);\n}\n\n:host([kind=brand]) .container {\n  border-block-start-color: var(--calcite-color-brand);\n}\n:host([kind=brand]) .container .icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([kind=info]) .container {\n  border-block-start-color: var(--calcite-color-status-info);\n}\n:host([kind=info]) .container .icon {\n  color: var(--calcite-color-status-info);\n}\n\n:host([kind=danger]) .container {\n  border-block-start-color: var(--calcite-color-status-danger);\n}\n:host([kind=danger]) .container .icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([kind=success]) .container {\n  border-block-start-color: var(--calcite-color-status-success);\n}\n:host([kind=success]) .container .icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([kind=warning]) .container {\n  border-block-start-color: var(--calcite-color-status-warning);\n}\n:host([kind=warning]) .container .icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([auto-close-duration=fast]) .dismiss-progress:after {\n  animation: dismissProgress 6000ms ease-out;\n}\n\n:host(:hover[auto-close-duration=fast]) .dismiss-progress:after,\n:host(:focus[auto-close-duration=fast]) .dismiss-progress:after {\n  animation-play-state: paused;\n}\n\n:host([auto-close-duration=medium]) .dismiss-progress:after {\n  animation: dismissProgress 10000ms ease-out;\n}\n\n:host(:hover[auto-close-duration=medium]) .dismiss-progress:after,\n:host(:focus[auto-close-duration=medium]) .dismiss-progress:after {\n  animation-play-state: paused;\n}\n\n:host([auto-close-duration=slow]) .dismiss-progress:after {\n  animation: dismissProgress 14000ms ease-out;\n}\n\n:host(:hover[auto-close-duration=slow]) .dismiss-progress:after,\n:host(:focus[auto-close-duration=slow]) .dismiss-progress:after {\n  animation-play-state: paused;\n}\n\n.container.focused .dismiss-progress::after {\n  animation-play-state: paused;\n}\n\n@keyframes dismissProgress {\n  0% {\n    inline-size: 0px;\n    opacity: 0.75;\n  }\n  100% {\n    inline-size: 100%;\n    opacity: 1;\n  }\n}\n/**\n * Conditional styles for when Alert is slotted in Shell\n */\n.container--embedded {\n  position: absolute;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}\n\n:host([calcite-hydrated-hidden]) {\n  visibility: hidden !important;\n  pointer-events: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { getSlotted, setRequestedIcon, slotChangeHasAssignedElement, toAriaBoolean, } from \"../../utils/dom\";\nimport { getIconScale } from \"../../utils/component\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, NumberStringFormat, } from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { KindIcons } from \"../resources\";\nimport { CSS, DURATIONS, SLOTS } from \"./resources\";\n/**\n * Alerts are meant to provide a way to communicate urgent or important information to users, frequently as a result of an action they took in your app. Alerts are positioned\n * at the bottom of the page. Multiple opened alerts will be added to a queue, allowing users to dismiss them in the order they are provided.\n */\n/**\n * @slot title - A slot for adding a title to the component.\n * @slot message - A slot for adding main text to the component.\n * @slot link - A slot for adding a `calcite-action` to take from the component such as: \"undo\", \"try again\", \"link to page\", etc.\n * @slot actions-end - A slot for adding `calcite-action`s to the end of the component. It is recommended to use two or fewer actions.\n */\nexport class Alert {\n    constructor() {\n        this.handleKeyBoardFocus = () => {\n            this.keyBoardFocus = true;\n            this.handleFocus();\n        };\n        this.handleKeyBoardBlur = () => {\n            this.keyBoardFocus = false;\n            if (!this.mouseFocus) {\n                this.handleBlur();\n            }\n        };\n        this.autoCloseTimeoutId = null;\n        this.totalOpenTime = 0;\n        this.totalHoverTime = 0;\n        this.openTransitionProp = \"opacity\";\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this.setTransitionEl = (el) => {\n            this.transitionEl = el;\n        };\n        /** close and emit calciteInternalAlertSync event with the updated queue payload */\n        this.closeAlert = () => {\n            this.autoCloseTimeoutId = null;\n            this.queued = false;\n            this.open = false;\n            this.queue = this.queue.filter((el) => el !== this.el);\n            this.determineActiveAlert();\n            this.calciteInternalAlertSync.emit({ queue: this.queue });\n        };\n        this.actionsEndSlotChangeHandler = (event) => {\n            this.hasEndActions = slotChangeHasAssignedElement(event);\n        };\n        this.handleMouseOver = () => {\n            this.mouseFocus = true;\n            this.handleFocus();\n        };\n        this.handleMouseLeave = () => {\n            this.mouseFocus = false;\n            if (!this.keyBoardFocus) {\n                this.handleBlur();\n            }\n        };\n        this.handleFocus = () => {\n            window.clearTimeout(this.autoCloseTimeoutId);\n            this.autoCloseTimeoutId = null;\n            this.totalOpenTime = Date.now() - this.initialOpenTime;\n            this.lastMouseOverBegin = Date.now();\n        };\n        this.handleBlur = () => {\n            const hoverDuration = Date.now() - this.lastMouseOverBegin;\n            const timeRemaining = DURATIONS[this.autoCloseDuration] - this.totalOpenTime + this.totalHoverTime;\n            this.totalHoverTime = this.totalHoverTime ? hoverDuration + this.totalHoverTime : hoverDuration;\n            this.autoCloseTimeoutId = window.setTimeout(() => this.closeAlert(), timeRemaining);\n        };\n        this.open = false;\n        this.autoClose = false;\n        this.autoCloseDuration = \"medium\";\n        this.embedded = false;\n        this.kind = \"brand\";\n        this.icon = undefined;\n        this.iconFlipRtl = false;\n        this.label = undefined;\n        this.numberingSystem = undefined;\n        this.placement = \"bottom\";\n        this.scale = \"m\";\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.defaultMessages = undefined;\n        this.effectiveLocale = \"\";\n        this.numberStringFormatter = new NumberStringFormat();\n        this.hasEndActions = false;\n        this.queue = [];\n        this.queueLength = 0;\n        this.queued = false;\n        this.keyBoardFocus = false;\n    }\n    openHandler() {\n        onToggleOpenCloseComponent(this);\n        if (this.open && !this.queued) {\n            this.calciteInternalAlertRegister.emit();\n        }\n        if (!this.open) {\n            this.queue = this.queue.filter((el) => el !== this.el);\n            this.calciteInternalAlertSync.emit({ queue: this.queue });\n        }\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    updateDuration() {\n        if (this.autoClose && this.autoCloseTimeoutId) {\n            window.clearTimeout(this.autoCloseTimeoutId);\n            this.autoCloseTimeoutId = window.setTimeout(() => this.closeAlert(), DURATIONS[this.autoCloseDuration]);\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectLocalized(this);\n        connectMessages(this);\n        const open = this.open;\n        if (open && !this.queued) {\n            this.calciteInternalAlertRegister.emit();\n        }\n        this.numberStringFormatter.numberFormatOptions = {\n            locale: this.effectiveLocale,\n            numberingSystem: this.numberingSystem,\n            signDisplay: \"always\",\n        };\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        await setUpMessages(this);\n        if (this.open) {\n            onToggleOpenCloseComponent(this);\n        }\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        window.dispatchEvent(new CustomEvent(\"calciteInternalAlertUnregister\", {\n            detail: { alert: this.el },\n        }));\n        window.clearTimeout(this.autoCloseTimeoutId);\n        this.autoCloseTimeoutId = null;\n        window.clearTimeout(this.queueTimeout);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        this.embedded = false;\n    }\n    render() {\n        const { open, autoClose, label, placement, queued } = this;\n        const role = autoClose ? \"alert\" : \"alertdialog\";\n        const hidden = !open;\n        const effectiveIcon = setRequestedIcon(KindIcons, this.icon, this.kind);\n        const hasQueuedAlerts = this.queueLength > 1;\n        return (h(Host, { key: '169116d24d8bc100282c6338c2ed72168cba745e', \"aria-hidden\": toAriaBoolean(hidden), \"aria-label\": label, \"calcite-hydrated-hidden\": hidden, role: role }, h(\"div\", { key: 'b2d44e2f889e37a0481c860c98c4f5067eb48c33', class: {\n                [CSS.container]: true,\n                [CSS.containerQueued]: queued,\n                [`${CSS.container}--${placement}`]: true,\n                [CSS.containerEmbedded]: this.embedded,\n                [CSS.focused]: this.keyBoardFocus,\n            }, onPointerEnter: this.autoClose && this.autoCloseTimeoutId ? this.handleMouseOver : null, onPointerLeave: this.autoClose ? this.handleMouseLeave : null, ref: this.setTransitionEl }, effectiveIcon && this.renderIcon(effectiveIcon), h(\"div\", { key: 'add55405eff3b705b676338de5aa57b1606ccdab', class: CSS.textContainer, onFocusin: this.autoClose && this.autoCloseTimeoutId ? this.handleKeyBoardFocus : null, onFocusout: this.autoClose ? this.handleKeyBoardBlur : null }, h(\"slot\", { key: '6dde08e89c9455c9f10f109d2a2c56a8c181a0ce', name: SLOTS.title }), h(\"slot\", { key: 'a5f7cdfa56988f5330c7d252c578863077cdffa8', name: SLOTS.message }), h(\"slot\", { key: 'e9efbead90aafecd3c955b353bdd7bf9c15a8240', name: SLOTS.link })), this.renderActionsEnd(), hasQueuedAlerts ? this.renderQueueCount() : null, this.renderCloseButton(), open && !queued && autoClose ? h(\"div\", { class: CSS.dismissProgress }) : null)));\n    }\n    renderCloseButton() {\n        return (h(\"button\", { \"aria-label\": this.messages.close, class: CSS.close, key: \"close\", onClick: this.closeAlert, onFocusin: this.autoClose ? this.handleKeyBoardFocus : null, onFocusout: this.autoClose ? this.handleKeyBoardBlur : null, ref: (el) => (this.closeButton = el), type: \"button\" }, h(\"calcite-icon\", { icon: \"x\", scale: getIconScale(this.scale) })));\n    }\n    renderQueueCount() {\n        const queueNumber = this.queueLength > 2 ? this.queueLength - 1 : 1;\n        const queueText = this.numberStringFormatter.numberFormatter.format(queueNumber);\n        return (h(\"div\", { class: {\n                [CSS.queueCount]: true,\n                [CSS.queueCountActive]: this.queueLength > 1,\n            }, key: \"queue-count\" }, h(\"calcite-chip\", { scale: this.scale, value: queueText }, queueText)));\n    }\n    renderActionsEnd() {\n        return (h(\"div\", { class: CSS.actionsEnd }, h(\"slot\", { name: SLOTS.actionsEnd, onSlotchange: this.actionsEndSlotChangeHandler })));\n    }\n    renderIcon(icon) {\n        return (h(\"div\", { class: CSS.icon }, h(\"calcite-icon\", { flipRtl: this.iconFlipRtl, icon: icon, scale: getIconScale(this.scale) })));\n    }\n    // when an alert is opened or closed, update queue and determine active alert\n    alertSync(event) {\n        if (this.queue !== event.detail.queue) {\n            this.queue = event.detail.queue;\n        }\n        this.queueLength = this.queue.length;\n        this.determineActiveAlert();\n        event.stopPropagation();\n    }\n    // when an alert is first registered, trigger a queue sync\n    alertRegister() {\n        if (this.open && !this.queue.includes(this.el)) {\n            this.queued = true;\n            this.queue.push(this.el);\n        }\n        this.calciteInternalAlertSync.emit({ queue: this.queue });\n        this.determineActiveAlert();\n    }\n    // Event is dispatched on the window because the element is not in the DOM so bubbling won't occur.\n    alertUnregister(event) {\n        const queue = this.queue.filter((el) => el !== event.detail.alert);\n        this.queue = queue;\n        window.dispatchEvent(new CustomEvent(\"calciteInternalAlertSync\", {\n            detail: { queue },\n        }));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component's \"close\" button, the first focusable item. */\n    async setFocus() {\n        await componentFocusable(this);\n        const alertLinkEl = getSlotted(this.el, { selector: \"calcite-link\" });\n        if (!this.closeButton && !alertLinkEl) {\n            return;\n        }\n        else if (alertLinkEl) {\n            return alertLinkEl.setFocus();\n        }\n        else if (this.closeButton) {\n            this.closeButton.focus();\n        }\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n        this.numberStringFormatter.numberFormatOptions = {\n            locale: this.effectiveLocale,\n            numberingSystem: this.numberingSystem,\n            signDisplay: \"always\",\n        };\n    }\n    numberingSystemChange() {\n        this.numberStringFormatter.numberFormatOptions = {\n            locale: this.effectiveLocale,\n            numberingSystem: this.numberingSystem,\n            signDisplay: \"always\",\n        };\n    }\n    /** determine which alert is active */\n    determineActiveAlert() {\n        if (this.queue?.[0] === this.el) {\n            this.openAlert();\n            if (this.autoClose && !this.autoCloseTimeoutId) {\n                this.initialOpenTime = Date.now();\n                this.autoCloseTimeoutId = window.setTimeout(() => this.closeAlert(), DURATIONS[this.autoCloseDuration]);\n            }\n        }\n        else {\n            return;\n        }\n    }\n    onBeforeOpen() {\n        this.calciteAlertBeforeOpen.emit();\n    }\n    onOpen() {\n        this.calciteAlertOpen.emit();\n    }\n    onBeforeClose() {\n        this.calciteAlertBeforeClose.emit();\n    }\n    onClose() {\n        this.calciteAlertClose.emit();\n    }\n    /** remove queued class after animation completes */\n    openAlert() {\n        window.clearTimeout(this.queueTimeout);\n        this.queueTimeout = window.setTimeout(() => (this.queued = false), 300);\n    }\n    static get is() { return \"calcite-alert\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"alert.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"alert.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays and positions the component.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"autoClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component closes automatically. Recommended for passive, non-blocking alerts.\"\n                },\n                \"attribute\": \"auto-close\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"autoCloseDuration\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AlertDuration\",\n                    \"resolved\": \"\\\"fast\\\" | \\\"medium\\\" | \\\"slow\\\"\",\n                    \"references\": {\n                        \"AlertDuration\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/alert/interfaces.ts::AlertDuration\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the duration before the component automatically closes - only use with `autoClose`.\"\n                },\n                \"attribute\": \"auto-close-duration\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"medium\\\"\"\n            },\n            \"embedded\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"This internal property, managed by a containing calcite-shell, is used\\nto inform the component if special configuration or styles are needed\"\n                },\n                \"attribute\": \"embedded\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"kind\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Extract<\\n    \\\"brand\\\" | \\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\",\\n    Kind\\n  >\",\n                    \"resolved\": \"\\\"brand\\\" | \\\"danger\\\" | \\\"info\\\" | \\\"success\\\" | \\\"warning\\\"\",\n                    \"references\": {\n                        \"Extract\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Extract\"\n                        },\n                        \"Kind\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Kind\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the kind of the component, which will apply to top border and icon.\"\n                },\n                \"attribute\": \"kind\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"brand\\\"\"\n            },\n            \"icon\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"IconNameOrString | boolean\",\n                    \"resolved\": \"boolean | string\",\n                    \"references\": {\n                        \"IconNameOrString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../icon/interfaces\",\n                            \"id\": \"src/components/icon/interfaces.ts::IconNameOrString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, shows a default recommended icon. Alternatively,\\npass a Calcite UI Icon name to display a specific icon.\"\n                },\n                \"attribute\": \"icon\",\n                \"reflect\": true\n            },\n            \"iconFlipRtl\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n                },\n                \"attribute\": \"icon-flip-rtl\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies an accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"numberingSystem\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"NumberingSystem\",\n                    \"resolved\": \"\\\"arab\\\" | \\\"arabext\\\" | \\\"latn\\\"\",\n                    \"references\": {\n                        \"NumberingSystem\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/locale\",\n                            \"id\": \"src/utils/locale.ts::NumberingSystem\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the Unicode numeral system used by the component for localization.\"\n                },\n                \"attribute\": \"numbering-system\",\n                \"reflect\": true\n            },\n            \"placement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"MenuPlacement\",\n                    \"resolved\": \"\\\"bottom\\\" | \\\"bottom-end\\\" | \\\"bottom-start\\\" | \\\"top\\\" | \\\"top-end\\\" | \\\"top-start\\\"\",\n                    \"references\": {\n                        \"MenuPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::MenuPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the placement of the component.\"\n                },\n                \"attribute\": \"placement\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"bottom\\\"\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"AlertMessages\",\n                    \"resolved\": \"{ close: string; }\",\n                    \"references\": {\n                        \"AlertMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/alert/t9n\",\n                            \"id\": \"src/components/alert/assets/alert/t9n/index.d.ts::AlertMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<AlertMessages>\",\n                    \"resolved\": \"{ close?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"AlertMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/alert/t9n\",\n                            \"id\": \"src/components/alert/assets/alert/t9n/index.d.ts::AlertMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"defaultMessages\": {},\n            \"effectiveLocale\": {},\n            \"numberStringFormatter\": {},\n            \"hasEndActions\": {},\n            \"queue\": {},\n            \"queueLength\": {},\n            \"queued\": {},\n            \"keyBoardFocus\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteAlertBeforeClose\",\n                \"name\": \"calciteAlertBeforeClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is requested to be closed and before the closing transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteAlertClose\",\n                \"name\": \"calciteAlertClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is closed and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteAlertBeforeOpen\",\n                \"name\": \"calciteAlertBeforeOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteAlertOpen\",\n                \"name\": \"calciteAlertOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is open and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInternalAlertSync\",\n                \"name\": \"calciteInternalAlertSync\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Fires to sync queue when opened or closed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"Sync\",\n                    \"resolved\": \"Sync\",\n                    \"references\": {\n                        \"Sync\": {\n                            \"location\": \"import\",\n                            \"path\": \"./interfaces\",\n                            \"id\": \"src/components/alert/interfaces.ts::Sync\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"calciteInternalAlertRegister\",\n                \"name\": \"calciteInternalAlertRegister\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Fires when the component is added to DOM - used to receive initial queue.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLCalciteLinkElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalciteLinkElement\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's \\\"close\\\" button, the first focusable item.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"open\",\n                \"methodName\": \"openHandler\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"autoCloseDuration\",\n                \"methodName\": \"updateDuration\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }, {\n                \"propName\": \"numberingSystem\",\n                \"methodName\": \"numberingSystemChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"calciteInternalAlertSync\",\n                \"method\": \"alertSync\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteInternalAlertRegister\",\n                \"method\": \"alertRegister\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteInternalAlertUnregister\",\n                \"method\": \"alertUnregister\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=alert.js.map\n"],"mappings":"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"}