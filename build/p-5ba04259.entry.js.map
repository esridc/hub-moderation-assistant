{"version":3,"names":["StarIcon","full","scale","partial","h","class","undefined","icon","ratingCss","Rating","constructor","hostRef","this","handleRatingPointerOver","isKeyboardInteraction","handleRatingPointerOut","hoverValue","handleHostKeyDown","handleLabelKeyDown","event","inputValue","getValueFromLabelEvent","key","numberKey","Number","emit","isNaN","value","required","getPreviousRatingValue","updateFocus","preventDefault","getNextRatingValue","max","handleInputChange","inputVal","target","handleLabelPointerOver","handleLabelPointerDown","currentTarget","focus","handleLabelClick","handleLabelFocus","setLabelEl","el","labelElements","push","guid","average","count","disabled","form","messages","messageOverrides","name","readOnly","showChip","effectiveLocale","defaultMessages","onMessagesChange","handleValueUpdate","newValue","calciteRatingChange","effectiveLocaleChange","updateMessages","connectedCallback","connectInteractive","connectLocalized","connectMessages","connectLabel","connectForm","async","setUpMessages","setUpLoadableComponent","componentWillRender","starsMap","Array","from","length","_","i","checked","fraction","hovered","id","selected","tabIndex","getTabIndex","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","disconnectLabel","disconnectForm","componentDidRender","updateHostInteraction","render","Host","onKeyDown","onPointerOut","onPointerOver","InteractiveContainer","rating","map","star","htmlFor","onClick","onFocus","onPointerDown","ref","onChange","type","style","width","stars","replace","_a","toString","_b","HiddenFormInputSlot","component","onLabelClick","setFocus","getAttribute","currentValue","componentFocusable","focusFirstTabbable","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/rating/functional/star.js","./node_modules/@esri/calcite-components/dist/collection/components/rating/rating.css?tag=calcite-rating&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/rating/rating.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h } from \"@stencil/core\";\nexport const StarIcon = ({ full, scale, partial }) => (h(\"calcite-icon\", { class: partial ? undefined : \"icon\",\n    icon: full ? \"star-f\" : \"star\",\n    scale }));\n//# sourceMappingURL=star.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([read-only]) *, :host([disabled]) *,\n:host([read-only]) ::slotted(*),\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-rating-spacing-unit: The amount of left and right margin spacing between each rating star.\n*/\n:host {\n  position: relative;\n  display: flex;\n  align-items: center;\n  inline-size: -moz-fit-content;\n  inline-size: fit-content;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host([scale=s]) {\n  block-size: 1.5rem;\n  --calcite-rating-spacing-unit: 0.25rem;\n}\n\n:host([scale=m]) {\n  block-size: 2rem;\n  --calcite-rating-spacing-unit: 0.5rem;\n}\n\n:host([scale=l]) {\n  block-size: 2.75rem;\n  --calcite-rating-spacing-unit: 0.75rem;\n}\n\n.fieldset {\n  margin: 0;\n  display: flex;\n  border-width: 0;\n  padding: 0;\n  align-items: center;\n  gap: var(--calcite-rating-spacing-unit);\n}\n\n.wrapper {\n  display: inline-block;\n}\n\n.star {\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  color: var(--calcite-color-border-input);\n}\n.star:focus {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n.average,\n.fraction {\n  color: var(--calcite-color-status-warning);\n}\n\n.hovered,\n.selected {\n  color: var(--calcite-color-brand);\n}\n\n.fraction {\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  position: absolute;\n  pointer-events: none;\n  inset-block-start: 0;\n  overflow: hidden;\n  inset-inline-start: 0;\n}\n\ncalcite-chip {\n  pointer-events: none;\n  cursor: default;\n}\n\n.number--average {\n  font-weight: bold;\n}\n\n.number--count {\n  color: var(--calcite-color-text-2);\n  font-style: italic;\n}\n.number--count:not(:first-child) {\n  margin-inline-start: var(--calcite-rating-spacing-unit);\n}\n\n.visually-hidden {\n  position: absolute;\n  inline-size: 1px;\n  block-size: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { connectForm, disconnectForm, HiddenFormInputSlot } from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel } from \"../../utils/label\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nimport { focusFirstTabbable } from \"../../utils/dom\";\nimport { StarIcon } from \"./functional/star\";\nexport class Rating {\n    constructor() {\n        this.handleRatingPointerOver = () => {\n            this.isKeyboardInteraction = false;\n        };\n        this.handleRatingPointerOut = () => {\n            this.isKeyboardInteraction = true;\n            this.hoverValue = null;\n        };\n        this.handleHostKeyDown = () => {\n            this.isKeyboardInteraction = true;\n        };\n        this.handleLabelKeyDown = (event) => {\n            const inputValue = this.getValueFromLabelEvent(event);\n            const key = event.key;\n            const numberKey = key == \" \" ? undefined : Number(key);\n            this.emit = true;\n            if (isNaN(numberKey)) {\n                switch (key) {\n                    case \"Enter\":\n                    case \" \":\n                        this.value = !this.required && this.value === inputValue ? 0 : inputValue;\n                        break;\n                    case \"ArrowLeft\":\n                        this.value = this.getPreviousRatingValue(inputValue);\n                        this.updateFocus();\n                        event.preventDefault();\n                        break;\n                    case \"ArrowRight\":\n                        this.value = this.getNextRatingValue(inputValue);\n                        this.updateFocus();\n                        event.preventDefault();\n                        break;\n                    case \"Tab\":\n                        this.hoverValue = null;\n                        break;\n                }\n            }\n            else {\n                if (!this.required && numberKey >= 0 && numberKey <= this.max) {\n                    this.value = numberKey;\n                }\n                else if (this.required && numberKey > 0 && numberKey <= this.max) {\n                    this.value = numberKey;\n                }\n                this.updateFocus();\n            }\n        };\n        this.handleInputChange = (event) => {\n            if (this.isKeyboardInteraction === true) {\n                const inputVal = Number(event.target[\"value\"]);\n                this.hoverValue = inputVal;\n                this.value = inputVal;\n            }\n        };\n        this.handleLabelPointerOver = (event) => {\n            this.hoverValue = this.getValueFromLabelEvent(event);\n        };\n        this.handleLabelPointerDown = (event) => {\n            const target = event.currentTarget;\n            const inputValue = this.getValueFromLabelEvent(event);\n            this.hoverValue = inputValue;\n            this.emit = true;\n            this.value = !this.required && this.value === inputValue ? 0 : inputValue;\n            target.focus();\n        };\n        this.handleLabelClick = (event) => {\n            //preventing pointerdown event will supress any compatability mouse events except for click event.\n            event.preventDefault();\n        };\n        this.handleLabelFocus = (event) => {\n            const inputValue = this.getValueFromLabelEvent(event);\n            this.hoverValue = inputValue;\n        };\n        this.setLabelEl = (el) => {\n            this.labelElements.push(el);\n        };\n        this.emit = false;\n        this.guid = `calcite-ratings-${guid()}`;\n        this.isKeyboardInteraction = true;\n        this.labelElements = [];\n        this.max = 5;\n        this.average = undefined;\n        this.count = undefined;\n        this.disabled = false;\n        this.form = undefined;\n        this.messages = undefined;\n        this.messageOverrides = undefined;\n        this.name = undefined;\n        this.readOnly = false;\n        this.required = false;\n        this.scale = \"m\";\n        this.showChip = false;\n        this.value = 0;\n        this.effectiveLocale = \"\";\n        this.defaultMessages = undefined;\n        this.hoverValue = undefined;\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    handleValueUpdate(newValue) {\n        this.hoverValue = newValue;\n        if (this.emit) {\n            this.calciteRatingChange.emit();\n        }\n        this.emit = false;\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectInteractive(this);\n        connectLocalized(this);\n        connectMessages(this);\n        connectLabel(this);\n        connectForm(this);\n    }\n    async componentWillLoad() {\n        await setUpMessages(this);\n        setUpLoadableComponent(this);\n    }\n    componentWillRender() {\n        this.starsMap = Array.from({ length: this.max }, (_, i) => {\n            const value = i + 1;\n            const average = !this.hoverValue && this.average && !this.value && value <= this.average;\n            const checked = value === this.value;\n            const fraction = this.average && this.average + 1 - value;\n            const hovered = value <= this.hoverValue;\n            const id = `${this.guid}-${value}`;\n            const partial = !this.hoverValue && !this.value && !hovered && fraction > 0 && fraction < 1;\n            const selected = this.value >= value;\n            const tabIndex = this.getTabIndex(value);\n            return {\n                average,\n                checked,\n                fraction,\n                hovered,\n                id,\n                partial,\n                selected,\n                value,\n                tabIndex,\n            };\n        });\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLocalized(this);\n        disconnectMessages(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    render() {\n        return (h(Host, { key: 'ee12a95edffb164da0311917e561aeec2caba6ad', onKeyDown: this.handleHostKeyDown, onPointerOut: this.handleRatingPointerOut, onPointerOver: this.handleRatingPointerOver }, h(InteractiveContainer, { key: '8bae6d4b7713a20a071c8fea79779a1993c43f2a', disabled: this.disabled }, h(\"span\", { key: '3e010b43efdcad46e7d167760e70b10866e4b023', class: \"wrapper\" }, h(\"fieldset\", { key: '6fb40f5688a7a092f6e3687bc616202d9d22b308', class: \"fieldset\", disabled: this.disabled }, h(\"legend\", { key: '9ad0186739326cb80ffa2ea3bb86a2760f7b19c3', class: \"visually-hidden\" }, this.messages.rating), this.starsMap.map(({ average, checked, fraction, hovered, id, partial, selected, value, tabIndex, }) => {\n            return (h(\"label\", { class: {\n                    star: true,\n                    selected,\n                    hovered,\n                    average,\n                    partial,\n                }, \"data-value\": value, htmlFor: id, onClick: this.handleLabelClick, onFocus: this.handleLabelFocus, onKeyDown: this.handleLabelKeyDown, onPointerDown: this.handleLabelPointerDown, onPointerOver: this.handleLabelPointerOver, ref: this.setLabelEl, tabIndex: tabIndex }, h(\"input\", { checked: checked, class: \"visually-hidden\", disabled: this.disabled || this.readOnly, id: id, name: this.guid, onChange: this.handleInputChange, tabIndex: -1, type: \"radio\", value: value }), h(StarIcon, { full: selected || average, scale: this.scale }), partial && (h(\"div\", { class: \"fraction\", style: { width: `${fraction * 100}%` } }, h(StarIcon, { full: true, partial: true, scale: this.scale }))), h(\"span\", { class: \"visually-hidden\" }, this.messages.stars.replace(\"{num}\", `${value}`))));\n        }), (this.count || this.average) && this.showChip ? (h(\"calcite-chip\", { scale: this.scale, value: this.count?.toString() }, !!this.average && h(\"span\", { class: \"number--average\" }, this.average.toString()), !!this.count && h(\"span\", { class: \"number--count\" }, \"(\", this.count?.toString(), \")\"))) : null), h(HiddenFormInputSlot, { key: '353bd1c99bf548d5e214398a1e006a64a2027d5b', component: this })))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    onLabelClick() {\n        this.setFocus();\n    }\n    updateFocus() {\n        this.hoverValue = this.value;\n        this.labelElements[this.value - 1].focus();\n    }\n    getTabIndex(value) {\n        if (this.readOnly || (this.value !== value && (this.value || value !== 1))) {\n            return -1;\n        }\n        return 0;\n    }\n    getValueFromLabelEvent(event) {\n        const target = event.currentTarget;\n        return Number(target.getAttribute(\"data-value\"));\n    }\n    getNextRatingValue(currentValue) {\n        return currentValue === 5 ? 1 : currentValue + 1;\n    }\n    getPreviousRatingValue(currentValue) {\n        return currentValue === 1 ? 5 : currentValue - 1;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        focusFirstTabbable(this.el);\n    }\n    static get is() { return \"calcite-rating\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"rating.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"rating.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"average\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies a cumulative average from previous ratings to display.\"\n                },\n                \"attribute\": \"average\",\n                \"reflect\": true\n            },\n            \"count\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the number of previous ratings to display.\"\n                },\n                \"attribute\": \"count\",\n                \"reflect\": true\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"RatingMessages\",\n                    \"resolved\": \"{ rating: string; stars: string; }\",\n                    \"references\": {\n                        \"RatingMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/rating/t9n\",\n                            \"id\": \"src/components/rating/assets/rating/t9n/index.d.ts::RatingMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only\"\n                }\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<RatingMessages>\",\n                    \"resolved\": \"{ rating?: string; stars?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"RatingMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/rating/t9n\",\n                            \"id\": \"src/components/rating/assets/rating/t9n/index.d.ts::RatingMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"readOnly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component's value can be read, but cannot be modified.\"\n                },\n                \"attribute\": \"read-only\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"showChip\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, and if available, displays the `average` and/or `count` data summary in a `calcite-chip`.\"\n                },\n                \"attribute\": \"show-chip\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"number\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"effectiveLocale\": {},\n            \"defaultMessages\": {},\n            \"hoverValue\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteRatingChange\",\n                \"name\": \"calciteRatingChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component's value changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"handleValueUpdate\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n}\n//# sourceMappingURL=rating.js.map\n"],"mappings":"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"}