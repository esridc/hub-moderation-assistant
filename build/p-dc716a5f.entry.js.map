{"version":3,"names":["CSS","container","radioButtonCss","RadioButton","constructor","hostRef","this","selectItem","items","selectedIndex","click","queryButtons","Array","from","rootNode","querySelectorAll","filter","radioButton","name","isFocusable","radioButtons","firstFocusable","find","disabled","checked","el","check","focused","setFocus","uncheckAllRadioButtonsInGroup","calciteRadioButtonChange","emit","clickHandler","setContainerEl","containerEl","handleKeyDown","event","keys","key","indexOf","preventDefault","adjustedKey","getElementDir","currentIndex","radioButtonsLength","length","some","item","index","getRoundRobinIndex","Math","max","onContainerBlur","calciteInternalRadioButtonBlur","onContainerFocus","calciteInternalRadioButtonFocus","form","undefined","guid","hovered","label","required","scale","value","handleHiddenChange","updateTabIndexOfOtherRadioButtonsInGroup","checkedChanged","newChecked","uncheckOtherRadioButtonsInGroup","calciteInternalRadioButtonCheckedChange","disabledChanged","nameChanged","checkLastRadioButton","async","componentFocusable","focusElement","syncHiddenFormInput","input","type","onLabelClick","hidden","currentTarget","for","querySelector","checkedRadioButtons","lastCheckedRadioButton","checkedRadioButton","forEach","emitCheckedChange","otherRadioButtons","otherRadioButton","otherFocusableRadioButtons","forceUpdate","getTabIndex","pointerEnterHandler","pointerLeaveHandler","connectedCallback","getRootNode","id","connectInteractive","connectLabel","connectForm","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","componentDidRender","updateHostInteraction","render","tabIndex","h","Host","onClick","onKeyDown","InteractiveContainer","toAriaBoolean","getLabelText","class","onBlur","onFocus","ref","role","HiddenFormInputSlot","component"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/radio-button/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/radio-button/radio-button.css?tag=calcite-radio-button&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/radio-button/radio-button.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nexport const CSS = {\n    container: \"container\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n:host {\n  display: block;\n  cursor: pointer;\n}\n:host .container {\n  position: relative;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n:host .radio {\n  cursor: pointer;\n  border-radius: 9999px;\n  background-color: var(--calcite-color-foreground-1);\n  outline-color: transparent;\n  transition: background-color, block-size, border-color, box-shadow, color, inset-block-end, inset-block-start, inset-inline-end, inset-inline-start inset-size, opacity, outline-color, transform var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  box-shadow: inset 0 0 0 1px var(--calcite-color-border-input);\n}\n\n:host([hovered]) .radio,\n:host(:not([checked])[focused]:not([disabled])) .radio {\n  box-shadow: inset 0 0 0 2px var(--calcite-color-brand);\n}\n\n:host([focused]) .radio {\n  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));\n  outline-offset: calc(\n            2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-offset-invert-focus),\n                1\n              )\n            )\n          );\n}\n\n:host([disabled]) .radio {\n  cursor: default;\n  opacity: var(--calcite-opacity-disabled);\n}\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host([hovered][disabled]) .radio {\n  box-shadow: inset 0 0 0 1px var(--calcite-color-border-input);\n}\n\n:host([scale=s]) {\n  --calcite-radio-size: var(--calcite-font-size--2);\n}\n\n:host([scale=m]) {\n  --calcite-radio-size: var(--calcite-font-size--1);\n}\n\n:host([scale=l]) {\n  --calcite-radio-size: var(--calcite-font-size-0);\n}\n\n.radio {\n  block-size: var(--calcite-radio-size);\n  max-inline-size: var(--calcite-radio-size);\n  min-inline-size: var(--calcite-radio-size);\n}\n\n:host([scale=s][checked]) .radio,\n:host([hovered][scale=s][checked][disabled]) .radio {\n  box-shadow: inset 0 0 0 4px var(--calcite-color-brand);\n}\n\n:host([scale=s][focused][checked]:not([disabled])) .radio {\n  box-shadow: inset 0 0 0 4px var(--calcite-color-brand), 0 0 0 2px var(--calcite-color-foreground-1);\n}\n\n:host([scale=m][checked]) .radio,\n:host([hovered][scale=m][checked][disabled]) .radio {\n  box-shadow: inset 0 0 0 5px var(--calcite-color-brand);\n}\n\n:host([scale=m][focused][checked]:not([disabled])) .radio {\n  box-shadow: inset 0 0 0 5px var(--calcite-color-brand), 0 0 0 2px var(--calcite-color-foreground-1);\n}\n\n:host([scale=l][checked]) .radio,\n:host([hovered][scale=l][checked][disabled]) .radio {\n  box-shadow: inset 0 0 0 6px var(--calcite-color-brand);\n}\n\n:host([scale=l][focused][checked]:not([disabled])) .radio {\n  box-shadow: inset 0 0 0 6px var(--calcite-color-brand), 0 0 0 2px var(--calcite-color-foreground-1);\n}\n\n@media (forced-colors: active) {\n  :host([checked]) .radio::after,\n  :host([checked][disabled]) .radio::after {\n    content: \"\";\n    inline-size: var(--calcite-radio-size);\n    block-size: var(--calcite-radio-size);\n    background-color: windowText;\n    display: block;\n  }\n}\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { forceUpdate, h, Host, } from \"@stencil/core\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { connectForm, disconnectForm, HiddenFormInputSlot, } from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { CSS } from \"./resources\";\nexport class RadioButton {\n    constructor() {\n        this.selectItem = (items, selectedIndex) => {\n            items[selectedIndex].click();\n        };\n        this.queryButtons = () => {\n            return Array.from(this.rootNode.querySelectorAll(\"calcite-radio-button:not([hidden])\")).filter((radioButton) => radioButton.name === this.name);\n        };\n        this.isFocusable = () => {\n            const radioButtons = this.queryButtons();\n            const firstFocusable = radioButtons.find((radioButton) => !radioButton.disabled);\n            const checked = radioButtons.find((radioButton) => radioButton.checked);\n            return firstFocusable === this.el && !checked;\n        };\n        this.check = () => {\n            if (this.disabled) {\n                return;\n            }\n            this.focused = true;\n            this.setFocus();\n            if (this.checked) {\n                return;\n            }\n            this.uncheckAllRadioButtonsInGroup();\n            this.checked = true;\n            this.calciteRadioButtonChange.emit();\n        };\n        this.clickHandler = () => {\n            if (this.disabled) {\n                return;\n            }\n            this.check();\n        };\n        this.setContainerEl = (el) => {\n            this.containerEl = el;\n        };\n        this.handleKeyDown = (event) => {\n            const keys = [\"ArrowLeft\", \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \" \"];\n            const { key } = event;\n            const { el } = this;\n            if (keys.indexOf(key) === -1) {\n                return;\n            }\n            if (key === \" \") {\n                this.check();\n                event.preventDefault();\n                return;\n            }\n            let adjustedKey = key;\n            if (getElementDir(el) === \"rtl\") {\n                if (key === \"ArrowRight\") {\n                    adjustedKey = \"ArrowLeft\";\n                }\n                if (key === \"ArrowLeft\") {\n                    adjustedKey = \"ArrowRight\";\n                }\n            }\n            const radioButtons = Array.from(this.rootNode.querySelectorAll(\"calcite-radio-button:not([hidden])\")).filter((radioButton) => radioButton.name === this.name);\n            let currentIndex = 0;\n            const radioButtonsLength = radioButtons.length;\n            radioButtons.some((item, index) => {\n                if (item.checked) {\n                    currentIndex = index;\n                    return true;\n                }\n            });\n            switch (adjustedKey) {\n                case \"ArrowLeft\":\n                case \"ArrowUp\":\n                    event.preventDefault();\n                    this.selectItem(radioButtons, getRoundRobinIndex(Math.max(currentIndex - 1, -1), radioButtonsLength));\n                    return;\n                case \"ArrowRight\":\n                case \"ArrowDown\":\n                    event.preventDefault();\n                    this.selectItem(radioButtons, getRoundRobinIndex(currentIndex + 1, radioButtonsLength));\n                    return;\n                default:\n                    return;\n            }\n        };\n        this.onContainerBlur = () => {\n            this.focused = false;\n            this.calciteInternalRadioButtonBlur.emit();\n        };\n        this.onContainerFocus = () => {\n            if (!this.disabled) {\n                this.focused = true;\n                this.calciteInternalRadioButtonFocus.emit();\n            }\n        };\n        this.checked = false;\n        this.disabled = false;\n        this.focused = false;\n        this.form = undefined;\n        this.guid = undefined;\n        this.hovered = false;\n        this.label = undefined;\n        this.name = undefined;\n        this.required = false;\n        this.scale = \"m\";\n        this.value = undefined;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Global attributes\n    //\n    //--------------------------------------------------------------------------\n    handleHiddenChange() {\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    checkedChanged(newChecked) {\n        if (newChecked) {\n            this.uncheckOtherRadioButtonsInGroup();\n        }\n        this.calciteInternalRadioButtonCheckedChange.emit();\n    }\n    disabledChanged() {\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    nameChanged() {\n        this.checkLastRadioButton();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component. */\n    async setFocus() {\n        await componentFocusable(this);\n        if (!this.disabled) {\n            focusElement(this.containerEl);\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    syncHiddenFormInput(input) {\n        input.type = \"radio\";\n    }\n    onLabelClick(event) {\n        if (this.disabled || this.el.hidden) {\n            return;\n        }\n        const label = event.currentTarget;\n        const radioButton = label.for\n            ? this.rootNode.querySelector(`calcite-radio-button[id=\"${label.for}\"]`)\n            : label.querySelector(`calcite-radio-button[name=\"${this.name}\"]`);\n        if (!radioButton) {\n            return;\n        }\n        radioButton.focused = true;\n        this.setFocus();\n        if (radioButton.checked) {\n            return;\n        }\n        this.uncheckOtherRadioButtonsInGroup();\n        radioButton.checked = true;\n        this.calciteRadioButtonChange.emit();\n    }\n    checkLastRadioButton() {\n        const radioButtons = this.queryButtons();\n        const checkedRadioButtons = radioButtons.filter((radioButton) => radioButton.checked);\n        if (checkedRadioButtons?.length > 1) {\n            const lastCheckedRadioButton = checkedRadioButtons[checkedRadioButtons.length - 1];\n            checkedRadioButtons\n                .filter((checkedRadioButton) => checkedRadioButton !== lastCheckedRadioButton)\n                .forEach((checkedRadioButton) => {\n                checkedRadioButton.checked = false;\n                checkedRadioButton.emitCheckedChange();\n            });\n        }\n    }\n    /** @internal */\n    async emitCheckedChange() {\n        this.calciteInternalRadioButtonCheckedChange.emit();\n    }\n    uncheckAllRadioButtonsInGroup() {\n        const radioButtons = this.queryButtons();\n        radioButtons.forEach((radioButton) => {\n            if (radioButton.checked) {\n                radioButton.checked = false;\n                radioButton.focused = false;\n            }\n        });\n    }\n    uncheckOtherRadioButtonsInGroup() {\n        const radioButtons = this.queryButtons();\n        const otherRadioButtons = radioButtons.filter((radioButton) => radioButton.guid !== this.guid);\n        otherRadioButtons.forEach((otherRadioButton) => {\n            if (otherRadioButton.checked) {\n                otherRadioButton.checked = false;\n                otherRadioButton.focused = false;\n            }\n        });\n    }\n    updateTabIndexOfOtherRadioButtonsInGroup() {\n        const radioButtons = this.queryButtons();\n        const otherFocusableRadioButtons = radioButtons.filter((radioButton) => radioButton.guid !== this.guid && !radioButton.disabled);\n        otherFocusableRadioButtons.forEach((radioButton) => {\n            forceUpdate(radioButton);\n        });\n    }\n    getTabIndex() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return this.checked || this.isFocusable() ? 0 : -1;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    pointerEnterHandler() {\n        if (this.disabled) {\n            return;\n        }\n        this.hovered = true;\n    }\n    pointerLeaveHandler() {\n        if (this.disabled) {\n            return;\n        }\n        this.hovered = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        this.rootNode = this.el.getRootNode();\n        this.guid = this.el.id || `calcite-radio-button-${guid()}`;\n        if (this.name) {\n            this.checkLastRadioButton();\n        }\n        connectInteractive(this);\n        connectLabel(this);\n        connectForm(this);\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        if (this.focused && !this.disabled) {\n            this.setFocus();\n        }\n    }\n    disconnectedCallback() {\n        disconnectInteractive(this);\n        disconnectLabel(this);\n        disconnectForm(this);\n        this.updateTabIndexOfOtherRadioButtonsInGroup();\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        const tabIndex = this.getTabIndex();\n        return (h(Host, { key: 'b397c382efe2d05d99fcf8a0035011c5482ccfe4', onClick: this.clickHandler, onKeyDown: this.handleKeyDown }, h(InteractiveContainer, { key: '7112738487b0bcda82d1680c08f4026330b2cfde', disabled: this.disabled }, h(\"div\", { key: 'd3bedbbea15ac3e4aa5656f042a05939be2a8a68', \"aria-checked\": toAriaBoolean(this.checked), \"aria-label\": getLabelText(this), class: CSS.container, onBlur: this.onContainerBlur, onFocus: this.onContainerFocus, ref: this.setContainerEl, role: \"radio\", tabIndex: tabIndex }, h(\"div\", { key: 'eebf3f8fffde27fd58b04cddae6966da4a079c3d', class: \"radio\" })), h(HiddenFormInputSlot, { key: '07fad35c2b428ec42382e6ede6b846d824a524f9', component: this }))));\n    }\n    static get is() { return \"calcite-radio-button\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"radio-button.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"radio-button.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"checked\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component is checked.\"\n                },\n                \"attribute\": \"checked\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"focused\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"The focused state of the component.\"\n                },\n                \"attribute\": \"focused\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"form\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor form element, if any.\"\n                },\n                \"attribute\": \"form\",\n                \"reflect\": true\n            },\n            \"guid\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `id` of the component. When omitted, a globally unique identifier is used.\"\n                },\n                \"attribute\": \"guid\",\n                \"reflect\": true\n            },\n            \"hovered\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"The hovered state of the component.\"\n                },\n                \"attribute\": \"hovered\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the name of the component. Can be inherited from `calcite-radio-button-group`.\\n\\nRequired to pass the component's `value` on form submission.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": true\n            },\n            \"required\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component must have a value selected from the `calcite-radio-button-group` in order for the form to submit.\"\n                },\n                \"attribute\": \"required\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component inherited from the `calcite-radio-button-group`.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The component's value.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteInternalRadioButtonBlur\",\n                \"name\": \"calciteInternalRadioButtonBlur\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Fires when the radio button is blurred.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteRadioButtonChange\",\n                \"name\": \"calciteRadioButtonChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires only when the radio button is checked.  This behavior is identical to the native HTML input element.\\nSince this event does not fire when the radio button is unchecked, it's not recommended to attach a listener for this event\\ndirectly on the element, but instead either attach it to a node that contains all of the radio buttons in the group\\nor use the `calciteRadioButtonGroupChange` event if using this with `calcite-radio-button-group`.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInternalRadioButtonCheckedChange\",\n                \"name\": \"calciteInternalRadioButtonCheckedChange\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Fires when the checked property changes.  This is an internal event used for styling purposes only.\\nUse calciteRadioButtonChange or calciteRadioButtonGroupChange for responding to changes in the checked value for forms.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteInternalRadioButtonFocus\",\n                \"name\": \"calciteInternalRadioButtonFocus\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Fires when the radio button is focused.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component.\",\n                    \"tags\": []\n                }\n            },\n            \"emitCheckedChange\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"hidden\",\n                \"methodName\": \"handleHiddenChange\"\n            }, {\n                \"propName\": \"checked\",\n                \"methodName\": \"checkedChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }, {\n                \"propName\": \"name\",\n                \"methodName\": \"nameChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"pointerenter\",\n                \"method\": \"pointerEnterHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": true\n            }, {\n                \"name\": \"pointerleave\",\n                \"method\": \"pointerLeaveHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": true\n            }];\n    }\n}\n//# sourceMappingURL=radio-button.js.map\n"],"mappings":"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"}