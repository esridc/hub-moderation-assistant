{"version":3,"names":["menuCss","CalciteMenu","constructor","hostRef","this","menuItems","handleMenuSlotChange","event","slotChangeGetAssignedElements","setMenuItemLayout","layout","label","undefined","messageOverrides","messages","defaultMessages","effectiveLocale","handleGlobalAttributesChanged","forceUpdate","handleLayoutChange","value","onMessagesChange","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","async","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLocalized","disconnectMessages","componentFocusable","el","focus","calciteInternalNavMenuItemKeyEvent","target","submenuItems","detail","children","key","stopPropagation","focusElementInGroup","isSubmenuOpen","setFocus","length","focusParentElement","preventDefault","parentEl","parentElement","focusElement","open","items","forEach","item","getEffectiveRole","isTopLevelItem","topLevelMenuLayout","getAttribute","render","h","Host","role","onSlotchange","delegatesFocus","assetsDirs"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/menu/menu.css?tag=calcite-menu&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/menu/menu.js"],"sourcesContent":["/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:08 GMT\n */\n/**\n * Do not edit directly\n * Generated on Fri, 02 Aug 2024 20:03:06 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host {\n    display: flex\n}\n\nul {\n    margin: 0px;\n    display: inline-flex;\n    block-size: 100%;\n    align-items: center;\n    padding: 0px\n}\n\n:host([layout=vertical]) ul {\n    display: flex;\n    inline-size: 100%;\n    flex-direction: column\n}\n\n:host([hidden]) {\n    display: none\n}\n\n[hidden] {\n    display: none\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.11.1\n */\nimport { h, Host, forceUpdate, } from \"@stencil/core\";\nimport { focusElement, focusElementInGroup, slotChangeGetAssignedElements } from \"../../utils/dom\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages, } from \"../../utils/t9n\";\nexport class CalciteMenu {\n    constructor() {\n        this.menuItems = [];\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this.handleMenuSlotChange = (event) => {\n            this.menuItems = slotChangeGetAssignedElements(event);\n            this.setMenuItemLayout(this.menuItems, this.layout);\n        };\n        this.label = undefined;\n        this.layout = \"horizontal\";\n        this.messageOverrides = undefined;\n        this.messages = undefined;\n        this.defaultMessages = undefined;\n        this.effectiveLocale = \"\";\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Global attributes\n    //\n    //--------------------------------------------------------------------------\n    handleGlobalAttributesChanged() {\n        forceUpdate(this);\n        this.setMenuItemLayout(this.menuItems, this.layout);\n    }\n    handleLayoutChange(value) {\n        this.setMenuItemLayout(this.menuItems, value);\n    }\n    onMessagesChange() {\n        /* wired up by t9n util */\n    }\n    effectiveLocaleChange() {\n        updateMessages(this, this.effectiveLocale);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        connectLocalized(this);\n        connectMessages(this);\n    }\n    async componentWillLoad() {\n        setUpLoadableComponent(this);\n        await setUpMessages(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n    }\n    disconnectedCallback() {\n        disconnectLocalized(this);\n        disconnectMessages(this);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component's first focusable element. */\n    async setFocus() {\n        await componentFocusable(this);\n        this.el.focus();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    calciteInternalNavMenuItemKeyEvent(event) {\n        const target = event.target;\n        const submenuItems = event.detail.children;\n        const key = event.detail.event.key;\n        event.stopPropagation();\n        if (key === \"ArrowDown\") {\n            if (target.layout === \"vertical\") {\n                focusElementInGroup(this.menuItems, target, \"next\", false);\n            }\n            else {\n                if (event.detail.isSubmenuOpen) {\n                    submenuItems[0].setFocus();\n                }\n            }\n        }\n        else if (key === \"ArrowUp\") {\n            if (this.layout === \"vertical\") {\n                focusElementInGroup(this.menuItems, target, \"previous\", false);\n            }\n            else {\n                if (event.detail.isSubmenuOpen) {\n                    submenuItems[submenuItems.length - 1].setFocus();\n                }\n            }\n        }\n        else if (key === \"ArrowRight\") {\n            if (this.layout === \"horizontal\") {\n                focusElementInGroup(this.menuItems, target, \"next\", false);\n            }\n            else {\n                if (event.detail.isSubmenuOpen) {\n                    submenuItems[0].setFocus();\n                }\n            }\n        }\n        else if (key === \"ArrowLeft\") {\n            if (this.layout === \"horizontal\") {\n                focusElementInGroup(this.menuItems, target, \"previous\", false);\n            }\n            else {\n                if (event.detail.isSubmenuOpen) {\n                    this.focusParentElement(event.target);\n                }\n            }\n        }\n        else if (key === \"Escape\") {\n            this.focusParentElement(event.target);\n        }\n        event.preventDefault();\n    }\n    focusParentElement(el) {\n        const parentEl = el.parentElement;\n        if (parentEl) {\n            focusElement(parentEl);\n            parentEl.open = false;\n        }\n    }\n    setMenuItemLayout(items, layout) {\n        items.forEach((item) => {\n            item.layout = layout;\n            if (this.getEffectiveRole() === \"menubar\") {\n                item.isTopLevelItem = true;\n                item.topLevelMenuLayout = this.layout;\n            }\n        });\n    }\n    getEffectiveRole() {\n        return this.el.getAttribute(\"role\") || \"menubar\";\n    }\n    // --------------------------------------------------------------------------\n    //\n    //  Render Methods\n    //\n    // --------------------------------------------------------------------------\n    render() {\n        return (h(Host, { key: '5bff9c8fc088956853d8e6077806eec1faf4fe48' }, h(\"ul\", { key: 'ff23e84bc15aa95f5f177d7acd51991d20c6263e', \"aria-label\": this.label, role: this.getEffectiveRole() }, h(\"slot\", { key: '615c80c9ee00213f22d154601fd9b4e3447cb6b2', onSlotchange: this.handleMenuSlotChange }))));\n    }\n    static get is() { return \"calcite-menu\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get delegatesFocus() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"menu.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"menu.css\"]\n        };\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    static get properties() {\n        return {\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Accessible name for the component.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"layout\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Layout\",\n                    \"resolved\": \"\\\"horizontal\\\" | \\\"vertical\\\"\",\n                    \"references\": {\n                        \"Layout\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Layout\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the layout of the component.\"\n                },\n                \"attribute\": \"layout\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"horizontal\\\"\"\n            },\n            \"messageOverrides\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"Partial<MenuMessages>\",\n                    \"resolved\": \"{ more?: string; }\",\n                    \"references\": {\n                        \"Partial\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Partial\"\n                        },\n                        \"MenuMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/menu/t9n\",\n                            \"id\": \"src/components/menu/assets/menu/t9n/index.d.ts::MenuMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Use this property to override individual strings used by the component.\"\n                }\n            },\n            \"messages\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"MenuMessages\",\n                    \"resolved\": \"{ more: string; }\",\n                    \"references\": {\n                        \"MenuMessages\": {\n                            \"location\": \"import\",\n                            \"path\": \"./assets/menu/t9n\",\n                            \"id\": \"src/components/menu/assets/menu/t9n/index.d.ts::MenuMessages\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Made into a prop for testing purposes only.\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"defaultMessages\": {},\n            \"effectiveLocale\": {}\n        };\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first focusable element.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"role\",\n                \"methodName\": \"handleGlobalAttributesChanged\"\n            }, {\n                \"propName\": \"layout\",\n                \"methodName\": \"handleLayoutChange\"\n            }, {\n                \"propName\": \"messageOverrides\",\n                \"methodName\": \"onMessagesChange\"\n            }, {\n                \"propName\": \"effectiveLocale\",\n                \"methodName\": \"effectiveLocaleChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"calciteInternalMenuItemKeyEvent\",\n                \"method\": \"calciteInternalNavMenuItemKeyEvent\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=menu.js.map\n"],"mappings":"sXAAA,MAAMA,EAAU,0O,MCUHC,EAAW,MACpBC,YAAAC,G,UACIC,KAAKC,UAAY,GAMjBD,KAAKE,qBAAwBC,IACzBH,KAAKC,UAAYG,EAA8BD,GAC/CH,KAAKK,kBAAkBL,KAAKC,UAAWD,KAAKM,OAAO,EAEvDN,KAAKO,MAAQC,UACbR,KAAKM,OAAS,aACdN,KAAKS,iBAAmBD,UACxBR,KAAKU,SAAWF,UAChBR,KAAKW,gBAAkBH,UACvBR,KAAKY,gBAAkB,E,CAO3BC,gCACIC,EAAYd,MACZA,KAAKK,kBAAkBL,KAAKC,UAAWD,KAAKM,O,CAEhDS,mBAAmBC,GACfhB,KAAKK,kBAAkBL,KAAKC,UAAWe,E,CAE3CC,mB,CAGAC,wBACIC,EAAenB,KAAMA,KAAKY,gB,CAO9BQ,oBACIC,EAAiBrB,MACjBsB,EAAgBtB,K,CAEpBuB,0BACIC,EAAuBxB,YACjByB,EAAczB,K,CAExB0B,mBACIC,EAAmB3B,K,CAEvB4B,uBACIC,EAAoB7B,MACpB8B,EAAmB9B,K,CAQvBuB,uBACUQ,EAAmB/B,MACzBA,KAAKgC,GAAGC,O,CAOZC,mCAAmC/B,GAC/B,MAAMgC,EAAShC,EAAMgC,OACrB,MAAMC,EAAejC,EAAMkC,OAAOC,SAClC,MAAMC,EAAMpC,EAAMkC,OAAOlC,MAAMoC,IAC/BpC,EAAMqC,kBACN,GAAID,IAAQ,YAAa,CACrB,GAAIJ,EAAO7B,SAAW,WAAY,CAC9BmC,EAAoBzC,KAAKC,UAAWkC,EAAQ,OAAQ,M,KAEnD,CACD,GAAIhC,EAAMkC,OAAOK,cAAe,CAC5BN,EAAa,GAAGO,U,QAIvB,GAAIJ,IAAQ,UAAW,CACxB,GAAIvC,KAAKM,SAAW,WAAY,CAC5BmC,EAAoBzC,KAAKC,UAAWkC,EAAQ,WAAY,M,KAEvD,CACD,GAAIhC,EAAMkC,OAAOK,cAAe,CAC5BN,EAAaA,EAAaQ,OAAS,GAAGD,U,QAI7C,GAAIJ,IAAQ,aAAc,CAC3B,GAAIvC,KAAKM,SAAW,aAAc,CAC9BmC,EAAoBzC,KAAKC,UAAWkC,EAAQ,OAAQ,M,KAEnD,CACD,GAAIhC,EAAMkC,OAAOK,cAAe,CAC5BN,EAAa,GAAGO,U,QAIvB,GAAIJ,IAAQ,YAAa,CAC1B,GAAIvC,KAAKM,SAAW,aAAc,CAC9BmC,EAAoBzC,KAAKC,UAAWkC,EAAQ,WAAY,M,KAEvD,CACD,GAAIhC,EAAMkC,OAAOK,cAAe,CAC5B1C,KAAK6C,mBAAmB1C,EAAMgC,O,QAIrC,GAAII,IAAQ,SAAU,CACvBvC,KAAK6C,mBAAmB1C,EAAMgC,O,CAElChC,EAAM2C,gB,CAEVD,mBAAmBb,GACf,MAAMe,EAAWf,EAAGgB,cACpB,GAAID,EAAU,CACVE,EAAaF,GACbA,EAASG,KAAO,K,EAGxB7C,kBAAkB8C,EAAO7C,GACrB6C,EAAMC,SAASC,IACXA,EAAK/C,OAASA,EACd,GAAIN,KAAKsD,qBAAuB,UAAW,CACvCD,EAAKE,eAAiB,KACtBF,EAAKG,mBAAqBxD,KAAKM,M,KAI3CgD,mBACI,OAAOtD,KAAKgC,GAAGyB,aAAa,SAAW,S,CAO3CC,SACI,OAAQC,EAAEC,EAAM,CAAErB,IAAK,4CAA8CoB,EAAE,KAAM,CAAEpB,IAAK,2CAA4C,aAAcvC,KAAKO,MAAOsD,KAAM7D,KAAKsD,oBAAsBK,EAAE,OAAQ,CAAEpB,IAAK,2CAA4CuB,aAAc9D,KAAKE,wB,CAIpQ6D,4BAAmB,OAAO,IAAK,CAW/BC,wBAAe,MAAO,CAAC,SAAU,C"}