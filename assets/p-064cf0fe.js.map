{"version":3,"names":["colorName","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","isArrayish","obj","Array","isArray","length","splice","Function","Object","getOwnPropertyDescriptor","constructor","name","require$$0","concat","prototype","slice","swizzle","simpleSwizzleModule","args","results","i","len","arg","call","push","wrap","fn","arguments","colorNames","require$$1","hasOwnProperty","reverseNames","create","cs","colorStringModule","to","get","string","prefix","substring","toLowerCase","val","model","hsl","hwb","rgb","value","abbr","hex","rgba","per","keyword","match","hexAlpha","i2","parseInt","parseFloat","Math","round","clamp","alpha","h","s","l","a","isNaN","w","b","hexDouble","percent","r","g","hsla","hwba","num","min","max","str","toString","toUpperCase","cssKeywords","reverseKeywords","key","keys","convert","channels","labels","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","conversions","Error","defineProperty","delta","rdif","gdif","bdif","v","diff","diffc","c","k","m","y","comparativeDistance","x","reversed","currentClosestDistance","Infinity","currentClosestKeyword","distance","z","t2","t3","t1","smin","lmin","sv","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","saturation","ansi","color","mult","rem","integer","colorString","split","map","char","join","chroma","grayscale","hue","pure","mg","buildGraph","graph","models","parent","deriveBFS","fromModel","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","toModel","path","cur","conversion","route","wrapRaw","wrappedFn","arg0","undefined","wrapRounded","result","forEach","routes","routeModels","raw","colorConvert","skippedModels","hashedModelKeys","sort","limiters","Color","object","this","valpha","newArray","zeroArray","indexOf","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","self","percentString","array","unitArray","unitObject","roundToPlace","getset","maxfn","saturationl","lightness","saturationv","wblack","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","yiq","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","assertArray","roundTo","number","Number","toFixed","channel","modifier","CSS","colorField","colorFieldScope","colorMode","colorModeContainer","container","control","controlAndScope","controlSection","deleteColor","header","hexAndChannelsGroup","hexOptions","hueScope","hueSlider","opacityScope","opacitySlider","preview","previewAndSliders","saveColor","savedColor","savedColors","savedColorsButtons","savedColorsSection","scope","section","slider","sliders","splitSection","DEFAULT_COLOR","DEFAULT_STORAGE_KEY_PREFIX","RGB_LIMITS","HSV_LIMITS","HUE_LIMIT_CONSTRAINED","OPACITY_LIMITS","DIMENSIONS","height","width","thumb","radius","size","SCOPE_SIZE","hexChar","shorthandHex","longhandHex","shorthandHexWithAlpha","longhandHexWithAlpha","alphaToOpacity","opacityToAlpha","opacity","isValidHex","hasAlpha","isShorthandHex","isLonghandHex","evaluateHex","pattern","test","hexLength","hexPattern","normalizeHex","convertFromHexToHexa","startsWith","rgbToHex","hexToRGB","isShorthand","hexify","rChars","numToHex","gChars","bChars","alphaChars","padStart","normalizeAlpha","colorObject","normalized","normalizeColor","alphaColorObject","replace","first","second","third","fourth","enumify","CSSColorMode","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","ObjectColorMode","RGB","RGBA","HSL","HSLA","HSV","HSVA","parseMode","colorValue","hasChannels","every","colorEqual","value1","value2","alphaCompatible","mode","toAlphaMode","alphaMode","toNonAlphaMode","nonAlphaMode","getSliderWidth","activeDimensions","previewWidthOffset"],"sources":["../../node_modules/color-name/index.js","../../node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../../node_modules/simple-swizzle/index.js","../../node_modules/color-string/index.js","../../node_modules/color-convert/conversions.js","../../node_modules/color-convert/route.js","../../node_modules/color-convert/index.js","../../node_modules/color/index.js","src/components/color-picker/resources.ts","src/components/color-picker/utils.ts"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","import Color from \"color\";\n\nexport const CSS = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\",\n};\n\nexport const DEFAULT_COLOR = Color(\"#007AC2\");\nexport const DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\n\nexport const RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nexport const HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100,\n};\n\n// 0 and 360 represent the same value, so we limit the hue to 359\nexport const HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\n\nexport const OPACITY_LIMITS = {\n  min: 0,\n  max: 100,\n};\n\nexport const DIMENSIONS = {\n  s: {\n    slider: {\n      height: 12,\n      width: 104,\n    },\n    colorField: {\n      height: 80,\n      width: 160,\n    },\n    thumb: {\n      radius: 7,\n    },\n    preview: {\n      size: 20,\n    },\n  },\n  m: {\n    slider: {\n      height: 12,\n      width: 204,\n    },\n    colorField: {\n      height: 150,\n      width: 272,\n    },\n    thumb: {\n      radius: 7,\n    },\n    preview: {\n      size: 24,\n    },\n  },\n  l: {\n    slider: {\n      height: 12,\n      width: 384,\n    },\n    colorField: {\n      height: 200,\n      width: 464,\n    },\n    thumb: {\n      radius: 7,\n    },\n    preview: {\n      size: 32,\n    },\n  },\n};\n\nexport const SCOPE_SIZE = 1;\n","import Color from \"color\";\nimport { Scale } from \"../interfaces\";\nimport { ColorValue, HSLA, HSVA, RGB, RGBA } from \"./interfaces\";\nimport { DIMENSIONS } from \"./resources\";\n\nexport const hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\n\nexport const alphaToOpacity = (alpha: number): number => Number((alpha * 100).toFixed());\n\nexport const opacityToAlpha = (opacity: number): number => Number((opacity / 100).toFixed(2));\n\nexport function isValidHex(hex: string, hasAlpha = false): boolean {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\n\nexport function canConvertToHexa(hex: string): boolean {\n  const validHex = isValidHex(hex, false);\n  const validHexa = isValidHex(hex, true);\n  return !validHexa && validHex;\n}\n\nfunction evaluateHex(hex: string, length: number, pattern: RegExp): boolean {\n  if (!hex) {\n    return false;\n  }\n\n  return hex.length === length && pattern.test(hex);\n}\n\nexport function isShorthandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function isLonghandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function normalizeHex(hex: string, hasAlpha = false, convertFromHexToHexa = false): string {\n  hex = hex.toLowerCase();\n\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n\n  if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n\n  return hex;\n}\n\nexport function hexify(color: Color, hasAlpha = false): string {\n  return hasAlpha ? color.hexa() : color.hex();\n}\n\nexport function rgbToHex(color: RGB | RGBA): string {\n  const { r, g, b } = color;\n\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\n\nfunction numToHex(num: number): string {\n  return num.toString(16).padStart(2, \"0\");\n}\n\nexport function normalizeAlpha<T extends RGBA | HSVA | HSLA>(colorObject: ReturnType<Color[\"object\"]>): T {\n  const normalized = { ...colorObject, a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */ };\n  delete normalized.alpha;\n\n  return normalized as T;\n}\n\nexport function normalizeColor(alphaColorObject: RGBA | HSVA | HSLA): ReturnType<Color[\"object\"]> {\n  const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n  delete normalized.a;\n\n  return normalized;\n}\n\nexport function hexToRGB(hex: string, hasAlpha = false): RGB | RGBA {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n\n  hex = hex.replace(\"#\", \"\");\n\n  let r: number;\n  let g: number;\n  let b: number;\n  let a: number;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  } else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n\n  return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\n\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = <T extends { [index: string]: U }, U extends string>(x: T) => x;\ntype Enumify<T> = T[keyof T];\n\nexport const CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\",\n});\ntype CSSColorMode = Enumify<typeof CSSColorMode>;\n\nexport const ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\",\n});\ntype ObjectColorMode = Enumify<typeof ObjectColorMode>;\n\nexport type SupportedMode = CSSColorMode | ObjectColorMode;\n\nexport type Format = \"auto\" | SupportedMode;\n\nexport function parseMode(colorValue: ColorValue): SupportedMode | null {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n\n  return null;\n}\n\nfunction hasChannels(colorObject: Exclude<ColorValue, string> | null, ...channels: string[]): boolean {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\n\nexport function colorEqual(value1: Color | null, value2: Color | null): boolean {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\n\nexport function alphaCompatible(mode: SupportedMode): boolean {\n  return (\n    mode === CSSColorMode.HEXA ||\n    mode === CSSColorMode.RGBA_CSS ||\n    mode === CSSColorMode.HSLA_CSS ||\n    mode === ObjectColorMode.RGBA ||\n    mode === ObjectColorMode.HSLA ||\n    mode === ObjectColorMode.HSVA\n  );\n}\n\nexport function toAlphaMode(mode: SupportedMode): SupportedMode {\n  const alphaMode =\n    mode === CSSColorMode.HEX\n      ? CSSColorMode.HEXA\n      : mode === CSSColorMode.RGB_CSS\n        ? CSSColorMode.RGBA_CSS\n        : mode === CSSColorMode.HSL_CSS\n          ? CSSColorMode.HSLA_CSS\n          : mode === ObjectColorMode.RGB\n            ? ObjectColorMode.RGBA\n            : mode === ObjectColorMode.HSL\n              ? ObjectColorMode.HSLA\n              : mode === ObjectColorMode.HSV\n                ? ObjectColorMode.HSVA\n                : mode;\n\n  return alphaMode;\n}\n\nexport function toNonAlphaMode(mode: SupportedMode): SupportedMode {\n  const nonAlphaMode =\n    mode === CSSColorMode.HEXA\n      ? CSSColorMode.HEX\n      : mode === CSSColorMode.RGBA_CSS\n        ? CSSColorMode.RGB_CSS\n        : mode === CSSColorMode.HSLA_CSS\n          ? CSSColorMode.HSL_CSS\n          : mode === ObjectColorMode.RGBA\n            ? ObjectColorMode.RGB\n            : mode === ObjectColorMode.HSLA\n              ? ObjectColorMode.HSL\n              : mode === ObjectColorMode.HSVA\n                ? ObjectColorMode.HSV\n                : mode;\n\n  return nonAlphaMode;\n}\n\nexport function getSliderWidth(activeDimensions: (typeof DIMENSIONS)[Scale], hasAlpha: boolean): number {\n  const {\n    slider: { width },\n    preview,\n  } = activeDimensions;\n\n  if (hasAlpha) {\n    return width;\n  }\n\n  const previewWidthOffset = DIMENSIONS[\"l\"].preview.size - preview.size;\n\n  return width + previewWidthOffset;\n}\n"],"mappings":";;;;;uBAEAA,EAAiB,CAChBC,UAAa,CAAC,IAAK,IAAK,KACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,KAAQ,CAAC,EAAG,IAAK,KACjBC,WAAc,CAAC,IAAK,IAAK,KACzBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,EAAG,EAAG,GAChBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,KAAQ,CAAC,EAAG,EAAG,KACfC,WAAc,CAAC,IAAK,GAAI,KACxBC,MAAS,CAAC,IAAK,GAAI,IACnBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,WAAc,CAAC,IAAK,IAAK,GACzBC,UAAa,CAAC,IAAK,IAAK,IACxBC,MAAS,CAAC,IAAK,IAAK,IACpBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,GAAI,IACrBC,KAAQ,CAAC,EAAG,IAAK,KACjBC,SAAY,CAAC,EAAG,EAAG,KACnBC,SAAY,CAAC,EAAG,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,IAC5BC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,EAAG,IAAK,GACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,EAAG,KACxBC,eAAkB,CAAC,GAAI,IAAK,IAC5BC,WAAc,CAAC,IAAK,IAAK,GACzBC,WAAc,CAAC,IAAK,GAAI,KACxBC,QAAW,CAAC,IAAK,EAAG,GACpBC,WAAc,CAAC,IAAK,IAAK,KACzBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,cAAiB,CAAC,GAAI,GAAI,KAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,EAAG,IAAK,KAC1BC,WAAc,CAAC,IAAK,EAAG,KACvBC,SAAY,CAAC,IAAK,GAAI,KACtBC,YAAe,CAAC,EAAG,IAAK,KACxBC,QAAW,CAAC,IAAK,IAAK,KACtBC,QAAW,CAAC,IAAK,IAAK,KACtBC,WAAc,CAAC,GAAI,IAAK,KACxBC,UAAa,CAAC,IAAK,GAAI,IACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,YAAe,CAAC,GAAI,IAAK,IACzBC,QAAW,CAAC,IAAK,EAAG,KACpBC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,KAAQ,CAAC,IAAK,IAAK,GACnBC,UAAa,CAAC,IAAK,IAAK,IACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,MAAS,CAAC,EAAG,IAAK,GAClBC,YAAe,CAAC,IAAK,IAAK,IAC1BC,KAAQ,CAAC,IAAK,IAAK,KACnBC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,IACvBC,OAAU,CAAC,GAAI,EAAG,KAClBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,SAAY,CAAC,IAAK,IAAK,KACvBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,GACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,qBAAwB,CAAC,IAAK,IAAK,KACnCC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,cAAiB,CAAC,GAAI,IAAK,KAC3BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,IAAK,GACjBC,UAAa,CAAC,GAAI,IAAK,IACvBC,MAAS,CAAC,IAAK,IAAK,KACpBC,QAAW,CAAC,IAAK,EAAG,KACpBC,OAAU,CAAC,IAAK,EAAG,GACnBC,iBAAoB,CAAC,IAAK,IAAK,KAC/BC,WAAc,CAAC,EAAG,EAAG,KACrBC,aAAgB,CAAC,IAAK,GAAI,KAC1BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,GAAI,IAAK,KAC5BC,gBAAmB,CAAC,IAAK,IAAK,KAC9BC,kBAAqB,CAAC,EAAG,IAAK,KAC9BC,gBAAmB,CAAC,GAAI,IAAK,KAC7BC,gBAAmB,CAAC,IAAK,GAAI,KAC7BC,aAAgB,CAAC,GAAI,GAAI,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,SAAY,CAAC,IAAK,IAAK,KACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,EAAG,KACfC,QAAW,CAAC,IAAK,IAAK,KACtBC,MAAS,CAAC,IAAK,IAAK,GACpBC,UAAa,CAAC,IAAK,IAAK,IACxBC,OAAU,CAAC,IAAK,IAAK,GACrBC,UAAa,CAAC,IAAK,GAAI,GACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,KACxBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,IACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,EAAG,KACnBC,cAAiB,CAAC,IAAK,GAAI,KAC3BC,IAAO,CAAC,IAAK,EAAG,GAChBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,YAAe,CAAC,IAAK,GAAI,IACzBC,OAAU,CAAC,IAAK,IAAK,KACrBC,WAAc,CAAC,IAAK,IAAK,IACzBC,SAAY,CAAC,GAAI,IAAK,IACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,OAAU,CAAC,IAAK,GAAI,IACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,YAAe,CAAC,EAAG,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,IAAO,CAAC,IAAK,IAAK,KAClBC,KAAQ,CAAC,EAAG,IAAK,KACjBC,QAAW,CAAC,IAAK,IAAK,KACtBC,OAAU,CAAC,IAAK,GAAI,IACpBC,UAAa,CAAC,GAAI,IAAK,KACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,IAAK,GACrBC,YAAe,CAAC,IAAK,IAAK,K,uBCtJ3BC,EAAiB,SAASA,EAAWC,GACpC,IAAKA,UAAcA,IAAQ,SAAU,CACpC,OAAO,KACT,CAEC,OAAOA,aAAeC,OAASA,MAAMC,QAAQF,IAC3CA,EAAIG,QAAU,IAAMH,EAAII,kBAAkBC,UACzCC,OAAOC,yBAAyBP,EAAMA,EAAIG,OAAS,IAAOH,EAAIQ,YAAYC,OAAS,SACvF,ECNA,IAAIV,EAAaW,EAEjB,IAAIC,EAASV,MAAMW,UAAUD,OAC7B,IAAIE,EAAQZ,MAAMW,UAAUC,MAE5B,IAAIC,EAAUC,UAAiB,SAASD,EAAQE,GAC/C,IAAIC,EAAU,GAEd,IAAK,IAAIC,EAAI,EAAGC,EAAMH,EAAKb,OAAQe,EAAIC,EAAKD,IAAK,CAChD,IAAIE,EAAMJ,EAAKE,GAEf,GAAInB,EAAWqB,GAAM,CAEpBH,EAAUN,EAAOU,KAAKJ,EAASJ,EAAMQ,KAAKD,GAC7C,KAAS,CACNH,EAAQK,KAAKF,EAChB,CACA,CAEC,OAAOH,CACR,EAEAH,EAAQS,KAAO,SAAUC,GACxB,OAAO,WACN,OAAOA,EAAGV,EAAQW,WACpB,CACA,EC3BA,IAAIC,EAAahB,EACjB,IAAII,EAAUa,UACd,IAAIC,EAAiBtB,OAAOsB,eAE5B,IAAIC,EAAevB,OAAOwB,OAAO,MAGjC,IAAK,IAAIrB,KAAQiB,EAAY,CAC5B,GAAIE,EAAeP,KAAKK,EAAYjB,GAAO,CAC1CoB,EAAaH,EAAWjB,IAASA,CACnC,CACA,CAEA,IAAIsB,EAAKC,UAAiB,CACzBC,GAAI,GACJC,IAAK,IAGNH,EAAGG,IAAM,SAAUC,GAClB,IAAIC,EAASD,EAAOE,UAAU,EAAG,GAAGC,cACpC,IAAIC,EACJ,IAAIC,EACJ,OAAQJ,GACP,IAAK,MACJG,EAAMR,EAAGG,IAAIO,IAAIN,GACjBK,EAAQ,MACR,MACD,IAAK,MACJD,EAAMR,EAAGG,IAAIQ,IAAIP,GACjBK,EAAQ,MACR,MACD,QACCD,EAAMR,EAAGG,IAAIS,IAAIR,GACjBK,EAAQ,MACR,MAGF,IAAKD,EAAK,CACT,OAAO,IACT,CAEC,MAAO,CAACC,MAAOA,EAAOI,MAAOL,EAC9B,EAEAR,EAAGG,IAAIS,IAAM,SAAUR,GACtB,IAAKA,EAAQ,CACZ,OAAO,IACT,CAEC,IAAIU,EAAO,sBACX,IAAIC,EAAM,kCACV,IAAIC,EAAO,+HACX,IAAIC,EAAM,uHACV,IAAIC,EAAU,UAEd,IAAIN,EAAM,CAAC,EAAG,EAAG,EAAG,GACpB,IAAIO,EACJ,IAAIhC,EACJ,IAAIiC,EAEJ,GAAID,EAAQf,EAAOe,MAAMJ,GAAM,CAC9BK,EAAWD,EAAM,GACjBA,EAAQA,EAAM,GAEd,IAAKhC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEvB,IAAIkC,EAAKlC,EAAI,EACbyB,EAAIzB,GAAKmC,SAASH,EAAMrC,MAAMuC,EAAIA,EAAK,GAAI,GAC9C,CAEE,GAAID,EAAU,CACbR,EAAI,GAAKU,SAASF,EAAU,IAAM,GACrC,CACA,MAAQ,GAAID,EAAQf,EAAOe,MAAML,GAAO,CACtCK,EAAQA,EAAM,GACdC,EAAWD,EAAM,GAEjB,IAAKhC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvByB,EAAIzB,GAAKmC,SAASH,EAAMhC,GAAKgC,EAAMhC,GAAI,GAC1C,CAEE,GAAIiC,EAAU,CACbR,EAAI,GAAKU,SAASF,EAAWA,EAAU,IAAM,GAChD,CACA,MAAQ,GAAID,EAAQf,EAAOe,MAAMH,GAAO,CACtC,IAAK7B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvByB,EAAIzB,GAAKmC,SAASH,EAAMhC,EAAI,GAAI,EACnC,CAEE,GAAIgC,EAAM,GAAI,CACb,GAAIA,EAAM,GAAI,CACbP,EAAI,GAAKW,WAAWJ,EAAM,IAAM,GACpC,KAAU,CACNP,EAAI,GAAKW,WAAWJ,EAAM,GAC9B,CACA,CACA,MAAQ,GAAIA,EAAQf,EAAOe,MAAMF,GAAM,CACrC,IAAK9B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvByB,EAAIzB,GAAKqC,KAAKC,MAAMF,WAAWJ,EAAMhC,EAAI,IAAM,KAClD,CAEE,GAAIgC,EAAM,GAAI,CACb,GAAIA,EAAM,GAAI,CACbP,EAAI,GAAKW,WAAWJ,EAAM,IAAM,GACpC,KAAU,CACNP,EAAI,GAAKW,WAAWJ,EAAM,GAC9B,CACA,CACA,MAAQ,GAAIA,EAAQf,EAAOe,MAAMD,GAAU,CACzC,GAAIC,EAAM,KAAO,cAAe,CAC/B,MAAO,CAAC,EAAG,EAAG,EAAG,EACpB,CAEE,IAAKtB,EAAeP,KAAKK,EAAYwB,EAAM,IAAK,CAC/C,OAAO,IACV,CAEEP,EAAMjB,EAAWwB,EAAM,IACvBP,EAAI,GAAK,EAET,OAAOA,CACT,KAAQ,CACN,OAAO,IACT,CAEC,IAAKzB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvByB,EAAIzB,GAAKuC,EAAMd,EAAIzB,GAAI,EAAG,IAC5B,CACCyB,EAAI,GAAKc,EAAMd,EAAI,GAAI,EAAG,GAE1B,OAAOA,CACR,EAEAZ,EAAGG,IAAIO,IAAM,SAAUN,GACtB,IAAKA,EAAQ,CACZ,OAAO,IACT,CAEC,IAAIM,EAAM,+KACV,IAAIS,EAAQf,EAAOe,MAAMT,GAEzB,GAAIS,EAAO,CACV,IAAIQ,EAAQJ,WAAWJ,EAAM,IAC7B,IAAIS,GAAML,WAAWJ,EAAM,IAAM,IAAO,KAAO,IAC/C,IAAIU,EAAIH,EAAMH,WAAWJ,EAAM,IAAK,EAAG,KACvC,IAAIW,EAAIJ,EAAMH,WAAWJ,EAAM,IAAK,EAAG,KACvC,IAAIY,EAAIL,EAAMM,MAAML,GAAS,EAAIA,EAAO,EAAG,GAE3C,MAAO,CAACC,EAAGC,EAAGC,EAAGC,EACnB,CAEC,OAAO,IACR,EAEA/B,EAAGG,IAAIQ,IAAM,SAAUP,GACtB,IAAKA,EAAQ,CACZ,OAAO,IACT,CAEC,IAAIO,EAAM,sKACV,IAAIQ,EAAQf,EAAOe,MAAMR,GAEzB,GAAIQ,EAAO,CACV,IAAIQ,EAAQJ,WAAWJ,EAAM,IAC7B,IAAIS,GAAML,WAAWJ,EAAM,IAAM,IAAO,KAAO,IAC/C,IAAIc,EAAIP,EAAMH,WAAWJ,EAAM,IAAK,EAAG,KACvC,IAAIe,EAAIR,EAAMH,WAAWJ,EAAM,IAAK,EAAG,KACvC,IAAIY,EAAIL,EAAMM,MAAML,GAAS,EAAIA,EAAO,EAAG,GAC3C,MAAO,CAACC,EAAGK,EAAGC,EAAGH,EACnB,CAEC,OAAO,IACR,EAEA/B,EAAGE,GAAGa,IAAM,WACX,IAAIC,EAAOjC,EAAQW,WAEnB,MACC,IACAyC,EAAUnB,EAAK,IACfmB,EAAUnB,EAAK,IACfmB,EAAUnB,EAAK,KACdA,EAAK,GAAK,EACPmB,EAAUX,KAAKC,MAAMT,EAAK,GAAK,MAChC,GAEL,EAEAhB,EAAGE,GAAGU,IAAM,WACX,IAAII,EAAOjC,EAAQW,WAEnB,OAAOsB,EAAK5C,OAAS,GAAK4C,EAAK,KAAO,EACnC,OAASQ,KAAKC,MAAMT,EAAK,IAAM,KAAOQ,KAAKC,MAAMT,EAAK,IAAM,KAAOQ,KAAKC,MAAMT,EAAK,IAAM,IACzF,QAAUQ,KAAKC,MAAMT,EAAK,IAAM,KAAOQ,KAAKC,MAAMT,EAAK,IAAM,KAAOQ,KAAKC,MAAMT,EAAK,IAAM,KAAOA,EAAK,GAAK,GAC/G,EAEAhB,EAAGE,GAAGU,IAAIwB,QAAU,WACnB,IAAIpB,EAAOjC,EAAQW,WAEnB,IAAI2C,EAAIb,KAAKC,MAAMT,EAAK,GAAK,IAAM,KACnC,IAAIsB,EAAId,KAAKC,MAAMT,EAAK,GAAK,IAAM,KACnC,IAAIkB,EAAIV,KAAKC,MAAMT,EAAK,GAAK,IAAM,KAEnC,OAAOA,EAAK5C,OAAS,GAAK4C,EAAK,KAAO,EACnC,OAASqB,EAAI,MAAQC,EAAI,MAAQJ,EAAI,KACrC,QAAUG,EAAI,MAAQC,EAAI,MAAQJ,EAAI,MAAQlB,EAAK,GAAK,GAC5D,EAEAhB,EAAGE,GAAGQ,IAAM,WACX,IAAI6B,EAAOxD,EAAQW,WACnB,OAAO6C,EAAKnE,OAAS,GAAKmE,EAAK,KAAO,EACnC,OAASA,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,KACtD,QAAUA,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,MAAQA,EAAK,GAAK,GAC7E,EAIAvC,EAAGE,GAAGS,IAAM,WACX,IAAI6B,EAAOzD,EAAQW,WAEnB,IAAIqC,EAAI,GACR,GAAIS,EAAKpE,QAAU,GAAKoE,EAAK,KAAO,EAAG,CACtCT,EAAI,KAAOS,EAAK,EAClB,CAEC,MAAO,OAASA,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,IAAMT,EAAI,GACxE,EAEA/B,EAAGE,GAAGgB,QAAU,SAAUN,GACzB,OAAOd,EAAac,EAAI9B,MAAM,EAAG,GAClC,EAGA,SAAS4C,EAAMe,EAAKC,EAAKC,GACxB,OAAOnB,KAAKkB,IAAIlB,KAAKmB,IAAID,EAAKD,GAAME,EACrC,CAEA,SAASR,EAAUM,GAClB,IAAIG,EAAMpB,KAAKC,MAAMgB,GAAKI,SAAS,IAAIC,cACvC,OAAQF,EAAIxE,OAAS,EAAK,IAAMwE,EAAMA,CACvC,CC/OA,MAAMG,EAAcpE,EAMpB,MAAMqE,EAAkB,GACxB,IAAK,MAAMC,KAAO1E,OAAO2E,KAAKH,GAAc,CAC3CC,EAAgBD,EAAYE,IAAQA,CACrC,CAEA,MAAME,EAAU,CACfvC,IAAK,CAACwC,SAAU,EAAGC,OAAQ,OAC3B3C,IAAK,CAAC0C,SAAU,EAAGC,OAAQ,OAC3BC,IAAK,CAACF,SAAU,EAAGC,OAAQ,OAC3B1C,IAAK,CAACyC,SAAU,EAAGC,OAAQ,OAC3BE,KAAM,CAACH,SAAU,EAAGC,OAAQ,QAC5BG,IAAK,CAACJ,SAAU,EAAGC,OAAQ,OAC3BI,IAAK,CAACL,SAAU,EAAGC,OAAQ,OAC3BK,IAAK,CAACN,SAAU,EAAGC,OAAQ,OAC3BtC,IAAK,CAACqC,SAAU,EAAGC,OAAQ,CAAC,QAC5BnC,QAAS,CAACkC,SAAU,EAAGC,OAAQ,CAAC,YAChCM,OAAQ,CAACP,SAAU,EAAGC,OAAQ,CAAC,WAC/BO,QAAS,CAACR,SAAU,EAAGC,OAAQ,CAAC,YAChCQ,IAAK,CAACT,SAAU,EAAGC,OAAQ,CAAC,IAAK,IAAK,MACtCS,MAAO,CAACV,SAAU,EAAGC,OAAQ,CAAC,MAAO,MAAO,QAC5CpL,KAAM,CAACmL,SAAU,EAAGC,OAAQ,CAAC,U,IAG9BU,EAAiBZ,EAGjB,IAAK,MAAM1C,KAASlC,OAAO2E,KAAKC,GAAU,CACzC,KAAM,aAAcA,EAAQ1C,IAAS,CACpC,MAAM,IAAIuD,MAAM,8BAAgCvD,EAClD,CAEC,KAAM,WAAY0C,EAAQ1C,IAAS,CAClC,MAAM,IAAIuD,MAAM,oCAAsCvD,EACxD,CAEC,GAAI0C,EAAQ1C,GAAO4C,OAAOjF,SAAW+E,EAAQ1C,GAAO2C,SAAU,CAC7D,MAAM,IAAIY,MAAM,sCAAwCvD,EAC1D,CAEC,MAAM2C,SAACA,EAAQC,OAAEA,GAAUF,EAAQ1C,UAC5B0C,EAAQ1C,GAAO2C,gBACfD,EAAQ1C,GAAO4C,OACtB9E,OAAO0F,eAAed,EAAQ1C,GAAQ,WAAY,CAACI,MAAOuC,IAC1D7E,OAAO0F,eAAed,EAAQ1C,GAAQ,SAAU,CAACI,MAAOwC,GACzD,CAEAF,EAAQvC,IAAIF,IAAM,SAAUE,GAC3B,MAAMyB,EAAIzB,EAAI,GAAK,IACnB,MAAM0B,EAAI1B,EAAI,GAAK,IACnB,MAAMsB,EAAItB,EAAI,GAAK,IACnB,MAAM8B,EAAMlB,KAAKkB,IAAIL,EAAGC,EAAGJ,GAC3B,MAAMS,EAAMnB,KAAKmB,IAAIN,EAAGC,EAAGJ,GAC3B,MAAMgC,EAAQvB,EAAMD,EACpB,IAAId,EACJ,IAAIC,EAEJ,GAAIc,IAAQD,EAAK,CAChBd,EAAI,CACN,MAAQ,GAAIS,IAAMM,EAAK,CACrBf,GAAKU,EAAIJ,GAAKgC,CAChB,MAAQ,GAAI5B,IAAMK,EAAK,CACrBf,EAAI,GAAKM,EAAIG,GAAK6B,CACpB,MAAQ,GAAIhC,IAAMS,EAAK,CACrBf,EAAI,GAAKS,EAAIC,GAAK4B,CACpB,CAECtC,EAAIJ,KAAKkB,IAAId,EAAI,GAAI,KAErB,GAAIA,EAAI,EAAG,CACVA,GAAK,GACP,CAEC,MAAME,GAAKY,EAAMC,GAAO,EAExB,GAAIA,IAAQD,EAAK,CAChBb,EAAI,CACN,MAAQ,GAAIC,GAAK,GAAK,CACpBD,EAAIqC,GAASvB,EAAMD,EACrB,KAAQ,CACNb,EAAIqC,GAAS,EAAIvB,EAAMD,EACzB,CAEC,MAAO,CAACd,EAAGC,EAAI,IAAKC,EAAI,IACzB,EAEAqB,EAAQvC,IAAI0C,IAAM,SAAU1C,GAC3B,IAAIuD,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIzC,EACJ,IAAIC,EAEJ,MAAMQ,EAAIzB,EAAI,GAAK,IACnB,MAAM0B,EAAI1B,EAAI,GAAK,IACnB,MAAMsB,EAAItB,EAAI,GAAK,IACnB,MAAM0D,EAAI9C,KAAKmB,IAAIN,EAAGC,EAAGJ,GACzB,MAAMqC,EAAOD,EAAI9C,KAAKkB,IAAIL,EAAGC,EAAGJ,GAChC,MAAMsC,EAAQ,SAAUC,GACvB,OAAQH,EAAIG,GAAK,EAAIF,EAAO,EAAI,CAClC,EAEC,GAAIA,IAAS,EAAG,CACf3C,EAAI,EACJC,EAAI,CACN,KAAQ,CACNA,EAAI0C,EAAOD,EACXH,EAAOK,EAAMnC,GACb+B,EAAOI,EAAMlC,GACb+B,EAAOG,EAAMtC,GAEb,GAAIG,IAAMiC,EAAG,CACZ1C,EAAIyC,EAAOD,CACd,MAAS,GAAI9B,IAAMgC,EAAG,CACnB1C,EAAK,EAAI,EAAKuC,EAAOE,CACxB,MAAS,GAAInC,IAAMoC,EAAG,CACnB1C,EAAK,EAAI,EAAKwC,EAAOD,CACxB,CAEE,GAAIvC,EAAI,EAAG,CACVA,GAAK,CACR,MAAS,GAAIA,EAAI,EAAG,CACjBA,GAAK,CACR,CACA,CAEC,MAAO,CACNA,EAAI,IACJC,EAAI,IACJyC,EAAI,IAEN,EAEAnB,EAAQvC,IAAID,IAAM,SAAUC,GAC3B,MAAMyB,EAAIzB,EAAI,GACd,MAAM0B,EAAI1B,EAAI,GACd,IAAIsB,EAAItB,EAAI,GACZ,MAAMgB,EAAIuB,EAAQvC,IAAIF,IAAIE,GAAK,GAC/B,MAAMqB,EAAI,EAAI,IAAMT,KAAKkB,IAAIL,EAAGb,KAAKkB,IAAIJ,EAAGJ,IAE5CA,EAAI,EAAI,EAAI,IAAMV,KAAKmB,IAAIN,EAAGb,KAAKmB,IAAIL,EAAGJ,IAE1C,MAAO,CAACN,EAAGK,EAAI,IAAKC,EAAI,IACzB,EAEAiB,EAAQvC,IAAI2C,KAAO,SAAU3C,GAC5B,MAAMyB,EAAIzB,EAAI,GAAK,IACnB,MAAM0B,EAAI1B,EAAI,GAAK,IACnB,MAAMsB,EAAItB,EAAI,GAAK,IAEnB,MAAM8D,EAAIlD,KAAKkB,IAAI,EAAIL,EAAG,EAAIC,EAAG,EAAIJ,GACrC,MAAMuC,GAAK,EAAIpC,EAAIqC,IAAM,EAAIA,IAAM,EACnC,MAAMC,GAAK,EAAIrC,EAAIoC,IAAM,EAAIA,IAAM,EACnC,MAAME,GAAK,EAAI1C,EAAIwC,IAAM,EAAIA,IAAM,EAEnC,MAAO,CAACD,EAAI,IAAKE,EAAI,IAAKC,EAAI,IAAKF,EAAI,IACxC,EAEA,SAASG,EAAoBC,EAAGF,GAI/B,OACGE,EAAE,GAAKF,EAAE,KAAO,GAChBE,EAAE,GAAKF,EAAE,KAAO,GAChBE,EAAE,GAAKF,EAAE,KAAO,CAEpB,CAEAzB,EAAQvC,IAAIM,QAAU,SAAUN,GAC/B,MAAMmE,EAAW/B,EAAgBpC,GACjC,GAAImE,EAAU,CACb,OAAOA,CACT,CAEC,IAAIC,EAAyBC,SAC7B,IAAIC,EAEJ,IAAK,MAAMhE,KAAW3C,OAAO2E,KAAKH,GAAc,CAC/C,MAAMlC,EAAQkC,EAAY7B,GAG1B,MAAMiE,EAAWN,EAAoBjE,EAAKC,GAG1C,GAAIsE,EAAWH,EAAwB,CACtCA,EAAyBG,EACzBD,EAAwBhE,CAC3B,CACA,CAEC,OAAOgE,CACR,EAEA/B,EAAQjC,QAAQN,IAAM,SAAUM,GAC/B,OAAO6B,EAAY7B,EACpB,EAEAiC,EAAQvC,IAAI4C,IAAM,SAAU5C,GAC3B,IAAIyB,EAAIzB,EAAI,GAAK,IACjB,IAAI0B,EAAI1B,EAAI,GAAK,IACjB,IAAIsB,EAAItB,EAAI,GAAK,IAGjByB,EAAIA,EAAI,SAAaA,EAAI,MAAS,QAAU,IAAQA,EAAI,MACxDC,EAAIA,EAAI,SAAaA,EAAI,MAAS,QAAU,IAAQA,EAAI,MACxDJ,EAAIA,EAAI,SAAaA,EAAI,MAAS,QAAU,IAAQA,EAAI,MAExD,MAAM4C,EAAKzC,EAAI,MAAWC,EAAI,MAAWJ,EAAI,MAC7C,MAAM0C,EAAKvC,EAAI,MAAWC,EAAI,MAAWJ,EAAI,MAC7C,MAAMkD,EAAK/C,EAAI,MAAWC,EAAI,MAAWJ,EAAI,MAE7C,MAAO,CAAC4C,EAAI,IAAKF,EAAI,IAAKQ,EAAI,IAC/B,EAEAjC,EAAQvC,IAAI6C,IAAM,SAAU7C,GAC3B,MAAM4C,EAAML,EAAQvC,IAAI4C,IAAI5C,GAC5B,IAAIkE,EAAItB,EAAI,GACZ,IAAIoB,EAAIpB,EAAI,GACZ,IAAI4B,EAAI5B,EAAI,GAEZsB,GAAK,OACLF,GAAK,IACLQ,GAAK,QAELN,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDF,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDQ,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IAExD,MAAMtD,EAAK,IAAM8C,EAAK,GACtB,MAAM7C,EAAI,KAAO+C,EAAIF,GACrB,MAAM1C,EAAI,KAAO0C,EAAIQ,GAErB,MAAO,CAACtD,EAAGC,EAAGG,EACf,EAEAiB,EAAQzC,IAAIE,IAAM,SAAUF,GAC3B,MAAMkB,EAAIlB,EAAI,GAAK,IACnB,MAAMmB,EAAInB,EAAI,GAAK,IACnB,MAAMoB,EAAIpB,EAAI,GAAK,IACnB,IAAI2E,EACJ,IAAIC,EACJ,IAAI9E,EAEJ,GAAIqB,IAAM,EAAG,CACZrB,EAAMsB,EAAI,IACV,MAAO,CAACtB,EAAKA,EAAKA,EACpB,CAEC,GAAIsB,EAAI,GAAK,CACZuD,EAAKvD,GAAK,EAAID,EAChB,KAAQ,CACNwD,EAAKvD,EAAID,EAAIC,EAAID,CACnB,CAEC,MAAM0D,EAAK,EAAIzD,EAAIuD,EAEnB,MAAMzE,EAAM,CAAC,EAAG,EAAG,GACnB,IAAK,IAAIzB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3BmG,EAAK1D,EAAI,EAAI,IAAMzC,EAAI,GACvB,GAAImG,EAAK,EAAG,CACXA,GACH,CAEE,GAAIA,EAAK,EAAG,CACXA,GACH,CAEE,GAAI,EAAIA,EAAK,EAAG,CACf9E,EAAM+E,GAAMF,EAAKE,GAAM,EAAID,CAC9B,MAAS,GAAI,EAAIA,EAAK,EAAG,CACtB9E,EAAM6E,CACT,MAAS,GAAI,EAAIC,EAAK,EAAG,CACtB9E,EAAM+E,GAAMF,EAAKE,IAAO,EAAI,EAAID,GAAM,CACzC,KAAS,CACN9E,EAAM+E,CACT,CAEE3E,EAAIzB,GAAKqB,EAAM,GACjB,CAEC,OAAOI,CACR,EAEAuC,EAAQzC,IAAI4C,IAAM,SAAU5C,GAC3B,MAAMkB,EAAIlB,EAAI,GACd,IAAImB,EAAInB,EAAI,GAAK,IACjB,IAAIoB,EAAIpB,EAAI,GAAK,IACjB,IAAI8E,EAAO3D,EACX,MAAM4D,EAAOjE,KAAKmB,IAAIb,EAAG,KAEzBA,GAAK,EACLD,GAAMC,GAAK,EAAKA,EAAI,EAAIA,EACxB0D,GAAQC,GAAQ,EAAIA,EAAO,EAAIA,EAC/B,MAAMnB,GAAKxC,EAAID,GAAK,EACpB,MAAM6D,EAAK5D,IAAM,EAAK,EAAI0D,GAASC,EAAOD,GAAS,EAAI3D,GAAMC,EAAID,GAEjE,MAAO,CAACD,EAAG8D,EAAK,IAAKpB,EAAI,IAC1B,EAEAnB,EAAQG,IAAI1C,IAAM,SAAU0C,GAC3B,MAAM1B,EAAI0B,EAAI,GAAK,GACnB,MAAMzB,EAAIyB,EAAI,GAAK,IACnB,IAAIgB,EAAIhB,EAAI,GAAK,IACjB,MAAMqC,EAAKnE,KAAKoE,MAAMhE,GAAK,EAE3B,MAAMiE,EAAIjE,EAAIJ,KAAKoE,MAAMhE,GACzB,MAAMkE,EAAI,IAAMxB,GAAK,EAAIzC,GACzB,MAAMkE,EAAI,IAAMzB,GAAK,EAAKzC,EAAIgE,GAC9B,MAAMG,EAAI,IAAM1B,GAAK,EAAKzC,GAAK,EAAIgE,IACnCvB,GAAK,IAEL,OAAQqB,GACP,KAAK,EACJ,MAAO,CAACrB,EAAG0B,EAAGF,GACf,KAAK,EACJ,MAAO,CAACC,EAAGzB,EAAGwB,GACf,KAAK,EACJ,MAAO,CAACA,EAAGxB,EAAG0B,GACf,KAAK,EACJ,MAAO,CAACF,EAAGC,EAAGzB,GACf,KAAK,EACJ,MAAO,CAAC0B,EAAGF,EAAGxB,GACf,KAAK,EACJ,MAAO,CAACA,EAAGwB,EAAGC,GAEjB,EAEA5C,EAAQG,IAAI5C,IAAM,SAAU4C,GAC3B,MAAM1B,EAAI0B,EAAI,GACd,MAAMzB,EAAIyB,EAAI,GAAK,IACnB,MAAMgB,EAAIhB,EAAI,GAAK,IACnB,MAAM2C,EAAOzE,KAAKmB,IAAI2B,EAAG,KACzB,IAAI4B,EACJ,IAAIpE,EAEJA,GAAK,EAAID,GAAKyC,EACd,MAAMmB,GAAQ,EAAI5D,GAAKoE,EACvBC,EAAKrE,EAAIoE,EACTC,GAAOT,GAAQ,EAAKA,EAAO,EAAIA,EAC/BS,EAAKA,GAAM,EACXpE,GAAK,EAEL,MAAO,CAACF,EAAGsE,EAAK,IAAKpE,EAAI,IAC1B,EAGAqB,EAAQxC,IAAIC,IAAM,SAAUD,GAC3B,MAAMiB,EAAIjB,EAAI,GAAK,IACnB,IAAIwF,EAAKxF,EAAI,GAAK,IAClB,IAAIyF,EAAKzF,EAAI,GAAK,IAClB,MAAM0F,EAAQF,EAAKC,EACnB,IAAIP,EAGJ,GAAIQ,EAAQ,EAAG,CACdF,GAAME,EACND,GAAMC,CACR,CAEC,MAAMlH,EAAIqC,KAAKoE,MAAM,EAAIhE,GACzB,MAAM0C,EAAI,EAAI8B,EACdP,EAAI,EAAIjE,EAAIzC,EAEZ,IAAKA,EAAI,KAAU,EAAG,CACrB0G,EAAI,EAAIA,CACV,CAEC,MAAMS,EAAIH,EAAKN,GAAKvB,EAAI6B,GAExB,IAAI9D,EACJ,IAAIC,EACJ,IAAIJ,EAEJ,OAAQ/C,GACP,QACA,KAAK,EACL,KAAK,EAAGkD,EAAIiC,EAAIhC,EAAIgE,EAAIpE,EAAIiE,EAAI,MAChC,KAAK,EAAG9D,EAAIiE,EAAIhE,EAAIgC,EAAIpC,EAAIiE,EAAI,MAChC,KAAK,EAAG9D,EAAI8D,EAAI7D,EAAIgC,EAAIpC,EAAIoE,EAAG,MAC/B,KAAK,EAAGjE,EAAI8D,EAAI7D,EAAIgE,EAAIpE,EAAIoC,EAAG,MAC/B,KAAK,EAAGjC,EAAIiE,EAAIhE,EAAI6D,EAAIjE,EAAIoC,EAAG,MAC/B,KAAK,EAAGjC,EAAIiC,EAAIhC,EAAI6D,EAAIjE,EAAIoE,EAAG,MAIhC,MAAO,CAACjE,EAAI,IAAKC,EAAI,IAAKJ,EAAI,IAC/B,EAEAiB,EAAQI,KAAK3C,IAAM,SAAU2C,GAC5B,MAAMkB,EAAIlB,EAAK,GAAK,IACpB,MAAMoB,EAAIpB,EAAK,GAAK,IACpB,MAAMqB,EAAIrB,EAAK,GAAK,IACpB,MAAMmB,EAAInB,EAAK,GAAK,IAEpB,MAAMlB,EAAI,EAAIb,KAAKkB,IAAI,EAAG+B,GAAK,EAAIC,GAAKA,GACxC,MAAMpC,EAAI,EAAId,KAAKkB,IAAI,EAAGiC,GAAK,EAAID,GAAKA,GACxC,MAAMxC,EAAI,EAAIV,KAAKkB,IAAI,EAAGkC,GAAK,EAAIF,GAAKA,GAExC,MAAO,CAACrC,EAAI,IAAKC,EAAI,IAAKJ,EAAI,IAC/B,EAEAiB,EAAQK,IAAI5C,IAAM,SAAU4C,GAC3B,MAAMsB,EAAItB,EAAI,GAAK,IACnB,MAAMoB,EAAIpB,EAAI,GAAK,IACnB,MAAM4B,EAAI5B,EAAI,GAAK,IACnB,IAAInB,EACJ,IAAIC,EACJ,IAAIJ,EAEJG,EAAKyC,EAAI,OAAWF,GAAK,OAAWQ,GAAK,MACzC9C,EAAKwC,GAAK,MAAWF,EAAI,OAAWQ,EAAI,MACxClD,EAAK4C,EAAI,MAAWF,GAAK,KAAWQ,EAAI,MAGxC/C,EAAIA,EAAI,SACH,MAASA,IAAM,EAAM,KAAS,KAChCA,EAAI,MAEPC,EAAIA,EAAI,SACH,MAASA,IAAM,EAAM,KAAS,KAChCA,EAAI,MAEPJ,EAAIA,EAAI,SACH,MAASA,IAAM,EAAM,KAAS,KAChCA,EAAI,MAEPG,EAAIb,KAAKkB,IAAIlB,KAAKmB,IAAI,EAAGN,GAAI,GAC7BC,EAAId,KAAKkB,IAAIlB,KAAKmB,IAAI,EAAGL,GAAI,GAC7BJ,EAAIV,KAAKkB,IAAIlB,KAAKmB,IAAI,EAAGT,GAAI,GAE7B,MAAO,CAACG,EAAI,IAAKC,EAAI,IAAKJ,EAAI,IAC/B,EAEAiB,EAAQK,IAAIC,IAAM,SAAUD,GAC3B,IAAIsB,EAAItB,EAAI,GACZ,IAAIoB,EAAIpB,EAAI,GACZ,IAAI4B,EAAI5B,EAAI,GAEZsB,GAAK,OACLF,GAAK,IACLQ,GAAK,QAELN,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDF,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDQ,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IAExD,MAAMtD,EAAK,IAAM8C,EAAK,GACtB,MAAM7C,EAAI,KAAO+C,EAAIF,GACrB,MAAM1C,EAAI,KAAO0C,EAAIQ,GAErB,MAAO,CAACtD,EAAGC,EAAGG,EACf,EAEAiB,EAAQM,IAAID,IAAM,SAAUC,GAC3B,MAAM3B,EAAI2B,EAAI,GACd,MAAM1B,EAAI0B,EAAI,GACd,MAAMvB,EAAIuB,EAAI,GACd,IAAIqB,EACJ,IAAIF,EACJ,IAAIQ,EAEJR,GAAK9C,EAAI,IAAM,IACfgD,EAAI/C,EAAI,IAAM6C,EACdQ,EAAIR,EAAI1C,EAAI,IAEZ,MAAMqE,EAAK3B,GAAK,EAChB,MAAM4B,EAAK1B,GAAK,EAChB,MAAM2B,EAAKrB,GAAK,EAChBR,EAAI2B,EAAK,QAAWA,GAAM3B,EAAI,GAAK,KAAO,MAC1CE,EAAI0B,EAAK,QAAWA,GAAM1B,EAAI,GAAK,KAAO,MAC1CM,EAAIqB,EAAK,QAAWA,GAAMrB,EAAI,GAAK,KAAO,MAE1CN,GAAK,OACLF,GAAK,IACLQ,GAAK,QAEL,MAAO,CAACN,EAAGF,EAAGQ,EACf,EAEAjC,EAAQM,IAAIC,IAAM,SAAUD,GAC3B,MAAM3B,EAAI2B,EAAI,GACd,MAAM1B,EAAI0B,EAAI,GACd,MAAMvB,EAAIuB,EAAI,GACd,IAAI7B,EAEJ,MAAM8E,EAAKlF,KAAKmF,MAAMzE,EAAGH,GACzBH,EAAI8E,EAAK,IAAM,EAAIlF,KAAKoF,GAExB,GAAIhF,EAAI,EAAG,CACVA,GAAK,GACP,CAEC,MAAM6C,EAAIjD,KAAKqF,KAAK9E,EAAIA,EAAIG,EAAIA,GAEhC,MAAO,CAACJ,EAAG2C,EAAG7C,EACf,EAEAuB,EAAQO,IAAID,IAAM,SAAUC,GAC3B,MAAM5B,EAAI4B,EAAI,GACd,MAAMe,EAAIf,EAAI,GACd,MAAM9B,EAAI8B,EAAI,GAEd,MAAMgD,EAAK9E,EAAI,IAAM,EAAIJ,KAAKoF,GAC9B,MAAM7E,EAAI0C,EAAIjD,KAAKsF,IAAIJ,GACvB,MAAMxE,EAAIuC,EAAIjD,KAAKuF,IAAIL,GAEvB,MAAO,CAAC5E,EAAGC,EAAGG,EACf,EAEAiB,EAAQvC,IAAI+C,OAAS,SAAU1E,EAAM+H,EAAa,MACjD,MAAO3E,EAAGC,EAAGJ,GAAKjD,EAClB,IAAI4B,EAAQmG,IAAe,KAAO7D,EAAQvC,IAAI0C,IAAIrE,GAAM,GAAK+H,EAE7DnG,EAAQW,KAAKC,MAAMZ,EAAQ,IAE3B,GAAIA,IAAU,EAAG,CAChB,OAAO,EACT,CAEC,IAAIoG,EAAO,IACNzF,KAAKC,MAAMS,EAAI,MAAQ,EACxBV,KAAKC,MAAMa,EAAI,MAAQ,EACxBd,KAAKC,MAAMY,EAAI,MAElB,GAAIxB,IAAU,EAAG,CAChBoG,GAAQ,EACV,CAEC,OAAOA,CACR,EAEA9D,EAAQG,IAAIK,OAAS,SAAU1E,GAG9B,OAAOkE,EAAQvC,IAAI+C,OAAOR,EAAQG,IAAI1C,IAAI3B,GAAOA,EAAK,GACvD,EAEAkE,EAAQvC,IAAIgD,QAAU,SAAU3E,GAC/B,MAAMoD,EAAIpD,EAAK,GACf,MAAMqD,EAAIrD,EAAK,GACf,MAAMiD,EAAIjD,EAAK,GAIf,GAAIoD,IAAMC,GAAKA,IAAMJ,EAAG,CACvB,GAAIG,EAAI,EAAG,CACV,OAAO,EACV,CAEE,GAAIA,EAAI,IAAK,CACZ,OAAO,GACV,CAEE,OAAOb,KAAKC,OAAQY,EAAI,GAAK,IAAO,IAAM,GAC5C,CAEC,MAAM4E,EAAO,GACT,GAAKzF,KAAKC,MAAMY,EAAI,IAAM,GAC1B,EAAIb,KAAKC,MAAMa,EAAI,IAAM,GAC1Bd,KAAKC,MAAMS,EAAI,IAAM,GAExB,OAAO+E,CACR,EAEA9D,EAAQQ,OAAO/C,IAAM,SAAU3B,GAC9B,IAAIiI,EAAQjI,EAAO,GAGnB,GAAIiI,IAAU,GAAKA,IAAU,EAAG,CAC/B,GAAIjI,EAAO,GAAI,CACdiI,GAAS,GACZ,CAEEA,EAAQA,EAAQ,KAAO,IAEvB,MAAO,CAACA,EAAOA,EAAOA,EACxB,CAEC,MAAMC,MAAWlI,EAAO,IAAM,GAAK,GACnC,MAAMoD,GAAM6E,EAAQ,GAAKC,EAAQ,IACjC,MAAM7E,GAAO4E,GAAS,EAAK,GAAKC,EAAQ,IACxC,MAAMjF,GAAOgF,GAAS,EAAK,GAAKC,EAAQ,IAExC,MAAO,CAAC9E,EAAGC,EAAGJ,EACf,EAEAiB,EAAQS,QAAQhD,IAAM,SAAU3B,GAE/B,GAAIA,GAAQ,IAAK,CAChB,MAAMwF,GAAKxF,EAAO,KAAO,GAAK,EAC9B,MAAO,CAACwF,EAAGA,EAAGA,EAChB,CAECxF,GAAQ,GAER,IAAImI,EACJ,MAAM/E,EAAIb,KAAKoE,MAAM3G,EAAO,IAAM,EAAI,IACtC,MAAMqD,EAAId,KAAKoE,OAAOwB,EAAMnI,EAAO,IAAM,GAAK,EAAI,IAClD,MAAMiD,EAAKkF,EAAM,EAAK,EAAI,IAE1B,MAAO,CAAC/E,EAAGC,EAAGJ,EACf,EAEAiB,EAAQvC,IAAIG,IAAM,SAAU9B,GAC3B,MAAMoI,IAAY7F,KAAKC,MAAMxC,EAAK,IAAM,MAAS,MAC5CuC,KAAKC,MAAMxC,EAAK,IAAM,MAAS,IAChCuC,KAAKC,MAAMxC,EAAK,IAAM,KAE1B,MAAMmB,EAASiH,EAAQxE,SAAS,IAAIC,cACpC,MAAO,SAASxC,UAAUF,EAAOhC,QAAUgC,CAC5C,EAEA+C,EAAQpC,IAAIH,IAAM,SAAU3B,GAC3B,MAAMkC,EAAQlC,EAAK4D,SAAS,IAAI1B,MAAM,4BACtC,IAAKA,EAAO,CACX,MAAO,CAAC,EAAG,EAAG,EAChB,CAEC,IAAImG,EAAcnG,EAAM,GAExB,GAAIA,EAAM,GAAG/C,SAAW,EAAG,CAC1BkJ,EAAcA,EAAYC,MAAM,IAAIC,KAAIC,GAChCA,EAAOA,IACZC,KAAK,GACV,CAEC,MAAML,EAAU/F,SAASgG,EAAa,IACtC,MAAMjF,EAAKgF,GAAW,GAAM,IAC5B,MAAM/E,EAAK+E,GAAW,EAAK,IAC3B,MAAMnF,EAAImF,EAAU,IAEpB,MAAO,CAAChF,EAAGC,EAAGJ,EACf,EAEAiB,EAAQvC,IAAIiD,IAAM,SAAUjD,GAC3B,MAAMyB,EAAIzB,EAAI,GAAK,IACnB,MAAM0B,EAAI1B,EAAI,GAAK,IACnB,MAAMsB,EAAItB,EAAI,GAAK,IACnB,MAAM+B,EAAMnB,KAAKmB,IAAInB,KAAKmB,IAAIN,EAAGC,GAAIJ,GACrC,MAAMQ,EAAMlB,KAAKkB,IAAIlB,KAAKkB,IAAIL,EAAGC,GAAIJ,GACrC,MAAMyF,EAAUhF,EAAMD,EACtB,IAAIkF,EACJ,IAAIC,EAEJ,GAAIF,EAAS,EAAG,CACfC,EAAYlF,GAAO,EAAIiF,EACzB,KAAQ,CACNC,EAAY,CACd,CAEC,GAAID,GAAU,EAAG,CAChBE,EAAM,CACR,MACC,GAAIlF,IAAQN,EAAG,CACdwF,GAAQvF,EAAIJ,GAAKyF,EAAU,CAC7B,MACC,GAAIhF,IAAQL,EAAG,CACduF,EAAM,GAAK3F,EAAIG,GAAKsF,CACtB,KAAQ,CACNE,EAAM,GAAKxF,EAAIC,GAAKqF,CACtB,CAECE,GAAO,EACPA,GAAO,EAEP,MAAO,CAACA,EAAM,IAAKF,EAAS,IAAKC,EAAY,IAC9C,EAEAzE,EAAQzC,IAAImD,IAAM,SAAUnD,GAC3B,MAAMmB,EAAInB,EAAI,GAAK,IACnB,MAAMoB,EAAIpB,EAAI,GAAK,IAEnB,MAAM+D,EAAI3C,EAAI,GAAO,EAAMD,EAAIC,EAAM,EAAMD,GAAK,EAAMC,GAEtD,IAAI+D,EAAI,EACR,GAAIpB,EAAI,EAAK,CACZoB,GAAK/D,EAAI,GAAM2C,IAAM,EAAMA,EAC7B,CAEC,MAAO,CAAC/D,EAAI,GAAI+D,EAAI,IAAKoB,EAAI,IAC9B,EAEA1C,EAAQG,IAAIO,IAAM,SAAUP,GAC3B,MAAMzB,EAAIyB,EAAI,GAAK,IACnB,MAAMgB,EAAIhB,EAAI,GAAK,IAEnB,MAAMmB,EAAI5C,EAAIyC,EACd,IAAIuB,EAAI,EAER,GAAIpB,EAAI,EAAK,CACZoB,GAAKvB,EAAIG,IAAM,EAAIA,EACrB,CAEC,MAAO,CAACnB,EAAI,GAAImB,EAAI,IAAKoB,EAAI,IAC9B,EAEA1C,EAAQU,IAAIjD,IAAM,SAAUiD,GAC3B,MAAMjC,EAAIiC,EAAI,GAAK,IACnB,MAAMY,EAAIZ,EAAI,GAAK,IACnB,MAAMvB,EAAIuB,EAAI,GAAK,IAEnB,GAAIY,IAAM,EAAK,CACd,MAAO,CAACnC,EAAI,IAAKA,EAAI,IAAKA,EAAI,IAChC,CAEC,MAAMwF,EAAO,CAAC,EAAG,EAAG,GACpB,MAAMnC,EAAM/D,EAAI,EAAK,EACrB,MAAM0C,EAAIqB,EAAK,EACf,MAAM1D,EAAI,EAAIqC,EACd,IAAIyD,EAAK,EAGT,OAAQvG,KAAKoE,MAAMD,IAClB,KAAK,EACJmC,EAAK,GAAK,EAAGA,EAAK,GAAKxD,EAAGwD,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAK7F,EAAG6F,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAKxD,EAAG,MACxC,KAAK,EACJwD,EAAK,GAAK,EAAGA,EAAK,GAAK7F,EAAG6F,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAKxD,EAAGwD,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,QACCA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAK7F,EAItC8F,GAAM,EAAMtD,GAAKnC,EAEjB,MAAO,EACLmC,EAAIqD,EAAK,GAAKC,GAAM,KACpBtD,EAAIqD,EAAK,GAAKC,GAAM,KACpBtD,EAAIqD,EAAK,GAAKC,GAAM,IAEvB,EAEA5E,EAAQU,IAAIP,IAAM,SAAUO,GAC3B,MAAMY,EAAIZ,EAAI,GAAK,IACnB,MAAMvB,EAAIuB,EAAI,GAAK,IAEnB,MAAMS,EAAIG,EAAInC,GAAK,EAAMmC,GACzB,IAAIoB,EAAI,EAER,GAAIvB,EAAI,EAAK,CACZuB,EAAIpB,EAAIH,CACV,CAEC,MAAO,CAACT,EAAI,GAAIgC,EAAI,IAAKvB,EAAI,IAC9B,EAEAnB,EAAQU,IAAInD,IAAM,SAAUmD,GAC3B,MAAMY,EAAIZ,EAAI,GAAK,IACnB,MAAMvB,EAAIuB,EAAI,GAAK,IAEnB,MAAM/B,EAAIQ,GAAK,EAAMmC,GAAK,GAAMA,EAChC,IAAI5C,EAAI,EAER,GAAIC,EAAI,GAAOA,EAAI,GAAK,CACvBD,EAAI4C,GAAK,EAAI3C,EACf,MACC,GAAIA,GAAK,IAAOA,EAAI,EAAK,CACxBD,EAAI4C,GAAK,GAAK,EAAI3C,GACpB,CAEC,MAAO,CAAC+B,EAAI,GAAIhC,EAAI,IAAKC,EAAI,IAC9B,EAEAqB,EAAQU,IAAIlD,IAAM,SAAUkD,GAC3B,MAAMY,EAAIZ,EAAI,GAAK,IACnB,MAAMvB,EAAIuB,EAAI,GAAK,IACnB,MAAMS,EAAIG,EAAInC,GAAK,EAAMmC,GACzB,MAAO,CAACZ,EAAI,IAAKS,EAAIG,GAAK,KAAM,EAAIH,GAAK,IAC1C,EAEAnB,EAAQxC,IAAIkD,IAAM,SAAUlD,GAC3B,MAAMsB,EAAItB,EAAI,GAAK,IACnB,MAAMuB,EAAIvB,EAAI,GAAK,IACnB,MAAM2D,EAAI,EAAIpC,EACd,MAAMuC,EAAIH,EAAIrC,EACd,IAAIK,EAAI,EAER,GAAImC,EAAI,EAAG,CACVnC,GAAKgC,EAAIG,IAAM,EAAIA,EACrB,CAEC,MAAO,CAAC9D,EAAI,GAAI8D,EAAI,IAAKnC,EAAI,IAC9B,EAEAa,EAAQW,MAAMlD,IAAM,SAAUkD,GAC7B,MAAO,CAAEA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,IAClF,EAEAX,EAAQvC,IAAIkD,MAAQ,SAAUlD,GAC7B,MAAO,CAAEA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,MAC1E,EAEAuC,EAAQlL,KAAK2I,IAAM,SAAU3B,GAC5B,MAAO,CAACA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,IACnE,EAEAkE,EAAQlL,KAAKyI,IAAM,SAAUzB,GAC5B,MAAO,CAAC,EAAG,EAAGA,EAAK,GACpB,EAEAkE,EAAQlL,KAAKqL,IAAMH,EAAQlL,KAAKyI,IAEhCyC,EAAQlL,KAAK0I,IAAM,SAAU1I,GAC5B,MAAO,CAAC,EAAG,IAAKA,EAAK,GACtB,EAEAkL,EAAQlL,KAAKsL,KAAO,SAAUtL,GAC7B,MAAO,CAAC,EAAG,EAAG,EAAGA,EAAK,GACvB,EAEAkL,EAAQlL,KAAKwL,IAAM,SAAUxL,GAC5B,MAAO,CAACA,EAAK,GAAI,EAAG,EACrB,EAEAkL,EAAQlL,KAAK8I,IAAM,SAAU9I,GAC5B,MAAMuI,EAAMgB,KAAKC,MAAMxJ,EAAK,GAAK,IAAM,KAAO,IAC9C,MAAMoP,GAAW7G,GAAO,KAAOA,GAAO,GAAKA,EAE3C,MAAMJ,EAASiH,EAAQxE,SAAS,IAAIC,cACpC,MAAO,SAASxC,UAAUF,EAAOhC,QAAUgC,CAC5C,EAEA+C,EAAQvC,IAAI3I,KAAO,SAAU2I,GAC5B,MAAMJ,GAAOI,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EACzC,MAAO,CAACJ,EAAM,IAAM,IACrB,ECt0BA,MAAMuD,EAAcpF,EAapB,SAASqJ,IACR,MAAMC,EAAQ,GAEd,MAAMC,EAAS3J,OAAO2E,KAAKa,GAE3B,IAAK,IAAI3E,EAAM8I,EAAO9J,OAAQe,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAClD8I,EAAMC,EAAO/I,IAAM,CAGlBgG,UAAW,EACXgD,OAAQ,KAEX,CAEC,OAAOF,CACR,CAGA,SAASG,EAAUC,GAClB,MAAMJ,EAAQD,IACd,MAAMM,EAAQ,CAACD,GAEfJ,EAAMI,GAAWlD,SAAW,EAE5B,MAAOmD,EAAMlK,OAAQ,CACpB,MAAMmK,EAAUD,EAAME,MACtB,MAAMC,EAAYlK,OAAO2E,KAAKa,EAAYwE,IAE1C,IAAK,IAAInJ,EAAMqJ,EAAUrK,OAAQe,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CACrD,MAAMuJ,EAAWD,EAAUtJ,GAC3B,MAAMwJ,EAAOV,EAAMS,GAEnB,GAAIC,EAAKxD,YAAc,EAAG,CACzBwD,EAAKxD,SAAW8C,EAAMM,GAASpD,SAAW,EAC1CwD,EAAKR,OAASI,EACdD,EAAMM,QAAQF,EAClB,CACA,CACA,CAEC,OAAOT,CACR,CAEA,SAASY,EAAKC,EAAM5I,GACnB,OAAO,SAAUjB,GAChB,OAAOiB,EAAG4I,EAAK7J,GACjB,CACA,CAEA,SAAS8J,EAAeC,EAASf,GAChC,MAAMgB,EAAO,CAAChB,EAAMe,GAASb,OAAQa,GACrC,IAAIvJ,EAAKsE,EAAYkE,EAAMe,GAASb,QAAQa,GAE5C,IAAIE,EAAMjB,EAAMe,GAASb,OACzB,MAAOF,EAAMiB,GAAKf,OAAQ,CACzBc,EAAKL,QAAQX,EAAMiB,GAAKf,QACxB1I,EAAKoJ,EAAK9E,EAAYkE,EAAMiB,GAAKf,QAAQe,GAAMzJ,GAC/CyJ,EAAMjB,EAAMiB,GAAKf,MACnB,CAEC1I,EAAG0J,WAAaF,EAChB,OAAOxJ,CACR,C,IAEA2J,EAAiB,SAAUf,GAC1B,MAAMJ,EAAQG,EAAUC,GACxB,MAAMc,EAAa,GAEnB,MAAMjB,EAAS3J,OAAO2E,KAAK+E,GAC3B,IAAK,IAAI7I,EAAM8I,EAAO9J,OAAQe,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAClD,MAAM6J,EAAUd,EAAO/I,GACvB,MAAMwJ,EAAOV,EAAMe,GAEnB,GAAIL,EAAKR,SAAW,KAAM,CAEzB,QACH,CAEEgB,EAAWH,GAAWD,EAAeC,EAASf,EAChD,CAEC,OAAOkB,CACR,EC/FA,MAAMpF,EAAcpF,EACpB,MAAMyK,EAAQxJ,EAEd,MAAMuD,EAAU,GAEhB,MAAM+E,EAAS3J,OAAO2E,KAAKa,GAE3B,SAASsF,EAAQ5J,GAChB,MAAM6J,EAAY,YAAarK,GAC9B,MAAMsK,EAAOtK,EAAK,GAClB,GAAIsK,IAASC,WAAaD,IAAS,KAAM,CACxC,OAAOA,CACV,CAEE,GAAIA,EAAKnL,OAAS,EAAG,CACpBa,EAAOsK,CACV,CAEE,OAAO9J,EAAGR,EACZ,EAGC,GAAI,eAAgBQ,EAAI,CACvB6J,EAAUH,WAAa1J,EAAG0J,UAC5B,CAEC,OAAOG,CACR,CAEA,SAASG,EAAYhK,GACpB,MAAM6J,EAAY,YAAarK,GAC9B,MAAMsK,EAAOtK,EAAK,GAElB,GAAIsK,IAASC,WAAaD,IAAS,KAAM,CACxC,OAAOA,CACV,CAEE,GAAIA,EAAKnL,OAAS,EAAG,CACpBa,EAAOsK,CACV,CAEE,MAAMG,EAASjK,EAAGR,GAKlB,UAAWyK,IAAW,SAAU,CAC/B,IAAK,IAAItK,EAAMsK,EAAOtL,OAAQe,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAClDuK,EAAOvK,GAAKqC,KAAKC,MAAMiI,EAAOvK,GAClC,CACA,CAEE,OAAOuK,CACT,EAGC,GAAI,eAAgBjK,EAAI,CACvB6J,EAAUH,WAAa1J,EAAG0J,UAC5B,CAEC,OAAOG,CACR,CAEApB,EAAOyB,SAAQtB,IACdlF,EAAQkF,GAAa,GAErB9J,OAAO0F,eAAed,EAAQkF,GAAY,WAAY,CAACxH,MAAOkD,EAAYsE,GAAWjF,WACrF7E,OAAO0F,eAAed,EAAQkF,GAAY,SAAU,CAACxH,MAAOkD,EAAYsE,GAAWhF,SAEnF,MAAMuG,EAASR,EAAMf,GACrB,MAAMwB,EAActL,OAAO2E,KAAK0G,GAEhCC,EAAYF,SAAQX,IACnB,MAAMvJ,EAAKmK,EAAOZ,GAElB7F,EAAQkF,GAAWW,GAAWS,EAAYhK,GAC1C0D,EAAQkF,GAAWW,GAASc,IAAMT,EAAQ5J,EAAG,GAC5C,I,IAGHsK,EAAiB5G,EChFjB,MAAMmE,EAAc3I,UACpB,MAAMwE,EAAUvD,EAEhB,MAAMoK,EAAgB,CAErB,UAGA,OAGA,OAGD,MAAMC,EAAkB,GACxB,IAAK,MAAMxJ,KAASlC,OAAO2E,KAAKC,GAAU,CACzC8G,EAAgB,IAAI9G,EAAQ1C,GAAO4C,QAAQ6G,OAAOxC,KAAK,KAAOjH,CAC/D,CAEA,MAAM0J,EAAW,GAEjB,SAASC,EAAMC,EAAQ5J,GACtB,KAAM6J,gBAAgBF,GAAQ,CAC7B,OAAO,IAAIA,EAAMC,EAAQ5J,EAC3B,CAEC,GAAIA,GAASA,KAASuJ,EAAe,CACpCvJ,EAAQ,IACV,CAEC,GAAIA,KAAWA,KAAS0C,GAAU,CACjC,MAAM,IAAIa,MAAM,kBAAoBvD,EACtC,CAEC,IAAItB,EACJ,IAAIiE,EAEJ,GAAIiH,GAAU,KAAM,CACnBC,KAAK7J,MAAQ,MACb6J,KAAKpD,MAAQ,CAAC,EAAG,EAAG,GACpBoD,KAAKC,OAAS,CAChB,MAAQ,GAAIF,aAAkBD,EAAO,CACnCE,KAAK7J,MAAQ4J,EAAO5J,MACpB6J,KAAKpD,MAAQ,IAAImD,EAAOnD,OACxBoD,KAAKC,OAASF,EAAOE,MACvB,MAAQ,UAAWF,IAAW,SAAU,CACtC,MAAMX,EAASpC,EAAYnH,IAAIkK,GAC/B,GAAIX,IAAW,KAAM,CACpB,MAAM,IAAI1F,MAAM,sCAAwCqG,EAC3D,CAEEC,KAAK7J,MAAQiJ,EAAOjJ,MACpB2C,EAAWD,EAAQmH,KAAK7J,OAAO2C,SAC/BkH,KAAKpD,MAAQwC,EAAO7I,MAAM/B,MAAM,EAAGsE,GACnCkH,KAAKC,cAAgBb,EAAO7I,MAAMuC,KAAc,SAAWsG,EAAO7I,MAAMuC,GAAY,CACtF,MAAQ,GAAIiH,EAAOjM,OAAS,EAAG,CAC7BkM,KAAK7J,MAAQA,GAAS,MACtB2C,EAAWD,EAAQmH,KAAK7J,OAAO2C,SAC/B,MAAMoH,EAAWtM,MAAMW,UAAUC,MAAMQ,KAAK+K,EAAQ,EAAGjH,GACvDkH,KAAKpD,MAAQuD,EAAUD,EAAUpH,GACjCkH,KAAKC,cAAgBF,EAAOjH,KAAc,SAAWiH,EAAOjH,GAAY,CAC1E,MAAQ,UAAWiH,IAAW,SAAU,CAEtCC,KAAK7J,MAAQ,MACb6J,KAAKpD,MAAQ,CACXmD,GAAU,GAAM,IAChBA,GAAU,EAAK,IAChBA,EAAS,KAEVC,KAAKC,OAAS,CAChB,KAAQ,CACND,KAAKC,OAAS,EAEd,MAAMrH,EAAO3E,OAAO2E,KAAKmH,GACzB,GAAI,UAAWA,EAAQ,CACtBnH,EAAK7E,OAAO6E,EAAKwH,QAAQ,SAAU,GACnCJ,KAAKC,cAAgBF,EAAO1I,QAAU,SAAW0I,EAAO1I,MAAQ,CACnE,CAEE,MAAMgJ,EAAazH,EAAKgH,OAAOxC,KAAK,IACpC,KAAMiD,KAAcV,GAAkB,CACrC,MAAM,IAAIjG,MAAM,sCAAwC4G,KAAKC,UAAUR,GAC1E,CAEEC,KAAK7J,MAAQwJ,EAAgBU,GAE7B,MAAMtH,OAACA,GAAUF,EAAQmH,KAAK7J,OAC9B,MAAMyG,EAAQ,GACd,IAAK/H,EAAI,EAAGA,EAAIkE,EAAOjF,OAAQe,IAAK,CACnC+H,EAAM3H,KAAK8K,EAAOhH,EAAOlE,IAC5B,CAEEmL,KAAKpD,MAAQuD,EAAUvD,EACzB,CAGC,GAAIiD,EAASG,KAAK7J,OAAQ,CACzB2C,EAAWD,EAAQmH,KAAK7J,OAAO2C,SAC/B,IAAKjE,EAAI,EAAGA,EAAIiE,EAAUjE,IAAK,CAC9B,MAAM2L,EAAQX,EAASG,KAAK7J,OAAOtB,GACnC,GAAI2L,EAAO,CACVR,KAAKpD,MAAM/H,GAAK2L,EAAMR,KAAKpD,MAAM/H,GACrC,CACA,CACA,CAECmL,KAAKC,OAAS/I,KAAKmB,IAAI,EAAGnB,KAAKkB,IAAI,EAAG4H,KAAKC,SAE3C,GAAIhM,OAAOwM,OAAQ,CAClBxM,OAAOwM,OAAOT,KAChB,CACA,CAEAF,EAAMvL,UAAY,CACjB,QAAAgE,GACC,OAAOyH,KAAKlK,QACd,EAEC,MAAA4K,GACC,OAAOV,KAAKA,KAAK7J,QACnB,EAEC,MAAAL,CAAO6K,GACN,IAAIC,EAAOZ,KAAK7J,SAAS6G,EAAYpH,GAAKoK,KAAOA,KAAK1J,MACtDsK,EAAOA,EAAKzJ,aAAawJ,IAAW,SAAWA,EAAS,GACxD,MAAMhM,EAAOiM,EAAKX,SAAW,EAAIW,EAAKhE,MAAQ,IAAIgE,EAAKhE,MAAOoD,KAAKC,QACnE,OAAOjD,EAAYpH,GAAGgL,EAAKzK,OAAOxB,EACpC,EAEC,aAAAkM,CAAcF,GACb,MAAMC,EAAOZ,KAAK1J,MAAMa,aAAawJ,IAAW,SAAWA,EAAS,GACpE,MAAMhM,EAAOiM,EAAKX,SAAW,EAAIW,EAAKhE,MAAQ,IAAIgE,EAAKhE,MAAOoD,KAAKC,QACnE,OAAOjD,EAAYpH,GAAGU,IAAIwB,QAAQnD,EACpC,EAEC,KAAAmM,GACC,OAAOd,KAAKC,SAAW,EAAI,IAAID,KAAKpD,OAAS,IAAIoD,KAAKpD,MAAOoD,KAAKC,OACpE,EAEC,MAAAF,GACC,MAAMX,EAAS,GACf,MAAMtG,SAACA,GAAYD,EAAQmH,KAAK7J,OAChC,MAAM4C,OAACA,GAAUF,EAAQmH,KAAK7J,OAE9B,IAAK,IAAItB,EAAI,EAAGA,EAAIiE,EAAUjE,IAAK,CAClCuK,EAAOrG,EAAOlE,IAAMmL,KAAKpD,MAAM/H,EAClC,CAEE,GAAImL,KAAKC,SAAW,EAAG,CACtBb,EAAO/H,MAAQ2I,KAAKC,MACvB,CAEE,OAAOb,CACT,EAEC,SAAA2B,GACC,MAAMzK,EAAM0J,KAAK1J,MAAMsG,MACvBtG,EAAI,IAAM,IACVA,EAAI,IAAM,IACVA,EAAI,IAAM,IAEV,GAAI0J,KAAKC,SAAW,EAAG,CACtB3J,EAAIrB,KAAK+K,KAAKC,OACjB,CAEE,OAAO3J,CACT,EAEC,UAAA0K,GACC,MAAM1K,EAAM0J,KAAK1J,MAAMyJ,SACvBzJ,EAAIyB,GAAK,IACTzB,EAAI0B,GAAK,IACT1B,EAAIsB,GAAK,IAET,GAAIoI,KAAKC,SAAW,EAAG,CACtB3J,EAAIe,MAAQ2I,KAAKC,MACpB,CAEE,OAAO3J,CACT,EAEC,KAAAa,CAAMwJ,GACLA,EAASzJ,KAAKmB,IAAIsI,GAAU,EAAG,GAC/B,OAAO,IAAIb,EAAM,IAAIE,KAAKpD,MAAMM,IAAI+D,EAAaN,IAAUX,KAAKC,QAASD,KAAK7J,MAChF,EAEC,KAAAkB,CAAMd,GACL,GAAIA,IAAU2I,UAAW,CACxB,OAAO,IAAIY,EAAM,IAAIE,KAAKpD,MAAO1F,KAAKmB,IAAI,EAAGnB,KAAKkB,IAAI,EAAG7B,KAAUyJ,KAAK7J,MAC3E,CAEE,OAAO6J,KAAKC,MACd,EAGCnO,IAAKoP,EAAO,MAAO,EAAGC,EAAM,MAC5BvT,MAAOsT,EAAO,MAAO,EAAGC,EAAM,MAC9BpW,KAAMmW,EAAO,MAAO,EAAGC,EAAM,MAE7B5D,IAAK2D,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,GAAG3K,IAAWA,EAAQ,IAAO,KAAO,MAErF6K,YAAaF,EAAO,MAAO,EAAGC,EAAM,MACpCE,UAAWH,EAAO,MAAO,EAAGC,EAAM,MAElCG,YAAaJ,EAAO,MAAO,EAAGC,EAAM,MACpC5K,MAAO2K,EAAO,MAAO,EAAGC,EAAM,MAE9B9D,OAAQ6D,EAAO,MAAO,EAAGC,EAAM,MAC/BxT,KAAMuT,EAAO,MAAO,EAAGC,EAAM,MAE7B7N,MAAO4N,EAAO,MAAO,EAAGC,EAAM,MAC9BI,OAAQL,EAAO,MAAO,EAAGC,EAAM,MAE/BzV,KAAMwV,EAAO,OAAQ,EAAGC,EAAM,MAC9BxR,QAASuR,EAAO,OAAQ,EAAGC,EAAM,MACjC3N,OAAQ0N,EAAO,OAAQ,EAAGC,EAAM,MAChCtW,MAAOqW,EAAO,OAAQ,EAAGC,EAAM,MAE/B3G,EAAG0G,EAAO,MAAO,EAAGC,EAAM,SAC1B7G,EAAG4G,EAAO,MAAO,EAAGC,EAAM,MAC1BrG,EAAGoG,EAAO,MAAO,EAAGC,EAAM,UAE1B3J,EAAG0J,EAAO,MAAO,EAAGC,EAAM,MAC1B1J,EAAGyJ,EAAO,MAAO,GACjBtJ,EAAGsJ,EAAO,MAAO,GAEjB,OAAAtK,CAAQL,GACP,GAAIA,IAAU2I,UAAW,CACxB,OAAO,IAAIY,EAAMvJ,EACpB,CAEE,OAAOsC,EAAQmH,KAAK7J,OAAOS,QAAQoJ,KAAKpD,MAC1C,EAEC,GAAAnG,CAAIF,GACH,GAAIA,IAAU2I,UAAW,CACxB,OAAO,IAAIY,EAAMvJ,EACpB,CAEE,OAAOyG,EAAYpH,GAAGa,IAAIuJ,KAAK1J,MAAMa,QAAQyF,MAC/C,EAEC,IAAA4E,CAAKjL,GACJ,GAAIA,IAAU2I,UAAW,CACxB,OAAO,IAAIY,EAAMvJ,EACpB,CAEE,MAAMkL,EAAWzB,KAAK1J,MAAMa,QAAQyF,MAEpC,IAAI8E,EAAWxK,KAAKC,MAAM6I,KAAKC,OAAS,KAAK1H,SAAS,IAAIC,cAC1D,GAAIkJ,EAAS5N,SAAW,EAAG,CAC1B4N,EAAW,IAAMA,CACpB,CAEE,OAAO1E,EAAYpH,GAAGa,IAAIgL,GAAYC,CACxC,EAEC,SAAAC,GACC,MAAMrL,EAAM0J,KAAK1J,MAAMsG,MACvB,OAAStG,EAAI,GAAK,MAAS,IAAQA,EAAI,GAAK,MAAS,EAAMA,EAAI,GAAK,GACtE,EAEC,UAAAsL,GAEC,MAAMtL,EAAM0J,KAAK1J,MAAMsG,MAEvB,MAAMiF,EAAM,GACZ,IAAK,MAAOhN,EAAGiN,KAAYxL,EAAIyL,UAAW,CACzC,MAAMC,EAAOF,EAAU,IACvBD,EAAIhN,GAAMmN,GAAQ,OAAWA,EAAO,QAAUA,EAAO,MAAS,QAAU,GAC3E,CAEE,MAAO,MAASH,EAAI,GAAK,MAASA,EAAI,GAAK,MAASA,EAAI,EAC1D,EAEC,QAAAI,CAASC,GAER,MAAMC,EAAOnC,KAAK4B,aAClB,MAAMQ,EAAOF,EAAON,aAEpB,GAAIO,EAAOC,EAAM,CAChB,OAAQD,EAAO,MAASC,EAAO,IAClC,CAEE,OAAQA,EAAO,MAASD,EAAO,IACjC,EAEC,KAAAE,CAAMH,GAEL,MAAMI,EAAgBtC,KAAKiC,SAASC,GACpC,GAAII,GAAiB,EAAG,CACvB,MAAO,KACV,CAEE,OAAQA,GAAiB,IAAO,KAAO,EACzC,EAEC,MAAAC,GAEC,MAAMjM,EAAM0J,KAAK1J,MAAMsG,MACvB,MAAM4F,GAAOlM,EAAI,GAAK,KAAOA,EAAI,GAAK,KAAOA,EAAI,GAAK,KAAO,IAC7D,OAAOkM,EAAM,GACf,EAEC,OAAAC,GACC,OAAQzC,KAAKuC,QACf,EAEC,MAAAG,GACC,MAAMpM,EAAM0J,KAAK1J,MACjB,IAAK,IAAIzB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3ByB,EAAIsG,MAAM/H,GAAK,IAAMyB,EAAIsG,MAAM/H,EAClC,CAEE,OAAOyB,CACT,EAEC,OAAAqM,CAAQ5G,GACP,MAAM3F,EAAM4J,KAAK5J,MACjBA,EAAIwG,MAAM,IAAMxG,EAAIwG,MAAM,GAAKb,EAC/B,OAAO3F,CACT,EAEC,MAAAwM,CAAO7G,GACN,MAAM3F,EAAM4J,KAAK5J,MACjBA,EAAIwG,MAAM,IAAMxG,EAAIwG,MAAM,GAAKb,EAC/B,OAAO3F,CACT,EAEC,QAAAyM,CAAS9G,GACR,MAAM3F,EAAM4J,KAAK5J,MACjBA,EAAIwG,MAAM,IAAMxG,EAAIwG,MAAM,GAAKb,EAC/B,OAAO3F,CACT,EAEC,UAAA0M,CAAW/G,GACV,MAAM3F,EAAM4J,KAAK5J,MACjBA,EAAIwG,MAAM,IAAMxG,EAAIwG,MAAM,GAAKb,EAC/B,OAAO3F,CACT,EAEC,MAAA2M,CAAOhH,GACN,MAAM1F,EAAM2J,KAAK3J,MACjBA,EAAIuG,MAAM,IAAMvG,EAAIuG,MAAM,GAAKb,EAC/B,OAAO1F,CACT,EAEC,OAAA2M,CAAQjH,GACP,MAAM1F,EAAM2J,KAAK3J,MACjBA,EAAIuG,MAAM,IAAMvG,EAAIuG,MAAM,GAAKb,EAC/B,OAAO1F,CACT,EAEC,SAAAiH,GAEC,MAAMhH,EAAM0J,KAAK1J,MAAMsG,MACvB,MAAMrG,EAAQD,EAAI,GAAK,GAAMA,EAAI,GAAK,IAAOA,EAAI,GAAK,IACtD,OAAOwJ,EAAMxJ,IAAIC,EAAOA,EAAOA,EACjC,EAEC,IAAA0M,CAAKlH,GACJ,OAAOiE,KAAK3I,MAAM2I,KAAKC,OAAUD,KAAKC,OAASlE,EACjD,EAEC,OAAAmH,CAAQnH,GACP,OAAOiE,KAAK3I,MAAM2I,KAAKC,OAAUD,KAAKC,OAASlE,EACjD,EAEC,MAAAoH,CAAOC,GACN,MAAMhN,EAAM4J,KAAK5J,MACjB,IAAImH,EAAMnH,EAAIwG,MAAM,GACpBW,GAAOA,EAAM6F,GAAW,IACxB7F,EAAMA,EAAM,EAAI,IAAMA,EAAMA,EAC5BnH,EAAIwG,MAAM,GAAKW,EACf,OAAOnH,CACT,EAEC,GAAAiN,CAAIC,EAAYC,GAGf,IAAKD,IAAeA,EAAWhN,IAAK,CACnC,MAAM,IAAIoD,MAAM,gFAAkF4J,EACrG,CAEE,MAAME,EAASF,EAAWhN,MAC1B,MAAM4L,EAASlC,KAAK1J,MACpB,MAAMkF,EAAI+H,IAAWrE,UAAY,GAAMqE,EAEvC,MAAM5L,EAAI,EAAI6D,EAAI,EAClB,MAAM/D,EAAI+L,EAAOnM,QAAU6K,EAAO7K,QAElC,MAAMoM,IAAQ9L,EAAIF,KAAO,EAAKE,GAAKA,EAAIF,IAAM,EAAIE,EAAIF,IAAM,GAAK,EAChE,MAAMiM,EAAK,EAAID,EAEf,OAAO3D,EAAMxJ,IACZmN,EAAKD,EAAO1R,MAAQ4R,EAAKxB,EAAOpQ,MAChC2R,EAAKD,EAAO5V,QAAU8V,EAAKxB,EAAOtU,QAClC6V,EAAKD,EAAOzY,OAAS2Y,EAAKxB,EAAOnX,OACjCyY,EAAOnM,QAAUmE,EAAI0G,EAAO7K,SAAW,EAAImE,GAC9C,GAIA,IAAK,MAAMrF,KAASlC,OAAO2E,KAAKC,GAAU,CACzC,GAAI6G,EAAciE,SAASxN,GAAQ,CAClC,QACF,CAEC,MAAM2C,SAACA,GAAYD,EAAQ1C,GAG3B2J,EAAMvL,UAAU4B,GAAS,YAAaxB,GACrC,GAAIqL,KAAK7J,QAAUA,EAAO,CACzB,OAAO,IAAI2J,EAAME,KACpB,CAEE,GAAIrL,EAAKb,OAAS,EAAG,CACpB,OAAO,IAAIgM,EAAMnL,EAAMwB,EAC1B,CAEE,OAAO,IAAI2J,EAAM,IAAI8D,EAAY/K,EAAQmH,KAAK7J,OAAOA,GAAOqJ,IAAIQ,KAAKpD,QAASoD,KAAKC,QAAS9J,EAC9F,EAGC2J,EAAM3J,GAAS,YAAaxB,GAC3B,IAAIiI,EAAQjI,EAAK,GACjB,UAAWiI,IAAU,SAAU,CAC9BA,EAAQuD,EAAUxL,EAAMmE,EAC3B,CAEE,OAAO,IAAIgH,EAAMlD,EAAOzG,EAC1B,CACA,CAEA,SAAS0N,EAAQC,EAAQnD,GACxB,OAAOoD,OAAOD,EAAOE,QAAQrD,GAC9B,CAEA,SAASM,EAAaN,GACrB,OAAO,SAAUmD,GAChB,OAAOD,EAAQC,EAAQnD,EACzB,CACA,CAEA,SAASO,EAAO/K,EAAO8N,EAASC,GAC/B/N,EAAQvC,MAAMC,QAAQsC,GAASA,EAAQ,CAACA,GAExC,IAAK,MAAMkE,KAAKlE,EAAO,EACrB0J,EAASxF,KAAOwF,EAASxF,GAAK,KAAK4J,GAAWC,CACjD,CAEC/N,EAAQA,EAAM,GAEd,OAAO,SAAUI,GAChB,IAAI6I,EAEJ,GAAI7I,IAAU2I,UAAW,CACxB,GAAIgF,EAAU,CACb3N,EAAQ2N,EAAS3N,EACrB,CAEG6I,EAASY,KAAK7J,KACdiJ,EAAOxC,MAAMqH,GAAW1N,EACxB,OAAO6I,CACV,CAEEA,EAASY,KAAK7J,KAASyG,MAAMqH,GAC7B,GAAIC,EAAU,CACb9E,EAAS8E,EAAS9E,EACrB,CAEE,OAAOA,CACT,CACA,CAEA,SAAS+B,EAAM9I,GACd,OAAO,SAAU2B,GAChB,OAAO9C,KAAKmB,IAAI,EAAGnB,KAAKkB,IAAIC,EAAK2B,GACnC,CACA,CAEA,SAAS4J,EAAYrN,GACpB,OAAO3C,MAAMC,QAAQ0C,GAASA,EAAQ,CAACA,EACxC,CAEA,SAAS4J,EAAUW,EAAOhN,GACzB,IAAK,IAAIe,EAAI,EAAGA,EAAIf,EAAQe,IAAK,CAChC,UAAWiM,EAAMjM,KAAO,SAAU,CACjCiM,EAAMjM,GAAK,CACd,CACA,CAEC,OAAOiM,CACR,C,IAEAlE,EAAiBkD,E,gBC7eJqE,EAAM,CACjBF,QAAS,UACTnL,SAAU,WACVsL,WAAY,cACZC,gBAAiB,qBACjBC,UAAW,aACXC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,UACTC,gBAAiB,oBACjBC,eAAgB,kBAChBC,YAAa,eACbC,OAAQ,SACRC,oBAAqB,yBACrBC,WAAY,oBACZC,SAAU,aACVC,UAAW,aACXC,aAAc,iBACdC,cAAe,iBACfC,QAAS,UACTC,kBAAmB,sBACnBC,UAAW,aACXC,WAAY,cACZC,YAAa,eACbC,mBAAoB,uBACpBC,mBAAoB,uBACpBC,MAAO,QACPC,QAAS,UACTC,OAAQ,SACRC,QAAS,UACTC,aAAc,kB,MAGHC,EAAgBlG,EAAM,W,MACtBmG,EAA6B,iB,MAE7BC,EAAa,CACxBnO,EAAG,IACHC,EAAG,IACHJ,EAAG,K,MAGQuO,EAAa,CACxB7O,EAAG,IACHC,EAAG,IACHyC,EAAG,K,MAIQoM,EAAwBD,EAAW7O,EAAI,E,MAEvC+O,GAAiB,CAC5BjO,IAAK,EACLC,IAAK,K,MAGMiO,GAAa,CACxB/O,EAAG,CACDsO,OAAQ,CACNU,OAAQ,GACRC,MAAO,KAETpC,WAAY,CACVmC,OAAQ,GACRC,MAAO,KAETC,MAAO,CACLC,OAAQ,GAEVtB,QAAS,CACPuB,KAAM,KAGVtM,EAAG,CACDwL,OAAQ,CACNU,OAAQ,GACRC,MAAO,KAETpC,WAAY,CACVmC,OAAQ,IACRC,MAAO,KAETC,MAAO,CACLC,OAAQ,GAEVtB,QAAS,CACPuB,KAAM,KAGVnP,EAAG,CACDqO,OAAQ,CACNU,OAAQ,GACRC,MAAO,KAETpC,WAAY,CACVmC,OAAQ,IACRC,MAAO,KAETC,MAAO,CACLC,OAAQ,GAEVtB,QAAS,CACPuB,KAAM,M,MAKCC,GAAa,E,MCxGbC,GAAU,cACvB,MAAMC,GAAe,kBACrB,MAAMC,GAAc,kBACpB,MAAMC,GAAwB,kBAC9B,MAAMC,GAAuB,kB,MAEhBC,GAAkB7P,GAA0B0M,QAAQ1M,EAAQ,KAAK2M,W,MAEjEmD,GAAkBC,GAA4BrD,QAAQqD,EAAU,KAAKpD,QAAQ,I,SAE1EqD,GAAW5Q,EAAa6Q,EAAW,OACjD,OAAOC,GAAe9Q,EAAK6Q,IAAaE,GAAc/Q,EAAK6Q,EAC7D,CAQA,SAASG,GAAYhR,EAAa3C,EAAgB4T,GAChD,IAAKjR,EAAK,CACR,OAAO,K,CAGT,OAAOA,EAAI3C,SAAWA,GAAU4T,EAAQC,KAAKlR,EAC/C,C,SAEgB8Q,GAAe9Q,EAAa6Q,EAAW,OACrD,MAAMM,EAAYN,EAAW,EAAI,EACjC,MAAMO,EAAaP,EAAWN,GAAwBF,GAEtD,OAAOW,GAAYhR,EAAKmR,EAAWC,EACrC,C,SAEgBL,GAAc/Q,EAAa6Q,EAAW,OACpD,MAAMM,EAAYN,EAAW,EAAI,EACjC,MAAMO,EAAaP,EAAWL,GAAuBF,GAErD,OAAOU,GAAYhR,EAAKmR,EAAWC,EACrC,C,SAEgBC,GAAarR,EAAa6Q,EAAW,MAAOS,EAAuB,OACjFtR,EAAMA,EAAIR,cAEV,IAAKQ,EAAIuR,WAAW,KAAM,CACxBvR,EAAM,IAAIA,G,CAGZ,GAAI8Q,GAAe9Q,EAAK6Q,GAAW,CACjC,OAAOW,GAASC,GAASzR,EAAK6Q,G,CAGhC,GAAIA,GAAYS,GAAwBV,GAAW5Q,EAAK,OAAwD,CAC9G,MAAM0R,EAAcZ,GAAe9Q,EAAK,OACxC,OAAOwR,GAASC,GAAS,GAAGzR,IAAM0R,EAAc,IAAM,OAAQ,M,CAGhE,OAAO1R,CACT,C,SAEgB2R,GAAOxL,EAAc0K,EAAW,OAC9C,OAAOA,EAAW1K,EAAM4E,OAAS5E,EAAMnG,KACzC,C,SAEgBwR,GAASrL,GACvB,MAAM7E,EAAEA,EAACC,EAAEA,EAACJ,EAAEA,GAAMgF,EAEpB,MAAMyL,EAASC,GAASvQ,GACxB,MAAMwQ,EAASD,GAAStQ,GACxB,MAAMwQ,EAASF,GAAS1Q,GACxB,MAAM6Q,EAAa,MAAO7L,EAAQ0L,GAAS1L,EAAMnF,EAAI,KAAO,GAE5D,MAAO,IAAI4Q,IAASE,IAASC,IAASC,IAAaxS,aACrD,CAEA,SAASqS,GAASnQ,GAChB,OAAOA,EAAII,SAAS,IAAImQ,SAAS,EAAG,IACtC,C,SAEgBC,GAA6CC,GAC3D,MAAMC,EAAa,IAAKD,EAAanR,EAAGmR,EAAYvR,OAAS,UACtDwR,EAAWxR,MAElB,OAAOwR,CACT,C,SAEgBC,GAAeC,GAC7B,MAAMF,EAAa,IAAKE,EAAkB1R,MAAO0R,EAAiBtR,GAAK,UAChEoR,EAAWpR,EAElB,OAAOoR,CACT,C,SAEgBX,GAASzR,EAAa6Q,EAAW,OAC/C,IAAKD,GAAW5Q,EAAK6Q,GAAW,CAC9B,OAAO,I,CAGT7Q,EAAMA,EAAIuS,QAAQ,IAAK,IAEvB,IAAIjR,EACJ,IAAIC,EACJ,IAAIJ,EACJ,IAAIH,EACJ,MAAM0Q,EAAc1R,EAAI3C,SAAW,GAAK2C,EAAI3C,SAAW,EAEvD,GAAIqU,EAAa,CACf,MAAOc,EAAOC,EAAQC,EAAOC,GAAU3S,EAAIwG,MAAM,IAEjDlF,EAAIf,SAAS,GAAGiS,IAAQA,IAAS,IACjCjR,EAAIhB,SAAS,GAAGkS,IAASA,IAAU,IACnCtR,EAAIZ,SAAS,GAAGmS,IAAQA,IAAS,IACjC1R,EAAIT,SAAS,GAAGoS,IAASA,IAAU,IAAM,G,KACpC,CACLrR,EAAIf,SAASP,EAAIjC,MAAM,EAAG,GAAI,IAC9BwD,EAAIhB,SAASP,EAAIjC,MAAM,EAAG,GAAI,IAC9BoD,EAAIZ,SAASP,EAAIjC,MAAM,EAAG,GAAI,IAC9BiD,EAAIT,SAASP,EAAIjC,MAAM,EAAG,GAAI,IAAM,G,CAGtC,OAAOkD,MAAMD,GAAK,CAAEM,IAAGC,IAAGJ,KAAM,CAAEG,IAAGC,IAAGJ,IAAGH,IAC7C,CAIA,MAAM4R,GAA+D7O,GAASA,E,MAGjE8O,GAAeD,GAAQ,CAClCE,IAAK,MACLC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,SAAU,aAIL,MAAMC,GAAkBR,GAAQ,CACrCS,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,KAAM,S,SAQQC,GAAUC,GACxB,UAAWA,IAAe,SAAU,CAClC,GAAIA,EAAWrC,WAAW,KAAM,CAC9B,MAAMlU,OAAEA,GAAWuW,EAEnB,GAAIvW,IAAW,GAAKA,IAAW,EAAG,CAChC,OAAOwV,GAAaC,G,CAEtB,GAAIzV,IAAW,GAAKA,IAAW,EAAG,CAChC,OAAOwV,GAAaE,I,EAIxB,GAAIa,EAAWrC,WAAW,SAAU,CAClC,OAAOsB,GAAaI,Q,CAGtB,GAAIW,EAAWrC,WAAW,QAAS,CACjC,OAAOsB,GAAaG,O,CAGtB,GAAIY,EAAWrC,WAAW,QAAS,CACjC,OAAOsB,GAAaK,O,CAGtB,GAAIU,EAAWrC,WAAW,SAAU,CAClC,OAAOsB,GAAaM,Q,EAIxB,UAAWS,IAAe,SAAU,CAClC,GAAIC,GAAYD,EAAY,IAAK,IAAK,KAAM,CAC1C,OAAOC,GAAYD,EAAY,KAAOR,GAAgBE,KAAOF,GAAgBC,G,CAG/E,GAAIQ,GAAYD,EAAY,IAAK,IAAK,KAAM,CAC1C,OAAOC,GAAYD,EAAY,KAAOR,GAAgBI,KAAOJ,GAAgBG,G,CAG/E,GAAIM,GAAYD,EAAY,IAAK,IAAK,KAAM,CAC1C,OAAOC,GAAYD,EAAY,KAAOR,GAAgBM,KAAON,GAAgBK,G,EAIjF,OAAO,IACT,CAEA,SAASI,GAAY1B,KAAoD9P,GACvE,OAAOA,EAASyR,OAAOtG,GAAYA,GAAW2E,GAAe,GAAG3E,MAAa2E,GAC/E,C,SAEgB4B,GAAWC,EAAsBC,GAC/C,OAAOD,GAAQnU,MAAMwK,QAAQvI,aAAemS,GAAQpU,MAAMwK,QAAQvI,UACpE,C,SAEgBoS,GAAgBC,GAC9B,OACEA,IAAStB,GAAaE,MACtBoB,IAAStB,GAAaI,UACtBkB,IAAStB,GAAaM,UACtBgB,IAASf,GAAgBE,MACzBa,IAASf,GAAgBI,MACzBW,IAASf,GAAgBM,IAE7B,C,SAEgBU,GAAYD,GAC1B,MAAME,EACJF,IAAStB,GAAaC,IAClBD,GAAaE,KACboB,IAAStB,GAAaG,QACpBH,GAAaI,SACbkB,IAAStB,GAAaK,QACpBL,GAAaM,SACbgB,IAASf,GAAgBC,IACvBD,GAAgBE,KAChBa,IAASf,GAAgBG,IACvBH,GAAgBI,KAChBW,IAASf,GAAgBK,IACvBL,GAAgBM,KAChBS,EAEhB,OAAOE,CACT,C,SAEgBC,GAAeH,GAC7B,MAAMI,EACJJ,IAAStB,GAAaE,KAClBF,GAAaC,IACbqB,IAAStB,GAAaI,SACpBJ,GAAaG,QACbmB,IAAStB,GAAaM,SACpBN,GAAaK,QACbiB,IAASf,GAAgBE,KACvBF,GAAgBC,IAChBc,IAASf,GAAgBI,KACvBJ,GAAgBG,IAChBY,IAASf,GAAgBM,KACvBN,GAAgBK,IAChBU,EAEhB,OAAOI,CACT,C,SAEgBC,GAAeC,EAA8C5D,GAC3E,MACEzB,QAAQW,MAAEA,GAAOpB,QACjBA,GACE8F,EAEJ,GAAI5D,EAAU,CACZ,OAAOd,C,CAGT,MAAM2E,EAAqB7E,GAAW,KAAKlB,QAAQuB,KAAOvB,EAAQuB,KAElE,OAAOH,EAAQ2E,CACjB,Q","ignoreList":[]}