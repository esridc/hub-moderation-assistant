{"version":3,"names":["chipGroupCss","CalciteChipGroupStyle0","ChipGroup","this","items","updateItems","event","itemsFromSlot","slotRefEl","assignedElements","flatten","filter","el","matches","slotChangeGetAssignedElements","length","forEach","interactive","scale","selectionMode","parentChipGroup","setSelectedItems","updateSelectedItems","selectedItems","selected","emit","elToMatch","matchingEl","calciteChipGroupSelect","onSelectionModeChange","connectedCallback","connectInteractive","componentDidRender","disconnectInteractive","updateHostInteraction","componentDidLoad","setComponentLoaded","componentWillLoad","setUpLoadableComponent","calciteInternalChipKeyEventListener","composedPath","includes","interactiveItems","disabled","detail","key","focusElementInGroup","target","stopPropagation","calciteChipCloseListener","item","indexOf","calciteChipSelectListener","calciteInternalChipSelectListener","calciteInternalSyncSelectedChips","setFocus","componentFocusable","render","role","h","InteractiveContainer","toAriaBoolean","label","class","onSlotchange","ref"],"sources":["src/components/chip-group/chip-group.scss?tag=calcite-chip-group&encapsulation=shadow","src/components/chip-group/chip-group.tsx"],"sourcesContent":[":host {\n  display: flex;\n}\n\n.container {\n  display: flex;\n  inline-size: 100%;\n  flex-wrap: wrap;\n  gap: theme(\"spacing.2\");\n}\n\n::slotted(calcite-chip) {\n  flex: none;\n}\n\n:host([scale=\"s\"]) .container {\n  gap: theme(\"spacing.1\");\n}\n\n:host([scale=\"l\"]) .container {\n  gap: theme(\"spacing.3\");\n}\n\n@include disabled();\n@include base-component();\n","import {\n  Component,\n  h,\n  VNode,\n  Prop,\n  Element,\n  Listen,\n  EventEmitter,\n  Event,\n  Method,\n  Watch,\n} from \"@stencil/core\";\nimport { focusElementInGroup, slotChangeGetAssignedElements, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport {\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n/**\n * @slot - A slot for adding one or more `calcite-chip`s.\n */\n@Component({\n  tag: \"calcite-chip-group\",\n  styleUrl: \"chip-group.scss\",\n  shadow: true,\n})\nexport class ChipGroup implements InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. Child `calcite-chip`s inherit the component's value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection,\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection, and\n   *\n   * `\"none\"` does not allow any selections.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"single\" | \"single-persist\" | \"none\",\n    SelectionMode\n  > = \"none\";\n\n  @Watch(\"selectionMode\")\n  onSelectionModeChange(): void {\n    this.updateItems();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteChipElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteChipGroupElement;\n\n  private items: HTMLCalciteChipElement[] = [];\n\n  private slotRefEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component's selection changes. */\n  @Event({ cancelable: false }) calciteChipGroupSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    disconnectInteractive(this);\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalChipKeyEvent\")\n  calciteInternalChipKeyEventListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      const interactiveItems = this.items?.filter((el) => !el.disabled);\n      switch (event.detail.key) {\n        case \"ArrowRight\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"next\");\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"previous\");\n          break;\n        case \"Home\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"first\");\n          break;\n        case \"End\":\n          focusElementInGroup(interactiveItems, event.detail.target, \"last\");\n          break;\n      }\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteChipClose\")\n  calciteChipCloseListener(event: CustomEvent): void {\n    const item = event.target as HTMLCalciteChipElement;\n    if (this.items?.includes(item)) {\n      if (this.items?.indexOf(item) > 0) {\n        focusElementInGroup(this.items, item as HTMLCalciteChipElement, \"previous\");\n      } else if (this.items?.indexOf(item) === 0) {\n        focusElementInGroup(this.items, item as HTMLCalciteChipElement, \"next\");\n      } else {\n        focusElementInGroup(this.items, item as HTMLCalciteChipElement, \"first\");\n      }\n    }\n    this.items = this.items?.filter((el) => el !== item);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteChipSelect\")\n  calciteChipSelectListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.setSelectedItems(true, event.target as HTMLCalciteChipElement);\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalChipSelect\")\n  calciteInternalChipSelectListener(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.setSelectedItems(false, event.target as HTMLCalciteChipElement);\n    }\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalSyncSelectedChips\")\n  calciteInternalSyncSelectedChips(event: CustomEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      this.updateSelectedItems();\n      if (this.selectionMode === \"single\" && this.selectedItems.length > 1) {\n        this.setSelectedItems(false, event.target as HTMLCalciteChipElement);\n      }\n    }\n    event.stopPropagation();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled) {\n      return (this.selectedItems[0] || this.items[0])?.setFocus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private updateItems = (event?: Event): void => {\n    const itemsFromSlot = this.slotRefEl\n      ?.assignedElements({ flatten: true })\n      .filter((el) => el?.matches(\"calcite-chip\")) as HTMLCalciteChipElement[];\n\n    this.items = !event\n      ? itemsFromSlot\n      : (slotChangeGetAssignedElements(event) as HTMLCalciteChipElement[]);\n\n    if (this.items?.length < 1) {\n      return;\n    }\n\n    this.items?.forEach((el) => {\n      el.interactive = true;\n      el.scale = this.scale;\n      el.selectionMode = this.selectionMode;\n      el.parentChipGroup = this.el;\n    });\n\n    this.setSelectedItems(false);\n  };\n\n  private updateSelectedItems = (): void => {\n    this.selectedItems = this.items?.filter((el) => el.selected);\n  };\n\n  private setSelectedItems = (emit: boolean, elToMatch?: HTMLCalciteChipElement): void => {\n    if (elToMatch) {\n      this.items?.forEach((el) => {\n        const matchingEl = elToMatch === el;\n        switch (this.selectionMode) {\n          case \"multiple\":\n            if (matchingEl) {\n              el.selected = !el.selected;\n            }\n            break;\n\n          case \"single\":\n            el.selected = matchingEl ? !el.selected : false;\n            break;\n\n          case \"single-persist\":\n            el.selected = !!matchingEl;\n            break;\n        }\n      });\n    }\n\n    this.updateSelectedItems();\n\n    if (emit) {\n      this.calciteChipGroupSelect.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const role =\n      this.selectionMode === \"none\" || this.selectionMode === \"multiple\" ? \"group\" : \"radiogroup\";\n    const { disabled } = this;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <div\n          aria-disabled={toAriaBoolean(disabled)}\n          aria-label={this.label}\n          class=\"container\"\n          role={role}\n        >\n          <slot\n            onSlotchange={this.updateItems}\n            ref={(el) => (this.slotRefEl = el as HTMLSlotElement)}\n          />\n        </div>\n      </InteractiveContainer>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}