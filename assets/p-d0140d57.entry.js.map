{"version":3,"names":["CSS","container","contentContainer","contentContainerHasContent","contentContainerHasOnlyContentTopAndBottom","textContentContainer","description","heading","icon","interactive","largeVisualDeprecated","row","selected","selectionIcon","textContent","ICONS","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","SLOTS","contentBottom","contentEnd","contentStart","contentTop","tileCss","CalciteTileStyle0","Tile","this","clickHandler","setFocus","handleSelectEvent","disabled","selectionMode","calciteTileSelect","emit","handleSlotChange","event","slotName","target","dataset","name","slotChangeHasAssignedElement","setContainerEl","el","containerEl","componentFocusable","focus","connectedCallback","connectInteractive","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","componentDidRender","updateHostInteraction","componentWillLoad","setUpLoadableComponent","keyDownHandler","key","preventDefault","calciteInternalTileKeyEvent","renderSelectionIcon","selectionAppearance","h","class","scale","renderTile","hasContentBottom","hasContentEnd","hasContentStart","hasContentTop","iconFlipRtl","isLargeVisual","disableInteraction","Boolean","href","role","undefined","hasContent","hasOnlyContentTopAndBottom","toAriaBoolean","label","onClick","ref","tabIndex","onSlotchange","flipRtl","render","InteractiveContainer"],"sources":["src/components/tile/resources.ts","src/components/tile/tile.scss?tag=calcite-tile&encapsulation=shadow","src/components/tile/tile.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  contentContainer: \"content-container\",\n  contentContainerHasContent: \"content-container--has-content\",\n  contentContainerHasOnlyContentTopAndBottom: \"content-container--has-only-content-top-and-bottom\",\n  textContentContainer: \"text-content-container\",\n  description: \"description\",\n  heading: \"heading\",\n  icon: \"icon\",\n  interactive: \"interactive\",\n  largeVisualDeprecated: \"large-visual-deprecated\",\n  row: \"row\",\n  selected: \"selected\",\n  selectionIcon: \"selection-icon\",\n  textContent: \"text-content\",\n};\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"circle-f\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"circle\",\n} as const;\n\nexport const SLOTS = {\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  contentStart: \"content-start\",\n  contentTop: \"content-top\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tile-background-color: Specifies the background color of the component.\n * @prop --calcite-tile-border-color: Specifies the border color of the component.\n * @prop --calcite-tile-description-text-color: Specifies the description text color of the component.\n * @prop --calcite-tile-heading-text-color: Specifies the heading text color of the component.\n */\n\n:host {\n  --calcite-tile-background-color: var(--calcite-color-foreground-1);\n  --calcite-tile-border-color: var(--calcite-color-border-2);\n  --calcite-tile-description-text-color: var(--calcite-color-text-3);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-2);\n  --calcite-ui-icon-color: var(--calcite-color-text-3);\n\n  box-sizing: border-box;\n  display: inline-block;\n}\n\n.container {\n  background-color: var(--calcite-tile-background-color);\n  block-size: var(--calcite-container-size-content-fluid);\n  box-sizing: border-box;\n  inline-size: var(--calcite-container-size-content-fluid);\n  outline: var(--calcite-border-width-sm, 1px) solid var(--calcite-tile-border-color);\n  user-select: none;\n  &.interactive {\n    cursor: pointer;\n    &:hover,\n    &:focus,\n    &.selected {\n      outline-color: var(--calcite-color-brand);\n      position: relative;\n      .selection-icon {\n        --calcite-ui-icon-color: var(--calcite-color-brand);\n      }\n    }\n    &.selected {\n      z-index: var(--calcite-z-index);\n    }\n    &:focus {\n      box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n      z-index: var(--calcite-z-index-sticky);\n    }\n  }\n}\n\n.content-container,\n.row {\n  align-items: flex-start;\n  display: flex;\n}\n\n.content-container {\n  flex-direction: column;\n}\n\n.text-content-container {\n  inline-size: 100%;\n  outline-color: transparent;\n  padding: 0;\n}\n\n.text-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.heading {\n  color: var(--calcite-tile-heading-text-color);\n  font-weight: var(--calcite-font-weight-medium);\n  line-height: 1.20313rem;\n  overflow-wrap: break-word;\n}\n\n/* [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead */\n.large-visual-deprecated {\n  align-items: center;\n  justify-content: center;\n  min-block-size: 12rem;\n  text-align: center;\n\n  calcite-icon {\n    align-self: center;\n    block-size: 64px;\n    inline-size: 64px;\n  }\n  .text-content-container {\n    justify-content: center;\n  }\n}\n\n.description {\n  color: var(--calcite-tile-description-text-color);\n  font-weight: var(--calcite-font-weight-regular);\n  overflow-wrap: break-word;\n}\n\n:host([alignment=\"center\"]) {\n  .icon {\n    align-self: center;\n  }\n  .text-content-container {\n    justify-content: center;\n  }\n  .text-content {\n    text-align: center;\n  }\n  slot[name=\"content-start\"]::slotted(*),\n  slot[name=\"content-end\"]::slotted(*),\n  slot[name=\"content-top\"]::slotted(*),\n  slot[name=\"content-bottom\"]::slotted(*) {\n    align-self: center;\n  }\n}\n\n:host([scale=\"s\"]) {\n  max-inline-size: 400px;\n  min-inline-size: 100px;\n  .container {\n    padding: var(--calcite-spacing-sm);\n  }\n  .content-container--has-content,\n  .row {\n    gap: var(--calcite-spacing-sm);\n  }\n  .heading {\n    font-size: var(--calcite-font-size--2);\n    line-height: 1.03125rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--3);\n    line-height: 0.85938rem;\n  }\n  .content-container--has-only-content-top-and-bottom slot[name=\"content-top\"]::slotted(*) {\n    margin-block-end: var(--calcite-spacing-sm);\n  }\n}\n\n:host([scale=\"m\"]) {\n  max-inline-size: 460px;\n  min-inline-size: 140px;\n  .container {\n    padding: var(--calcite-spacing-md);\n  }\n  .content-container--has-content,\n  .row {\n    gap: var(--calcite-spacing-md);\n  }\n  .heading {\n    font-size: var(--calcite-font-size--1);\n    line-height: 1.20313rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--2);\n    line-height: 1.03125rem;\n  }\n  .content-container--has-only-content-top-and-bottom slot[name=\"content-top\"]::slotted(*) {\n    margin-block-end: var(--calcite-spacing-md);\n  }\n}\n\n:host([scale=\"l\"]) {\n  max-inline-size: 520px;\n  min-inline-size: 160px;\n  .container {\n    padding: var(--calcite-spacing-xl);\n  }\n  .content-container--has-content,\n  .row {\n    gap: var(--calcite-spacing-xl);\n  }\n  .heading {\n    font-size: var(--calcite-font-size-0);\n    line-height: 1.375rem;\n  }\n  .description {\n    font-size: var(--calcite-font-size--1);\n    line-height: 1.20313rem;\n  }\n  .content-container--has-only-content-top-and-bottom slot[name=\"content-top\"]::slotted(*) {\n    margin-block-end: var(--calcite-spacing-xl);\n  }\n}\n\n:host([selection-appearance=\"border\"][layout=\"horizontal\"]),\n:host([selection-appearance=\"border\"][layout=\"vertical\"]) {\n  .container.selected:focus::before {\n    block-size: 100%;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n    content: \"\";\n    display: block;\n    inline-size: 100%;\n    inset-block-start: 0;\n    inset-inline-start: 0;\n    position: absolute;\n  }\n}\n\n:host([selection-appearance=\"border\"][layout=\"horizontal\"]) {\n  .container.selected {\n    box-shadow: inset 0 -4px 0 0 var(--calcite-color-brand);\n  }\n}\n\n:host([selection-appearance=\"border\"][layout=\"vertical\"]) {\n  .container.selected {\n    box-shadow: inset 4px 0 0 0 var(--calcite-color-brand);\n  }\n}\n\n:host([href]:focus:not([disabled])),\n:host([href]:hover:not([disabled])) {\n  --calcite-tile-border-color: var(--calcite-color-text-link);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-link);\n  --calcite-ui-icon-color: var(--calcite-color-text-link);\n  .container {\n    position: relative;\n    z-index: var(--calcite-z-index);\n  }\n}\n\n:host([href]:active:not([disabled])) {\n  .container {\n    box-shadow: 0 0 0 3px var(--calcite-tile-border-color);\n  }\n}\n\n:host([embed]) {\n  .container {\n    box-shadow: none;\n    padding: 0;\n  }\n}\n\n:host([selection-mode=\"none\"]) {\n  .container {\n    outline-color: var(--calcite-tile-border-color);\n    &:focus {\n      outline-color: var(--calcite-color-brand);\n      position: relative;\n    }\n  }\n}\n\n@include disabled();\n\n:host(:hover:not([disabled])),\n:host([active]:not([disabled])) {\n  --calcite-tile-description-text-color: var(--calcite-color-text-2);\n  --calcite-tile-heading-text-color: var(--calcite-color-text-1);\n}\n\n@include base-component();\n\n::slotted(*) {\n  max-inline-size: 100%;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { Alignment, Layout, Scale, SelectionAppearance, SelectionMode } from \"../interfaces\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SelectableComponent } from \"../../utils/selectableComponent\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot content-top - A slot for adding non-actionable elements above the component's content.  Content slotted here will render in place of the `icon` property.\n * @slot content-bottom - A slot for adding non-actionable elements below the component's content.\n * @slot content-start - [Deprecated] use `content-top` slot instead.  A slot for adding non-actionable elements before the component's content.\n * @slot content-end - [Deprecated] use `content-bottom` slot instead. A slot for adding non-actionable elements after the component's content.\n */\n@Component({\n  tag: \"calcite-tile\",\n  styleUrl: \"tile.scss\",\n  shadow: true,\n})\nexport class Tile implements InteractiveComponent, SelectableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   *\n   * @deprecated\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the alignment of the Tile's content.\n   */\n  @Prop({ reflect: true }) alignment: Exclude<Alignment, \"end\"> = \"start\";\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component's embed mode.\n   *\n   * When `true`, renders without a border and padding for use by other components.\n   *\n   * @deprecated No longer necessary.\n   */\n  @Prop({ reflect: true }) embed = false;\n\n  /** The component header text, which displays between the icon and description. */\n  @Prop({ reflect: true }) heading: string;\n\n  /** When embed is `\"false\"`, the URL for the component. */\n  @Prop({ reflect: true }) href: string;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * When true, enables the tile to be focused, and allows the `calciteTileSelect` to emit.\n   * This is set to `true` by a parent Tile Group component.\n   *\n   * @internal\n   */\n  @Prop() interactive = false;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * Defines the layout of the component.\n   *\n   * Use `\"horizontal\"` for rows, and `\"vertical\"` for a single column.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) layout: Extract<Layout, \"horizontal\" | \"vertical\"> = \"horizontal\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true` and the parent's `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true }) selected = false;\n\n  /**\n   * Specifies the selection appearance, where:\n   *\n   * - `\"icon\"` (displays a checkmark or dot), or\n   * - `\"border\"` (displays a border).\n   *\n   * This property is set by the parent tile-group.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) selectionAppearance: SelectionAppearance = \"icon\";\n\n  /**\n   * Specifies the selection mode, where:\n   *\n   * - `\"multiple\"` (allows any number of selected items),\n   * - `\"single\"` (allows only one selected item),\n   * - `\"single-persist\"` (allows only one selected item and prevents de-selection),\n   * - `\"none\"` (allows no selected items).\n   *\n   * This property is set by the parent tile-group.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"none\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = \"none\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled && this.interactive) {\n      this.containerEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTileElement;\n\n  private clickHandler = (): void => {\n    if (this.interactive) {\n      this.setFocus();\n      this.handleSelectEvent();\n    }\n  };\n\n  private containerEl: HTMLDivElement;\n\n  @State() hasContentBottom = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentTop = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTileKeyEvent: EventEmitter<KeyboardEvent>;\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event() calciteTileSelect: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleSelectEvent = (): void => {\n    if (\n      this.disabled ||\n      !this.interactive ||\n      (this.selectionMode === \"single-persist\" && this.selected === true)\n    ) {\n      return;\n    }\n    this.calciteTileSelect.emit();\n  };\n\n  private handleSlotChange = (event: Event): void => {\n    const slotName = (event.target as HTMLSlotElement).dataset.name;\n    this[`has${slotName}`] = slotChangeHasAssignedElement(event);\n  };\n\n  private setContainerEl = (el): void => {\n    this.containerEl = el;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.handleSelectEvent();\n          event.preventDefault();\n          break;\n        case \"ArrowDown\":\n        case \"ArrowLeft\":\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n        case \"Home\":\n        case \"End\":\n          this.calciteInternalTileKeyEvent.emit(event);\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelectionIcon(): VNode {\n    const { selected, selectionAppearance, selectionMode } = this;\n    if (selectionAppearance === \"icon\" && selectionMode !== \"none\") {\n      return (\n        <calcite-icon\n          class={CSS.selectionIcon}\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      );\n    }\n    return;\n  }\n\n  renderTile(): VNode {\n    const {\n      description,\n      disabled,\n      hasContentBottom,\n      hasContentEnd,\n      hasContentStart,\n      hasContentTop,\n      heading,\n      icon,\n      iconFlipRtl,\n      interactive,\n      selectionMode,\n    } = this;\n    const isLargeVisual = heading && icon && !description;\n    const disableInteraction = Boolean(this.href) || !interactive;\n    const role =\n      selectionMode === \"multiple\" && interactive\n        ? \"checkbox\"\n        : selectionMode !== \"none\" && interactive\n          ? \"radio\"\n          : interactive\n            ? \"button\"\n            : undefined;\n    const hasContent = !!(description || hasContentEnd || hasContentStart || heading || icon);\n    const hasOnlyContentTopAndBottom = !hasContent && hasContentTop && hasContentBottom;\n    return (\n      <div\n        aria-checked={\n          selectionMode !== \"none\" && interactive ? toAriaBoolean(this.selected) : undefined\n        }\n        aria-disabled={disableInteraction ? toAriaBoolean(disabled) : undefined}\n        aria-label={role && this.label}\n        class={{\n          [CSS.container]: true,\n          [CSS.interactive]: interactive,\n          // [Deprecated] Use the content-top slot for rendering icon with alignment=\"center\" instead\n          [CSS.largeVisualDeprecated]: isLargeVisual,\n          [CSS.row]: true,\n          [CSS.selected]: this.selected,\n        }}\n        onClick={this.clickHandler}\n        ref={this.setContainerEl}\n        role={role}\n        tabIndex={disableInteraction ? undefined : 0}\n      >\n        {this.renderSelectionIcon()}\n        <div\n          class={{\n            [CSS.contentContainer]: true,\n            [CSS.contentContainerHasContent]: hasContent,\n            [CSS.contentContainerHasOnlyContentTopAndBottom]: hasOnlyContentTopAndBottom,\n          }}\n        >\n          <slot\n            data-name=\"ContentTop\"\n            name={SLOTS.contentTop}\n            onSlotchange={this.handleSlotChange}\n          />\n          {icon && <calcite-icon class={CSS.icon} flipRtl={iconFlipRtl} icon={icon} scale=\"l\" />}\n          <div class={{ [CSS.textContentContainer]: true, [CSS.row]: true }}>\n            <slot\n              data-name=\"ContentStart\"\n              name={SLOTS.contentStart}\n              onSlotchange={this.handleSlotChange}\n            />\n            <div class={CSS.textContent}>\n              {heading && <div class={CSS.heading}>{heading}</div>}\n              {description && <div class={CSS.description}>{description}</div>}\n            </div>\n            <slot\n              data-name=\"ContentEnd\"\n              name={SLOTS.contentEnd}\n              onSlotchange={this.handleSlotChange}\n            />\n          </div>\n          <slot\n            data-name=\"ContentBottom\"\n            name={SLOTS.contentBottom}\n            onSlotchange={this.handleSlotChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        {this.href ? (\n          <calcite-link disabled={disabled} href={this.href}>\n            {this.renderTile()}\n          </calcite-link>\n        ) : (\n          this.renderTile()\n        )}\n      </InteractiveContainer>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}