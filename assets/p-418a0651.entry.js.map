{"version":3,"names":["CSS","dialog","panel","scrim","container","containerOpen","containerEmbedded","content","openingIdle","openingActive","closingIdle","closingActive","SLOTS","actionBar","alerts","contentTop","contentBottom","headerActionsStart","headerActionsEnd","headerMenuActions","headerContent","fab","footer","footerStart","footerEnd","dialogCss","CalciteDialogStyle0","totalOpenDialogs","initialDocumentOverflowStyle","Dialog","this","openTransitionProp","ignoreOpenChange","mutationObserver","createObserver","handleMutationObserver","setTransitionEl","el","transitionEl","openEnd","setFocus","removeEventListener","handleScroll","calciteDialogScroll","emit","handleCloseClick","open","handleOutsideClose","closeDialog","async","beforeClose","_error","requestAnimationFrame","opened","updateOverflowHiddenClass","embedded","modal","addOverflowHiddenClass","removeOverflowHiddenClass","updateFocusTrapElements","onMessagesChange","onModalChange","componentWillLoad","setUpMessages","setUpLoadableComponent","openDialog","componentDidLoad","setComponentLoaded","connectedCallback","observe","childList","subtree","connectLocalized","connectMessages","connectFocusTrap","disconnectedCallback","disconnect","deactivateFocusTrap","disconnectLocalized","disconnectMessages","render","description","heading","h","Host","key","toAriaBoolean","role","class","onClick","ref","name","closable","closeDisabled","closed","headingLevel","loading","menuOpen","messageOverrides","onCalcitePanelClose","onCalcitePanelScroll","overlayPositioning","panelEl","scale","slot","PANEL_SLOTS","effectiveLocaleChange","updateMessages","effectiveLocale","handleEscape","event","defaultPrevented","preventDefault","componentFocusable","focusFirstTabbable","scrollContentTo","options","onBeforeOpen","classList","add","calciteDialogBeforeOpen","onOpen","remove","calciteDialogOpen","activateFocusTrap","onBeforeClose","calciteDialogBeforeClose","onClose","calciteDialogClose","toggleDialog","value","handleOpenedChange","idleClass","onToggleOpenCloseComponent","componentOnReady","addEventListener","document","documentElement","style","overflow","setProperty"],"sources":["src/components/dialog/resources.ts","src/components/dialog/dialog.scss?tag=calcite-dialog&encapsulation=shadow","src/components/dialog/dialog.tsx"],"sourcesContent":["import { DialogPlacement } from \"./interfaces\";\n\nexport const CSS = {\n  dialog: \"dialog\",\n  panel: \"panel\",\n  scrim: \"scrim\",\n  container: \"container\",\n  containerOpen: \"container--open\",\n  containerEmbedded: \"container--embedded\",\n  content: \"content\",\n\n  // these classes help apply the animation in phases to only set transform on open/close\n  // this helps avoid a positioning issue for any floating-ui-owning children\n  openingIdle: \"dialog--opening-idle\",\n  openingActive: \"dialog--opening-active\",\n  closingIdle: \"dialog--closing-idle\",\n  closingActive: \"dialog--closing-active\",\n};\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  alerts: \"alerts\",\n  content: \"content\",\n  contentTop: \"content-top\",\n  contentBottom: \"content-bottom\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n};\n\nexport const dialogPlacements: DialogPlacement[] = [\n  \"top\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"cover\",\n  \"center\",\n];\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-dialog-scrim-background-color: Specifies the background color of the component's scrim.\n * @prop --calcite-dialog-size-x: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Does not exceed the viewport's width - applies when `placement=\"cover\"` is set.\n * @prop --calcite-dialog-size-y: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Does not exceed the viewport's height - applies when `placement=\"cover\"` is set.\n * @prop --calcite-dialog-content-space: Specifies the padding of the component's content.\n * @prop --calcite-dialog-footer-space: Specifies the padding of the component's footer.\n * @prop --calcite-dialog-border-color: Specifies the component's border color.\n */\n\n:host {\n  // the dialog should always use a dark scrim, regardless of light / dark mode - matches value in global.scss\n  --calcite-dialog-scrim-background-color: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n  @apply flex\n    inset-0\n    z-overlay\n    pointer-events-none;\n}\n\n:host([modal]) {\n  @apply absolute;\n}\n\n.container {\n  @apply text-color-2\n    pointer-events-auto\n    fixed\n    inset-0\n    flex\n    items-center\n    justify-center\n    overflow-y-hidden\n    opacity-0\n    z-overlay;\n  visibility: hidden;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n}\n\n:host([placement=\"top\"]) .container {\n  @apply justify-center\n    items-start;\n}\n\n:host([placement=\"top-start\"]) .container {\n  @apply justify-start\n    items-start;\n}\n\n:host([placement=\"top-end\"]) .container {\n  @apply justify-end\n    items-start;\n}\n\n:host([placement=\"bottom\"]) .container {\n  @apply justify-center\n    items-end;\n}\n\n:host([placement=\"bottom-start\"]) .container {\n  @apply justify-start\n    items-end;\n}\n\n:host([placement=\"bottom-end\"]) .container {\n  @apply justify-end\n    items-end;\n}\n\n:host(:not([modal])) .container {\n  @apply pointer-events-none;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-internal-dialog-content-padding: var(--calcite-spacing-sm);\n  --calcite-internal-dialog-padding: theme(\"spacing.3\");\n  --calcite-internal-dialog-padding-large: theme(\"spacing.4\");\n  --calcite-internal-dialog-title-text: theme(\"fontSize.1h\");\n  --calcite-internal-dialog-content-text: theme(\"fontSize.n1\");\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-dialog-content-padding: var(--calcite-spacing-md);\n  --calcite-internal-dialog-padding: theme(\"spacing.4\");\n  --calcite-internal-dialog-padding-large: theme(\"spacing.5\");\n  --calcite-internal-dialog-title-text: theme(\"fontSize.2h\");\n  --calcite-internal-dialog-content-text: theme(\"fontSize.0\");\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-dialog-content-padding: var(--calcite-spacing-lg);\n  --calcite-internal-dialog-padding: theme(\"spacing.5\");\n  --calcite-internal-dialog-padding-large: theme(\"spacing.6\");\n  --calcite-internal-dialog-title-text: theme(\"fontSize.3h\");\n  --calcite-internal-dialog-content-text: theme(\"fontSize.1\");\n}\n\n.scrim {\n  // todo: remove once https://github.com/Esri/calcite-design-system/pull/9816 is merged\n  --calcite-scrim-background: var(--calcite-dialog-scrim-background-color, var(--calcite-color-transparent-scrim));\n  --calcite-scrim-background-color: var(\n    --calcite-dialog-scrim-background-color,\n    var(--calcite-color-transparent-scrim)\n  );\n  @apply fixed\n    inset-0\n    flex\n    overflow-y-hidden;\n}\n\ncalcite-panel {\n  --calcite-panel-footer-padding: var(--calcite-dialog-footer-space);\n  --calcite-panel-header-border-block-end: var(--calcite-border-width-sm) solid var(--calcite-dialog-border-color);\n}\n\n.content {\n  padding: var(--calcite-dialog-content-space, var(--calcite-internal-dialog-content-padding));\n}\n\n.dialog {\n  @apply pointer-events-none\n    float-none\n    m-6\n    box-border\n    flex\n    w-full\n    flex-col\n    opacity-0\n    shadow-2-sm\n    z-modal\n    rounded;\n  -webkit-overflow-scrolling: touch;\n  visibility: hidden;\n  transition:\n    transform var(--calcite-internal-animation-timing-slow) $easing-function,\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n\n  --calcite-internal-dialog-hidden-position: translate3d(0, 20px, 0);\n  --calcite-internal-dialog-shown-position: translate3d(0, 0, 0);\n\n  &--opening {\n    &-idle {\n      transform: var(--calcite-internal-dialog-hidden-position);\n    }\n    &-active {\n      transform: var(--calcite-internal-dialog-shown-position);\n    }\n  }\n\n  &--closing {\n    &-idle {\n      transform: var(--calcite-internal-dialog-shown-position);\n    }\n    &-active {\n      transform: var(--calcite-internal-dialog-hidden-position);\n    }\n  }\n}\n\n:host([menu-open]) .dialog {\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n}\n\n.panel {\n  @apply rounded;\n}\n\n.container--open {\n  @apply opacity-100;\n  visibility: visible;\n  transition-delay: 0ms;\n  .dialog {\n    @apply pointer-events-auto\n      visible\n      opacity-100;\n    transition:\n      transform var(--calcite-internal-animation-timing-slow) $easing-function,\n      visibility 0ms linear,\n      opacity var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-inline-size var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-block-size var(--calcite-internal-animation-timing-slow) $easing-function;\n    transition-delay: 0ms;\n  }\n}\n\n/**\n * Sizes\n */\n@mixin dialog-size($size, $width) {\n  :host([width-scale=\"#{$size}\"]) .dialog {\n    @apply max-h-full\n      max-w-full;\n    inline-size: var(--calcite-dialog-size-x, $width);\n    block-size: var(--calcite-dialog-size-y, auto);\n  }\n\n  @media screen and (max-width: $width + 2 * $baseline) {\n    :host([width-scale=\"#{$size}\"]) {\n      .dialog {\n        @apply m-0\n          h-full\n          max-h-full\n          w-full\n          max-w-full;\n      }\n    }\n  }\n}\n\n:host([width=\"small\"]) .dialog {\n  @apply w-auto;\n}\n\n@include dialog-size(\"s\", 32rem);\n@include dialog-size(\"m\", 48rem);\n@include dialog-size(\"l\", 94rem);\n\n/**\n * placement=\"cover\"\n */\n:host([placement=\"cover\"]) {\n  .dialog {\n    @apply m-0\n      max-h-full\n      max-w-full\n      h-full\n      w-full\n      rounded-none;\n    --calcite-internal-dialog-hidden-position: translate3D(0, 20px, 0) scale(0.95);\n    --calcite-internal-dialog-shown-position: translate3D(0, 0, 0) scale(1);\n  }\n  .panel {\n    @apply rounded-none;\n  }\n}\n\n/**\n * Kinds\n */\n:host([kind]) .panel {\n  @apply rounded-t-none;\n}\n:host([kind=\"brand\"]) .dialog {\n  @apply border-color-brand;\n}\n\n:host([kind=\"danger\"]) .dialog {\n  @apply border-color-danger;\n}\n\n:host([kind=\"info\"]) .dialog {\n  @apply border-color-info;\n}\n\n:host([kind=\"success\"]) .dialog {\n  @apply border-color-success;\n}\n\n:host([kind=\"warning\"]) .dialog {\n  @apply border-color-warning;\n}\n\n:host([kind=\"brand\"][open]),\n:host([kind=\"danger\"][open]),\n:host([kind=\"info\"][open]),\n:host([kind=\"success\"][open]),\n:host([kind=\"warning\"][open]) {\n  .dialog {\n    @apply border-0\n      border-t-4\n      border-solid;\n  }\n}\n\n.container--embedded {\n  position: absolute;\n  pointer-events: auto;\n  calcite-scrim {\n    position: absolute;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { focusFirstTabbable, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Kind, Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { componentOnReady } from \"../../utils/component\";\nimport { SLOTS as PANEL_SLOTS } from \"../panel/resources\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { OverlayPositioning } from \"../../components\";\nimport { DialogMessages } from \"./assets/dialog/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { DialogPlacement } from \"./interfaces\";\n\nlet totalOpenDialogs: number = 0;\nlet initialDocumentOverflowStyle: string = \"\";\n\n/**\n * @slot - A slot for adding content.\n * @slot content - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot alerts - A slot for adding `calcite-alert`s to the component.\n * @slot content-bottom - A slot for adding content below the unnamed (default) slot and - if populated - the `footer` slot.\n * @slot content-top - A slot for adding content above the unnamed (default) slot and - if populated - below the `action-bar` slot.\n * @slot header-actions-start - A slot for adding actions or content to the starting side of the component's header.\n * @slot header-actions-end - A slot for adding actions or content to the ending side of the component's header.\n * @slot header-content - A slot for adding custom content to the component's header.\n * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer - A slot for adding custom content to the component's footer. Should not be used with the `\"footer-start\"` or `\"footer-end\"` slots.\n * @slot footer-end - A slot for adding a trailing footer custom content. Should not be used with the `\"footer\"` slot.\n * @slot footer-start - A slot for adding a leading footer custom content. Should not be used with the `\"footer\"` slot.\n */\n\n@Component({\n  tag: \"calcite-dialog\",\n  styleUrl: \"dialog.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Dialog\n  implements\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: () => Promise<void>;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /** When `true`, disables the component's close button. */\n  @Prop({ reflect: true }) closeDisabled = false;\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) embedded = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Specifies the kind of the component, which will style the top border. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"info\" | \"success\" | \"warning\", Kind>;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DialogMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<DialogMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** When `true`, displays a scrim blocking interaction underneath the component.  */\n  @Prop({ reflect: true }) modal = false;\n\n  @Watch(\"modal\")\n  onModalChange(): void {\n    this.updateOverflowHiddenClass();\n  }\n\n  /** When `true`, displays and positions the component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Specifies the placement of the dialog.\n   */\n  @Prop({ reflect: true }) placement: DialogPlacement = \"center\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) widthScale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    // when dialog initially renders, if active was set we need to open as watcher doesn't fire\n    if (this.open) {\n      this.openDialog();\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n  }\n\n  disconnectedCallback(): void {\n    this.removeOverflowHiddenClass();\n    this.mutationObserver?.disconnect();\n    deactivateFocusTrap(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.embedded = false;\n  }\n\n  render(): VNode {\n    const { description, heading, opened } = this;\n    return (\n      <Host\n        aria-description={description}\n        aria-label={heading}\n        aria-modal={toAriaBoolean(this.modal)}\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerOpen]: opened,\n            [CSS.containerEmbedded]: this.embedded,\n          }}\n        >\n          {this.modal ? (\n            <calcite-scrim class={CSS.scrim} onClick={this.handleOutsideClose} />\n          ) : null}\n          <div class={CSS.dialog} ref={this.setTransitionEl}>\n            <slot name={SLOTS.content}>\n              <calcite-panel\n                beforeClose={this.beforeClose}\n                class={CSS.panel}\n                closable={!this.closeDisabled}\n                closed={!opened}\n                description={description}\n                heading={heading}\n                headingLevel={this.headingLevel}\n                loading={this.loading}\n                menuOpen={this.menuOpen}\n                messageOverrides={this.messageOverrides}\n                onCalcitePanelClose={this.handleCloseClick}\n                onCalcitePanelScroll={this.handleScroll}\n                overlayPositioning={this.overlayPositioning}\n                ref={(el) => (this.panelEl = el)}\n                scale={this.scale}\n              >\n                <slot name={SLOTS.actionBar} slot={PANEL_SLOTS.actionBar} />\n                <slot name={SLOTS.alerts} slot={PANEL_SLOTS.alerts} />\n                <slot name={SLOTS.headerActionsStart} slot={PANEL_SLOTS.headerActionsStart} />\n                <slot name={SLOTS.headerActionsEnd} slot={PANEL_SLOTS.headerActionsEnd} />\n                <slot name={SLOTS.headerContent} slot={PANEL_SLOTS.headerContent} />\n                <slot name={SLOTS.headerMenuActions} slot={PANEL_SLOTS.headerMenuActions} />\n                <slot name={SLOTS.fab} slot={PANEL_SLOTS.fab} />\n                <slot name={SLOTS.contentTop} slot={PANEL_SLOTS.contentTop} />\n                <slot name={SLOTS.contentBottom} slot={PANEL_SLOTS.contentBottom} />\n                <slot name={SLOTS.footerStart} slot={PANEL_SLOTS.footerStart} />\n                <slot name={SLOTS.footer} slot={PANEL_SLOTS.footer} />\n                <slot name={SLOTS.footerEnd} slot={PANEL_SLOTS.footerEnd} />\n                <div class={CSS.content}>\n                  <slot />\n                </div>\n              </calcite-panel>\n            </slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDialogElement;\n\n  @State() opened = false;\n\n  @State() hasFooter = true;\n\n  @State() hasContentTop = false;\n\n  @State() hasContentBottom = false;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: DialogMessages;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  focusTrap: FocusTrap;\n\n  private panelEl: HTMLCalcitePanelElement;\n\n  private ignoreOpenChange = false;\n\n  private mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.handleMutationObserver(),\n  );\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\", { target: \"window\" })\n  handleEscape(event: KeyboardEvent): void {\n    if (this.open && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.open = false;\n      event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteDialogBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteDialogClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteDialogBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteDialogOpen: EventEmitter<void>;\n\n  /** Fires when the content is scrolled. */\n  @Event({ cancelable: false }) calciteDialogScroll: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's \"close\" button (the first focusable item).\n   *\n   * @returns {Promise<void>} - A promise that is resolved when the operation has completed.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    return this.panelEl?.setFocus() ?? focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    await this.panelEl?.scrollContentTo(options);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onBeforeOpen(): void {\n    this.transitionEl.classList.add(CSS.openingActive);\n    this.calciteDialogBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.transitionEl.classList.remove(CSS.openingIdle, CSS.openingActive);\n    this.calciteDialogOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.transitionEl.classList.add(CSS.closingActive);\n    this.calciteDialogBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.transitionEl.classList.remove(CSS.closingIdle, CSS.closingActive);\n    this.calciteDialogClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  @Watch(\"open\")\n  toggleDialog(value: boolean): void {\n    if (this.ignoreOpenChange) {\n      return;\n    }\n\n    if (value) {\n      this.openDialog();\n    } else {\n      this.closeDialog();\n    }\n  }\n\n  @Watch(\"opened\")\n  handleOpenedChange(value: boolean): void {\n    const idleClass = value ? CSS.openingIdle : CSS.closingIdle;\n    this.transitionEl.classList.add(idleClass);\n    onToggleOpenCloseComponent(this);\n  }\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  private openEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calciteDialogOpen\", this.openEnd);\n  };\n\n  private handleScroll = (): void => {\n    this.calciteDialogScroll.emit();\n  };\n\n  private handleCloseClick = () => {\n    this.open = false;\n  };\n\n  private async openDialog(): Promise<void> {\n    await componentOnReady(this.el);\n    this.el.addEventListener(\"calciteDialogOpen\", this.openEnd);\n    this.opened = true;\n    this.updateOverflowHiddenClass();\n  }\n\n  private handleOutsideClose = (): void => {\n    this.open = false;\n  };\n\n  private closeDialog = async (): Promise<void> => {\n    if (this.beforeClose) {\n      try {\n        await this.beforeClose();\n      } catch (_error) {\n        // close prevented\n        requestAnimationFrame(() => {\n          this.ignoreOpenChange = true;\n          this.open = true;\n          this.ignoreOpenChange = false;\n        });\n        return;\n      }\n    }\n\n    totalOpenDialogs--;\n    this.opened = false;\n    this.updateOverflowHiddenClass();\n  };\n\n  private updateOverflowHiddenClass = (): void => {\n    this.opened && !this.embedded && this.modal\n      ? this.addOverflowHiddenClass()\n      : this.removeOverflowHiddenClass();\n  };\n\n  private addOverflowHiddenClass(): void {\n    if (totalOpenDialogs === 0) {\n      initialDocumentOverflowStyle = document.documentElement.style.overflow;\n    }\n\n    totalOpenDialogs++;\n    // use an inline style instead of a utility class to avoid global class declarations.\n    document.documentElement.style.setProperty(\"overflow\", \"hidden\");\n  }\n\n  private removeOverflowHiddenClass(): void {\n    document.documentElement.style.setProperty(\"overflow\", initialDocumentOverflowStyle);\n  }\n\n  private handleMutationObserver = (): void => {\n    this.updateFocusTrapElements();\n  };\n}\n"],"mappings":"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","ignoreList":[]}