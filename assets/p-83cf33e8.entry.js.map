{"version":3,"names":["CSS","container","header","heading","close","imageFrame","content","info","ICONS","SLOTS","thumbnail","tipCss","CalciteTipStyle0","logger","deprecated","name","removalVersion","suggested","Tip","this","hideTip","closed","calciteTipDismiss","emit","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectConditionalSlotComponent","connectLocalized","connectMessages","componentWillLoad","setUpMessages","disconnectedCallback","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","renderHeader","headingLevel","el","parentLevel","closest","relativeLevel","constrainHeadingLevel","level","h","class","Heading","renderDismissButton","closeDisabled","icon","onClick","scale","text","messages","renderImageFrame","getSlotted","key","renderInfoNode","renderContent","render","Fragment","tipGroupCss","CalciteTipGroupStyle0","TipGroup","tipContainer","tipContainerAdvancing","tipContainerRetreating","pagination","pagePosition","pageNext","pagePrevious","chevronLeft","chevronRight","tipManagerCss","CalciteTipManagerStyle0","TipManager","mutationObserver","createObserver","setUpTips","hideTipManager","calciteTipManagerClose","previousClicked","previousTip","nextClicked","nextTip","tipManagerKeyDownHandler","event","target","preventDefault","selectedIndex","total","storeContainerRef","closedChangeHandler","direction","selectedChangeHandler","showSelectedTip","updateGroupTitle","observe","childList","subtree","disconnect","nextIndex","previousIndex","tips","Array","from","querySelectorAll","length","selectedTip","querySelector","indexOf","forEach","tip","index","isSelected","selected","hidden","tipParent","groupTitle","defaultGroupTitle","renderPagination","dir","getElementDir","nextLabel","next","previousLabel","previous","paginationLabel","defaultPaginationLabel","closeLabel","toAriaBoolean","onKeyDown","ref","tabIndex"],"sources":["src/components/tip/resources.ts","src/components/tip/tip.scss?tag=calcite-tip&encapsulation=shadow","src/components/tip/tip.tsx","src/components/tip-group/tip-group.scss?tag=calcite-tip-group&encapsulation=shadow","src/components/tip-group/tip-group.tsx","src/components/tip-manager/resources.ts","src/components/tip-manager/tip-manager.scss?tag=calcite-tip-manager&encapsulation=shadow","src/components/tip-manager/tip-manager.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  header: \"header\",\n  heading: \"heading\",\n  close: \"close\",\n  imageFrame: \"image-frame\",\n  content: \"content\",\n  info: \"info\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n} as const;\n\nexport const SLOTS = {\n  thumbnail: \"thumbnail\",\n};\n",":host {\n  @apply border-color-2\n    bg-foreground-1\n    text-color-2\n    text-n1h\n    relative\n    m-4\n    box-border\n    flex\n    flex-row\n    border\n    border-solid;\n\n  * {\n    @apply box-border;\n  }\n}\n\n.container {\n  @apply w-full p-4;\n}\n\n:host([closed]),\n:host([closed]) .container {\n  @apply hidden;\n}\n\n:host([selected]) .container {\n  @apply m-0 border-none p-0;\n}\n\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply mb-2;\n}\n.header .heading {\n  @apply text-0h text-color-1 p-0;\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.content {\n  @apply flex;\n}\n\n.info {\n  @apply py-0 px-4;\n  inline-size: 70%;\n  &:only-child {\n    @apply w-full px-0;\n  }\n}\n\n::slotted(p) {\n  @apply mt-0;\n}\n\n::slotted(a) {\n  @apply focus-base;\n  color: theme(\"backgroundColor.brand\");\n}\n\n::slotted(a:focus) {\n  @apply focus-outset;\n}\n\n.image-frame {\n  inline-size: theme(\"width[1/4]\");\n  img {\n    @apply max-w-full;\n  }\n}\n\n::slotted(img) {\n  @apply max-w-full;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { constrainHeadingLevel, Heading, HeadingLevel } from \"../functional/Heading\";\nimport { logger } from \"../../utils/logger\";\nimport { TipMessages } from \"./assets/tip/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"tip\",\n  removalVersion: 4,\n  suggested: [\"card\", \"notice\", \"panel\", \"tile\"],\n});\n\n/**\n * @deprecated Use the `calcite-card`, `calcite-notice`, `calcite-panel`, or `calcite-tile` component instead.\n * @slot - A slot for adding text and a hyperlink.\n * @slot thumbnail - A slot for adding an HTML image element.\n */\n@Component({\n  tag: \"calcite-tip\",\n  styleUrl: \"tip.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Tip implements ConditionalSlotComponent, LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * When `true`, the component does not display.\n   */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /**\n   * When `true`, the close button is not present on the component.\n   */\n  @Prop({ reflect: true }) closeDisabled = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, the component is selected if it has a parent `calcite-tip-manager`.\n   *\n   * Only one tip can be selected within the `calcite-tip-manager` parent.\n   */\n  @Prop({ reflect: true }) selected = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TipMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TipMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTipElement;\n\n  @State() defaultMessages: TipMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emits when the component has been closed.\n   */\n  @Event({ cancelable: false }) calciteTipDismiss: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  hideTip = (): void => {\n    this.closed = true;\n\n    this.calciteTipDismiss.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeader(): VNode {\n    const { heading, headingLevel, el } = this;\n    const parentLevel = el.closest(\"calcite-tip-manager\")?.headingLevel;\n    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;\n    const level = headingLevel || relativeLevel;\n\n    return heading ? (\n      <header class={CSS.header}>\n        <Heading class={CSS.heading} level={level}>\n          {heading}\n        </Heading>\n      </header>\n    ) : null;\n  }\n\n  renderDismissButton(): VNode {\n    const { closeDisabled, hideTip } = this;\n    return !closeDisabled ? (\n      <calcite-action\n        class={CSS.close}\n        icon={ICONS.close}\n        onClick={hideTip}\n        scale=\"l\"\n        text={this.messages.close}\n      />\n    ) : null;\n  }\n\n  renderImageFrame(): VNode {\n    const { el } = this;\n\n    return getSlotted(el, SLOTS.thumbnail) ? (\n      <div class={CSS.imageFrame} key=\"thumbnail\">\n        <slot name={SLOTS.thumbnail} />\n      </div>\n    ) : null;\n  }\n\n  renderInfoNode(): VNode {\n    return (\n      <div class={CSS.info}>\n        <slot />\n      </div>\n    );\n  }\n\n  renderContent(): VNode {\n    return (\n      <div class={CSS.content}>\n        {this.renderImageFrame()}\n        {this.renderInfoNode()}\n      </div>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <article class={CSS.container}>\n          {this.renderHeader()}\n          {this.renderContent()}\n        </article>\n        {this.renderDismissButton()}\n      </Fragment>\n    );\n  }\n}\n",":host {\n  @apply bg-foreground-1\n    text-color-2\n    text-n1h\n    box-border\n    block;\n}\n\n::slotted(calcite-tip) {\n  @apply m-0 border-none;\n  max-inline-size: var(--calcite-tip-max-width);\n}\n\n@include base-component();\n","import { Component, h, Prop, VNode } from \"@stencil/core\";\nimport { logger } from \"../../utils/logger\";\n\nlogger.deprecated(\"component\", {\n  name: \"tip-group\",\n  removalVersion: 4,\n  suggested: [\"carousel\", \"carousel-item\"],\n});\n\n/**\n * @deprecated Use the `calcite-carousel` and `calcite-carousel-item` components instead.\n * @slot - A slot for adding `calcite-tip`s.\n */\n@Component({\n  tag: \"calcite-tip-group\",\n  styleUrl: \"tip-group.scss\",\n  shadow: true,\n})\nexport class TipGroup {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * The component header text for all nested `calcite-tip`s.\n   *\n   */\n  @Prop() groupTitle: string;\n\n  render(): VNode {\n    return <slot />;\n  }\n}\n","export const CSS = {\n  header: \"header\",\n  heading: \"heading\",\n  close: \"close\",\n  container: \"container\",\n  tipContainer: \"tip-container\",\n  tipContainerAdvancing: \"tip-container--advancing\",\n  tipContainerRetreating: \"tip-container--retreating\",\n  pagination: \"pagination\",\n  pagePosition: \"page-position\",\n  pageNext: \"page-next\",\n  pagePrevious: \"page-previous\",\n};\n\nexport const ICONS = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n  close: \"x\",\n} as const;\n\nexport const TEXT = {\n  defaultGroupTitle: \"Tips\",\n  defaultPaginationLabel: \"Tip\",\n  close: \"Close\",\n  previous: \"Previous\",\n  next: \"Next\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tip-manager-height: The maximum height of the component.\n * @prop --calcite-tip-max-width: The maximum width of a slotted `calcite-tip` within the component.\n */\n\n:host {\n  @apply bg-foreground-1\n  text-color-2\n  text-n1h\n  box-border\n  block;\n\n  * {\n    @apply box-border;\n  }\n\n  --calcite-tip-manager-height: 19vh;\n}\n\n:host([closed]) {\n  @apply hidden;\n}\n\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply border-color-3\n    border-0\n    border-b\n    border-solid\n    py-0;\n\n  padding-inline-end: theme(\"padding.0\");\n  padding-inline-start: theme(\"padding.4\");\n\n  .heading {\n    @apply text-color-1\n      text-1h\n      p-0\n      font-bold;\n  }\n}\n\n.container {\n  @apply focus-base\n    relative\n    overflow-hidden;\n  min-block-size: 150px;\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.tip-container {\n  @apply focus-base\n    mt-px\n    flex\n    items-start\n    justify-center\n    overflow-auto\n    p-4;\n  animation-name: none;\n  animation-duration: var(--calcite-animation-timing);\n  block-size: var(--calcite-tip-manager-height);\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n::slotted(calcite-tip) {\n  @apply m-0 border-none;\n  max-inline-size: var(--calcite-tip-max-width);\n}\n\n.tip-container--advancing {\n  animation-name: tip-advance;\n}\n\n.tip-container--retreating {\n  animation-name: tip-retreat;\n}\n\n/* Pagination Styles*/\n.pagination {\n  @apply flex\n  items-center\n  justify-center\n  px-0\n  pt-3\n  pb-2;\n}\n\n.page-position {\n  @apply text-n2h my-0 mx-2;\n}\n\n/* @keyframes*/\n@keyframes tip-advance {\n  0% {\n    @apply opacity-0;\n    transform: translate3d(50px, 0, 0) scale(0.99);\n  }\n  100% {\n    @apply opacity-100;\n    transform: translate3d(0, 0, 0) scale(1);\n  }\n}\n@keyframes tip-retreat {\n  0% {\n    @apply opacity-0;\n    transform: translate3d(-50px, 0, 0) scale(0.99);\n  }\n  100% {\n    @apply opacity-100;\n    transform: translate3d(0, 0, 0) scale(1);\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { logger } from \"../../utils/logger\";\nimport { TipManagerMessages } from \"./assets/tip-manager/t9n\";\nimport { CSS, ICONS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"tip-manager\",\n  removalVersion: 4,\n  suggested: \"carousel\",\n});\n\n/**\n * @deprecated Use the `calcite-carousel` and `calcite-carousel-item` components instead.\n * @slot - A slot for adding `calcite-tip`s.\n */\n@Component({\n  tag: \"calcite-tip-manager\",\n  styleUrl: \"tip-manager.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TipManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * When `true`, does not display or position the component.\n   */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  closedChangeHandler(): void {\n    this.direction = null;\n  }\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TipManagerMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TipManagerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTipManagerElement;\n\n  @State() selectedIndex: number;\n\n  @Watch(\"selectedIndex\")\n  selectedChangeHandler(): void {\n    this.showSelectedTip();\n    this.updateGroupTitle();\n  }\n\n  @State() tips: HTMLCalciteTipElement[];\n\n  @State() total: number;\n\n  @State() direction: \"advancing\" | \"retreating\";\n\n  @State() groupTitle: string;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setUpTips());\n\n  container: HTMLDivElement;\n\n  @State() defaultMessages: TipManagerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  async effectiveLocaleChange(): Promise<void> {\n    await updateMessages(this, this.effectiveLocale);\n    this.updateGroupTitle();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.setUpTips();\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    this.updateGroupTitle();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Selects the next `calcite-tip` to display. */\n  @Method()\n  async nextTip(): Promise<void> {\n    this.direction = \"advancing\";\n    const nextIndex = this.selectedIndex + 1;\n    this.selectedIndex = (nextIndex + this.total) % this.total;\n  }\n\n  /** Selects the previous `calcite-tip` to display. */\n  @Method()\n  async previousTip(): Promise<void> {\n    this.direction = \"retreating\";\n    const previousIndex = this.selectedIndex - 1;\n    this.selectedIndex = (previousIndex + this.total) % this.total;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emits when the component has been closed.\n   */\n  @Event({ cancelable: false }) calciteTipManagerClose: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setUpTips(): void {\n    const tips = Array.from(this.el.querySelectorAll(\"calcite-tip\"));\n    this.total = tips.length;\n    if (this.total === 0) {\n      return;\n    }\n    const selectedTip = this.el.querySelector<HTMLCalciteTipElement>(\"calcite-tip[selected]\");\n\n    this.tips = tips;\n    this.selectedIndex = selectedTip ? tips.indexOf(selectedTip) : 0;\n\n    tips.forEach((tip: HTMLCalciteTipElement) => {\n      tip.closeDisabled = true;\n    });\n    this.showSelectedTip();\n  }\n\n  hideTipManager = (): void => {\n    this.closed = true;\n    this.calciteTipManagerClose.emit();\n  };\n\n  showSelectedTip(): void {\n    this.tips.forEach((tip, index) => {\n      const isSelected = this.selectedIndex === index;\n      tip.selected = isSelected;\n      tip.hidden = !isSelected;\n    });\n  }\n\n  updateGroupTitle(): void {\n    if (this.tips) {\n      const selectedTip = this.tips[this.selectedIndex];\n      const tipParent = selectedTip.closest(\"calcite-tip-group\");\n      this.groupTitle = tipParent?.groupTitle || this.messages?.defaultGroupTitle;\n    }\n  }\n\n  previousClicked = (): void => {\n    this.previousTip();\n  };\n\n  nextClicked = (): void => {\n    this.nextTip();\n  };\n\n  tipManagerKeyDownHandler = (event: KeyboardEvent): void => {\n    if (event.target !== this.container) {\n      return;\n    }\n\n    switch (event.key) {\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.nextTip();\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.previousTip();\n        break;\n      case \"Home\":\n        event.preventDefault();\n        this.selectedIndex = 0;\n        break;\n      case \"End\":\n        event.preventDefault();\n        this.selectedIndex = this.total - 1;\n        break;\n    }\n  };\n\n  storeContainerRef = (el: HTMLDivElement): void => {\n    this.container = el;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderPagination(): VNode {\n    const dir = getElementDir(this.el);\n    const { selectedIndex, tips, total, messages } = this;\n\n    const nextLabel = messages.next;\n    const previousLabel = messages.previous;\n    const paginationLabel = messages.defaultPaginationLabel;\n\n    return tips.length > 1 ? (\n      <footer class={CSS.pagination}>\n        <calcite-action\n          class={CSS.pagePrevious}\n          icon={dir === \"ltr\" ? ICONS.chevronLeft : ICONS.chevronRight}\n          onClick={this.previousClicked}\n          scale=\"m\"\n          text={previousLabel}\n        />\n        <span class={CSS.pagePosition}>{`${paginationLabel} ${selectedIndex + 1}/${total}`}</span>\n        <calcite-action\n          class={CSS.pageNext}\n          icon={dir === \"ltr\" ? ICONS.chevronRight : ICONS.chevronLeft}\n          onClick={this.nextClicked}\n          scale=\"m\"\n          text={nextLabel}\n        />\n      </footer>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { closed, direction, headingLevel, groupTitle, selectedIndex, messages, total } = this;\n\n    const closeLabel = messages.close;\n\n    if (total === 0) {\n      return null;\n    }\n\n    return (\n      <section\n        aria-hidden={toAriaBoolean(closed)}\n        class={CSS.container}\n        hidden={closed}\n        onKeyDown={this.tipManagerKeyDownHandler}\n        ref={this.storeContainerRef}\n        tabIndex={0}\n      >\n        <header class={CSS.header}>\n          <Heading class={CSS.heading} level={headingLevel}>\n            {groupTitle}\n          </Heading>\n          <calcite-action\n            class={CSS.close}\n            onClick={this.hideTipManager}\n            scale=\"m\"\n            text={closeLabel}\n          >\n            <calcite-icon icon={ICONS.close} scale=\"m\" />\n          </calcite-action>\n        </header>\n        <div\n          class={{\n            [CSS.tipContainer]: true,\n            [CSS.tipContainerAdvancing]: !closed && direction === \"advancing\",\n            [CSS.tipContainerRetreating]: !closed && direction === \"retreating\",\n          }}\n          key={selectedIndex}\n          tabIndex={0}\n        >\n          <slot />\n        </div>\n        {this.renderPagination()}\n      </section>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}