{"version":3,"names":["isTreeItem","element","tagName","getTraversableItems","root","Array","from","querySelectorAll","filter","item","currentItem","undefined","parent","parentElement","traversable","hasChildren","expanded","treeCss","CalciteTreeStyle0","Tree","this","keyDownHandler","event","child","el","target","supportedKeys","contains","includes","key","traversableItems","forEach","tabIndex","currentItemIndex","indexOf","nextItem","focus","preventDefault","previousItem","rootToItemPath","slice","reverse","parentItem","find","depth","disabled","firstNode","shift","lastNode","pop","componentWillRender","closest","lines","scale","selectionMode","render","h","Host","toString","onKeyDown","role","getRootTabIndex","onFocus","focusTarget","querySelector","focusElement","onFocusIn","focusedFromRootOrOutsideTree","relatedTarget","removeAttribute","onFocusOut","willFocusOutsideTree","onInternalTreeItemSelect","childItems","nodeListToArray","stopPropagation","updateAncestorTree","isNoneSelectionMode","shouldSelect","shouldDeselectAllChildren","shouldModifyToCurrentSelection","detail","modifyCurrentSelection","shouldClearCurrentSelection","length","shouldUpdateExpand","targetItems","push","selectedItems","treeItem","selected","window","getSelection","removeAllRanges","i","calciteTreeSelect","emit","updateItem","indeterminate","ancestors","childItemsWithNoChildren","childItemsWithChildren","futureSelected","updateItemState","unselected","directChildItems","ancestor","descendants","activeDescendants","CSS","actionsEnd","checkboxLabel","checkbox","chevron","nodeContainer","childrenContainer","bulletPointIcon","checkmarkIcon","itemExpanded","iconStart","nodeAndActionsContainer","SLOTS","children","ICONS","bulletPoint","checkmark","chevronRight","blank","treeItemCss","CalciteTreeItemStyle0","TreeItem","iconClickHandler","childrenClickHandler","userChangedValue","updateParentIsExpanded","items","getSlotted","all","selector","parentExpanded","actionsEndSlotChangeHandler","hasEndActions","slotChangeHasAssignedElement","expandedHandler","newValue","handleSelectedChange","value","calciteInternalTreeItemSelect","getSelectionMode","isSelectionMultiLike","connectedCallback","parentTreeItem","connectConditionalSlotComponent","connectInteractive","disconnectedCallback","disconnectConditionalSlotComponent","disconnectInteractive","parentTree","nextParentTree","componentWillLoad","requestAnimationFrame","updateAfterInitialRender","componentDidLoad","componentDidRender","updateHostInteraction","rtl","getElementDir","showBulletPoint","showCheckmark","showBlank","class","CSS_UTILITY","icon","onClick","getIconScale","defaultSlotNode","checked","selectedIcon","itemIndicator","hidden","isExpanded","slotNode","name","onSlotchange","iconStartEl","flipRtl","iconFlipRtl","toAriaBoolean","InteractiveContainer","ref","defaultSlotWrapper","actionSlotWrapper","isActionEndEvent","link","filterDirectChildren","composedPath","toLowerCase","open","href","defaultPrevented","matches","click","siblings","selectedSiblings"],"sources":["src/components/tree/utils.ts","src/components/tree/tree.scss?tag=calcite-tree&encapsulation=shadow","src/components/tree/tree.tsx","src/components/tree-item/resources.ts","src/components/tree-item/tree-item.scss?tag=calcite-tree-item&encapsulation=shadow","src/components/tree-item/tree-item.tsx"],"sourcesContent":["export function isTreeItem(element: Element): element is HTMLCalciteTreeItemElement {\n  return element?.tagName === \"CALCITE-TREE-ITEM\";\n}\n\nexport function getTraversableItems(root: HTMLCalciteTreeElement): HTMLCalciteTreeItemElement[] {\n  return Array.from(root.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\")).filter(\n    (item): boolean => {\n      let currentItem: HTMLElement = item;\n\n      while (currentItem !== root && currentItem !== undefined) {\n        const parent = currentItem.parentElement;\n        const traversable = !isTreeItem(parent) || !parent.hasChildren || parent.expanded;\n\n        if (!traversable) {\n          return false;\n        }\n\n        currentItem = currentItem.parentElement;\n      }\n\n      return true;\n    },\n  );\n}\n",":host {\n  @apply block;\n}\n\n:host(:focus) {\n  @apply outline-none;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { focusElement, nodeListToArray } from \"../../utils/dom\";\nimport { Scale, SelectionMode } from \"../interfaces\";\nimport { TreeItemSelectDetail } from \"../tree-item/interfaces\";\nimport { getTraversableItems, isTreeItem } from \"./utils\";\n\n/**\n * @slot - A slot for `calcite-tree-item` elements.\n */\n@Component({\n  tag: \"calcite-tree\",\n  styleUrl: \"tree.scss\",\n  shadow: true,\n})\nexport class Tree {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays indentation guide lines. */\n  @Prop({ mutable: true, reflect: true }) lines = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) child: boolean;\n\n  /** Specifies the size of the component. */\n  @Prop({ mutable: true, reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"ancestors\"` displays with a checkbox and allows any number of selections from corresponding parent and child selections,\n   *\n   * `\"children\"` allows any number of selections from one parent from corresponding parent and child selections,\n   *\n   * `\"multichildren\"` allows any number of selections from corresponding parent and child selections,\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"none\"` allows no selections,\n   *\n   * `\"single\"` allows one selection, and\n   *\n   * `\"single-persist\"` allows and requires one selection.\n   *\n   * @default \"single\"\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode = \"single\";\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteTreeItemElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillRender(): void {\n    const parent: HTMLCalciteTreeElement = this.el.parentElement?.closest(\"calcite-tree\");\n    this.lines = parent ? parent.lines : this.lines;\n    this.scale = parent ? parent.scale : this.scale;\n    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n    this.child = !!parent;\n  }\n\n  render(): VNode {\n    return (\n      <Host\n        aria-multiselectable={\n          this.child\n            ? undefined\n            : (\n                this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\"\n              ).toString()\n        }\n        onKeyDown={this.keyDownHandler}\n        role={!this.child ? \"tree\" : undefined}\n        tabIndex={this.getRootTabIndex()}\n      >\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"focus\") onFocus(): void {\n    if (!this.child) {\n      const focusTarget =\n        this.el.querySelector<HTMLCalciteTreeItemElement>(\n          \"calcite-tree-item[selected]:not([disabled])\",\n        ) || this.el.querySelector<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\");\n\n      focusElement(focusTarget);\n    }\n  }\n\n  @Listen(\"focusin\") onFocusIn(event: FocusEvent): void {\n    const focusedFromRootOrOutsideTree =\n      event.relatedTarget === this.el || !this.el.contains(event.relatedTarget as HTMLElement);\n\n    if (focusedFromRootOrOutsideTree) {\n      // gives user the ability to tab into external elements (modifying tabindex property will not work in firefox)\n      this.el.removeAttribute(\"tabindex\");\n    }\n  }\n\n  @Listen(\"focusout\") onFocusOut(event: FocusEvent): void {\n    const willFocusOutsideTree = !this.el.contains(event.relatedTarget as HTMLElement);\n\n    if (willFocusOutsideTree) {\n      this.el.tabIndex = this.getRootTabIndex();\n    }\n  }\n\n  @Listen(\"calciteInternalTreeItemSelect\")\n  onInternalTreeItemSelect(event: CustomEvent<TreeItemSelectDetail>): void {\n    if (this.child) {\n      return;\n    }\n\n    const target = event.target as HTMLCalciteTreeItemElement;\n    const childItems = nodeListToArray(\n      target.querySelectorAll(\"calcite-tree-item\"),\n    ) as HTMLCalciteTreeItemElement[];\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.selectionMode === \"ancestors\") {\n      this.updateAncestorTree(event);\n      return;\n    }\n\n    const isNoneSelectionMode = this.selectionMode === \"none\";\n\n    const shouldSelect =\n      this.selectionMode !== null &&\n      (!target.hasChildren ||\n        (target.hasChildren &&\n          (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\")));\n\n    const shouldDeselectAllChildren = this.selectionMode === \"multichildren\" && target.hasChildren;\n\n    const shouldModifyToCurrentSelection =\n      !isNoneSelectionMode &&\n      event.detail.modifyCurrentSelection &&\n      (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n\n    const shouldClearCurrentSelection =\n      !shouldModifyToCurrentSelection &&\n      (((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") &&\n        childItems.length <= 0) ||\n        this.selectionMode === \"children\" ||\n        this.selectionMode === \"multichildren\" ||\n        (this.selectionMode === \"single-persist\" && !target.hasChildren));\n\n    const shouldUpdateExpand =\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode) &&\n      target.hasChildren;\n\n    const targetItems: HTMLCalciteTreeItemElement[] = [];\n\n    if (shouldSelect) {\n      targetItems.push(target);\n    }\n\n    if (shouldClearCurrentSelection) {\n      const selectedItems = nodeListToArray(\n        this.el.querySelectorAll(\"calcite-tree-item[selected]\"),\n      ) as HTMLCalciteTreeItemElement[];\n\n      selectedItems.forEach((treeItem) => {\n        if (!targetItems.includes(treeItem)) {\n          treeItem.selected = false;\n        }\n      });\n    }\n\n    if (\n      shouldUpdateExpand &&\n      [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode)\n    ) {\n      target.expanded = !target.expanded;\n    }\n\n    if (shouldDeselectAllChildren) {\n      childItems.forEach((item) => {\n        item.selected = false;\n        if (item.hasChildren) {\n          item.expanded = false;\n        }\n      });\n    }\n\n    if (shouldModifyToCurrentSelection) {\n      window.getSelection().removeAllRanges();\n    }\n\n    if (shouldModifyToCurrentSelection && target.selected) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = false;\n        }\n      });\n    } else if (!isNoneSelectionMode) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = this.selectionMode !== \"single\" || !treeItem.selected;\n        }\n      });\n    }\n\n    this.selectedItems = isNoneSelectionMode\n      ? []\n      : (nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter(\n          (i) => i.selected,\n        ) as HTMLCalciteTreeItemElement[]);\n\n    this.calciteTreeSelect.emit();\n\n    event.stopPropagation();\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.child) {\n      return;\n    }\n\n    const root = this.el;\n    const target = event.target as HTMLCalciteTreeItemElement;\n\n    const supportedKeys = [\"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"ArrowUp\", \"Home\", \"End\", \"Tab\"];\n\n    if (!(isTreeItem(target) && this.el.contains(target)) || !supportedKeys.includes(event.key)) {\n      return;\n    }\n\n    const traversableItems = getTraversableItems(root);\n\n    if (event.key === \"Tab\") {\n      // root tabindex will be restored when blurred/focused\n      traversableItems.forEach((item) => (item.tabIndex = -1));\n      return;\n    }\n\n    if (event.key === \"ArrowDown\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const nextItem = traversableItems[currentItemIndex + 1];\n      nextItem?.focus();\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const previousItem = traversableItems[currentItemIndex - 1];\n      previousItem?.focus();\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowLeft\") {\n      if (target.hasChildren && target.expanded) {\n        target.expanded = false;\n        event.preventDefault();\n        return;\n      }\n\n      const rootToItemPath = traversableItems.slice(0, traversableItems.indexOf(target)).reverse();\n      const parentItem = rootToItemPath.find((item) => item.depth === target.depth - 1);\n\n      parentItem?.focus();\n      event.preventDefault();\n\n      return;\n    }\n\n    if (event.key === \"ArrowRight\") {\n      if (!target.disabled && target.hasChildren) {\n        if (!target.expanded) {\n          target.expanded = true;\n          event.preventDefault();\n        } else {\n          const currentItemIndex = traversableItems.indexOf(target);\n          const nextItem = traversableItems[currentItemIndex + 1];\n          nextItem?.focus();\n          event.preventDefault();\n        }\n      }\n\n      return;\n    }\n\n    if (event.key === \"Home\") {\n      const firstNode = traversableItems.shift();\n      if (firstNode) {\n        firstNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n\n    if (event.key === \"End\") {\n      const lastNode = traversableItems.pop();\n      if (lastNode) {\n        lastNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n  };\n\n  private updateAncestorTree(event: CustomEvent<TreeItemSelectDetail>): void {\n    const item = event.target as HTMLCalciteTreeItemElement;\n    const updateItem = event.detail.updateItem;\n\n    if (item.disabled || (item.indeterminate && !updateItem)) {\n      return;\n    }\n\n    const ancestors: HTMLCalciteTreeItemElement[] = [];\n    let parent = item.parentElement.closest<HTMLCalciteTreeItemElement>(\"calcite-tree-item\");\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.parentElement.closest<HTMLCalciteTreeItemElement>(\"calcite-tree-item\");\n    }\n\n    const childItems = Array.from(\n      item.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n    );\n    const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n    const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n\n    let futureSelected;\n    if (updateItem) {\n      futureSelected = item.hasChildren ? !(item.selected || item.indeterminate) : !item.selected;\n    } else {\n      futureSelected = item.selected;\n    }\n\n    childItemsWithNoChildren.forEach((el) => {\n      el.selected = futureSelected;\n      el.indeterminate = false;\n    });\n\n    function updateItemState(\n      childItems: HTMLCalciteTreeItemElement[],\n      item: HTMLCalciteTreeItemElement,\n    ): void {\n      const selected = childItems.filter((child) => child.selected);\n      const unselected = childItems.filter((child) => !child.selected);\n\n      item.selected = selected.length === childItems.length;\n      item.indeterminate = selected.length > 0 && unselected.length > 0;\n    }\n\n    childItemsWithChildren.reverse().forEach((el) => {\n      const directChildItems = Array.from(\n        el.querySelectorAll<HTMLCalciteTreeItemElement>(\n          \":scope > calcite-tree > calcite-tree-item\",\n        ),\n      );\n\n      updateItemState(directChildItems, el);\n    });\n\n    if (updateItem) {\n      if (item.hasChildren) {\n        updateItemState(childItems, item);\n      } else {\n        item.selected = futureSelected;\n        item.indeterminate = false;\n      }\n    }\n\n    ancestors.forEach((ancestor) => {\n      const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n      const activeDescendants = descendants.filter((el) => el.selected);\n      if (activeDescendants.length === 0) {\n        ancestor.selected = false;\n        ancestor.indeterminate = false;\n        return;\n      }\n\n      const indeterminate = activeDescendants.length < descendants.length;\n      ancestor.indeterminate = indeterminate;\n      ancestor.selected = !indeterminate;\n    });\n\n    this.selectedItems = (\n      nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")) as HTMLCalciteTreeItemElement[]\n    ).filter((i) => i.selected);\n\n    if (updateItem) {\n      this.calciteTreeSelect.emit();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the user selects/deselects `calcite-tree-items`.\n   */\n  @Event({ cancelable: false }) calciteTreeSelect: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  getRootTabIndex(): number {\n    return !this.child ? 0 : -1;\n  }\n}\n","export const CSS = {\n  actionsEnd: \"actions-end\",\n  checkboxLabel: \"checkbox-label\",\n  checkbox: \"checkbox\",\n  chevron: \"chevron\",\n  nodeContainer: \"node-container\",\n  childrenContainer: \"children-container\",\n  bulletPointIcon: \"bullet-point\",\n  checkmarkIcon: \"checkmark\",\n  itemExpanded: \"item--expanded\",\n  iconStart: \"icon-start\",\n  nodeAndActionsContainer: \"node-actions-container\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  children: \"children\",\n};\n\nexport const ICONS = {\n  bulletPoint: \"bullet-point\",\n  checkmark: \"check\",\n  chevronRight: \"chevron-right\",\n  blank: \"blank\",\n} as const;\n",":host {\n  @apply text-color-3\n    block\n    max-w-full\n    cursor-pointer;\n}\n\n.node-actions-container {\n  @apply flex;\n}\n\n@include calciteHydratedHidden();\n@include disabled();\n\n:host([scale=\"s\"]) {\n  @apply text-n2h;\n\n  .node-actions-container {\n    @apply min-h-[1.5rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.1\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding: theme(\"padding.1\");\n      }\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1h;\n\n  .node-actions-container {\n    @apply min-h-[2rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.2\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding: theme(\"padding.2\");\n      }\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0h;\n\n  .node-actions-container {\n    @apply min-h-[2.75rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.3\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding-inline: var(--calcite-size-md);\n        padding-block: var(--calcite-size-sm-plus);\n      }\n    }\n  }\n}\n\n:host([lines]) {\n  .children-container::after {\n    @apply transition-default\n        absolute\n        top-0\n        w-px\n        transition-colors\n        z-default;\n    // ensure lines don't overlap focus outline\n    block-size: 96%;\n    content: \"\";\n    background-color: var(--calcite-color-border-2);\n  }\n}\n\n:host(:not([lines])) .node-container::after {\n  @apply hidden;\n}\n\n::slotted(*) {\n  @apply min-w-0 max-w-full break-words;\n  color: inherit;\n  text-decoration: none !important;\n\n  &:hover {\n    text-decoration: none !important;\n  }\n}\n\n::slotted(a) {\n  @apply w-full no-underline;\n}\n\n// focus styles\n:host {\n  @apply outline-none;\n\n  .node-container {\n    @apply focus-base;\n  }\n  &:focus,\n  &:active {\n    .node-container {\n      @apply focus-inset;\n    }\n  }\n}\n\n:host(:focus:not([disabled])) {\n  .node-container {\n    @apply focus-inset outline-none;\n  }\n}\n\n.actions-end {\n  @apply flex self-stretch flex-row items-center;\n}\n\n.checkbox {\n  line-height: 0;\n}\n\n.checkbox-label {\n  @apply pointer-events-none flex items-center;\n}\n\n.checkbox:focus {\n  @apply outline-none;\n}\n\n.children-container {\n  @apply relative h-0 overflow-hidden opacity-0 origin-top;\n  margin-inline-start: theme(\"margin.5\");\n  transform: scaleY(0);\n  transition:\n    var(--calcite-animation-timing) $easing-function,\n    opacity var(--calcite-animation-timing) $easing-function,\n    all var(--calcite-animation-timing) ease-in-out; // note that we're transitioning transform, not height!\n\n  .item--expanded > & {\n    @apply overflow-visible opacity-100;\n    transform: none;\n    block-size: auto;\n  }\n}\n\n.node-container {\n  @apply relative flex grow items-center min-w-0;\n\n  .checkmark,\n  .bullet-point {\n    @apply transition-default opacity-0;\n    color: var(--calcite-color-border-1);\n  }\n}\n\n.node-container:hover,\n:host([selected]) .node-container:hover,\n:host(:focus:not([disabled])) .node-container {\n  .checkmark,\n  .bullet-point {\n    @apply opacity-100;\n  }\n}\n\n:host([selected]) .node-container,\n:host([selected]) .node-container:hover {\n  @apply font-medium text-color-1;\n\n  .bullet-point,\n  .checkmark {\n    @apply opacity-100;\n    color: theme(\"colors.brand\");\n  }\n}\n\n:host([selection-mode=\"none\"]:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container {\n    padding-inline-start: theme(\"padding.2\");\n  }\n  &:host([scale=\"m\"]) .node-container {\n    padding-inline-start: theme(\"padding.4\");\n  }\n  &:host([scale=\"l\"]) .node-container {\n    padding-inline-start: theme(\"padding.6\");\n  }\n}\n\n// ancestors selection-mode, dropdown without children\n:host(:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.5\");\n  }\n  &:host([scale=\"m\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.6\");\n  }\n  &:host([scale=\"l\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: 1.75rem;\n  }\n}\n// ancestors selection-mode, dropdown with children\n:host([has-children]) .node-container[data-selection-mode=\"ancestors\"] {\n  .checkbox {\n    margin-inline-start: 0;\n  }\n}\n\n// dropdown with children\n:host([has-children]) .node-container {\n  .bullet-point,\n  .checkmark {\n    @apply hidden;\n  }\n}\n\n.chevron {\n  @apply transition-default\n    text-color-3\n    relative\n    self-center;\n  flex: 0 0 auto;\n  transform: rotate(0deg);\n\n  .calcite--rtl & {\n    transform: rotate(180deg);\n  }\n\n  .item--expanded .node-container > & {\n    transform: rotate(90deg);\n  }\n}\n\n:host([selected]) {\n  .checkmark,\n  .bullet-point {\n    color: var(--calcite-color-brand);\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  filterDirectChildren,\n  getElementDir,\n  getSlotted,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { FlipContext, Scale, SelectionMode } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { TreeItemSelectDetail } from \"./interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot children - A slot for adding nested `calcite-tree` elements.\n * @slot actions-end - A slot for adding actions to the end of the component. It is recommended to use two or fewer actions.\n */\n@Component({\n  tag: \"calcite-tree-item\",\n  styleUrl: \"tree-item.scss\",\n  shadow: true,\n})\nexport class TreeItem implements ConditionalSlotComponent, InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, the component is expanded. */\n  @Prop({ mutable: true, reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(newValue: boolean): void {\n    this.updateParentIsExpanded(this.el, newValue);\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /** When `true`, the component is selected. */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(value: boolean): void {\n    if (this.selectionMode === \"ancestors\" && !this.userChangedValue) {\n      if (value) {\n        this.indeterminate = false;\n      }\n      this.calciteInternalTreeItemSelect.emit({\n        modifyCurrentSelection: true,\n        updateItem: false,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   */\n  @Prop() parentExpanded = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) depth = -1;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) hasChildren: boolean = null;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) lines: boolean;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /**\n   * In ancestor selection mode, show as indeterminate when only some children are selected.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- ignoring until https://github.com/stencil-community/stencil-eslint/issues/111 is fixed\n  @Prop({ reflect: true, mutable: true }) indeterminate = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode;\n\n  @Watch(\"selectionMode\")\n  getSelectionMode(): void {\n    this.isSelectionMultiLike =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.parentTreeItem = this.el.parentElement?.closest(\"calcite-tree-item\");\n    if (this.parentTreeItem) {\n      const { expanded } = this.parentTreeItem;\n      this.updateParentIsExpanded(this.parentTreeItem, expanded);\n    }\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectInteractive(this);\n  }\n\n  componentWillRender(): void {\n    this.hasChildren = !!this.el.querySelector(\"calcite-tree\");\n    this.depth = 0;\n    let parentTree = this.el.closest(\"calcite-tree\");\n\n    if (!parentTree) {\n      return;\n    }\n\n    this.selectionMode = parentTree.selectionMode;\n    this.scale = parentTree.scale || \"m\";\n    this.lines = parentTree.lines;\n\n    let nextParentTree;\n    while (parentTree) {\n      nextParentTree = parentTree.parentElement?.closest(\"calcite-tree\");\n      if (nextParentTree === parentTree) {\n        break;\n      } else {\n        parentTree = nextParentTree;\n        this.depth = this.depth + 1;\n      }\n    }\n  }\n\n  componentWillLoad(): void {\n    requestAnimationFrame(() => (this.updateAfterInitialRender = true));\n  }\n\n  componentDidLoad(): void {\n    this.updateAncestorTree();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeItemElement;\n\n  private isSelectionMultiLike: boolean;\n\n  render(): VNode {\n    const rtl = getElementDir(this.el) === \"rtl\";\n    const showBulletPoint =\n      this.selectionMode === \"single\" ||\n      this.selectionMode === \"children\" ||\n      this.selectionMode === \"single-persist\";\n    const showCheckmark =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n    const showBlank = this.selectionMode === \"none\" && !this.hasChildren;\n\n    const chevron = this.hasChildren ? (\n      <calcite-icon\n        class={{\n          [CSS.chevron]: true,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        data-test-id=\"icon\"\n        icon={ICONS.chevronRight}\n        onClick={this.iconClickHandler}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const defaultSlotNode: VNode = <slot key=\"default-slot\" />;\n\n    const checkbox =\n      this.selectionMode === \"ancestors\" ? (\n        <label class={CSS.checkboxLabel} key=\"checkbox-label\">\n          <calcite-checkbox\n            checked={this.selected}\n            class={CSS.checkbox}\n            data-test-id=\"checkbox\"\n            indeterminate={this.hasChildren && this.indeterminate}\n            scale={this.scale}\n            tabIndex={-1}\n          />\n          {defaultSlotNode}\n        </label>\n      ) : null;\n    const selectedIcon = showBulletPoint\n      ? ICONS.bulletPoint\n      : showCheckmark\n        ? ICONS.checkmark\n        : showBlank\n          ? ICONS.blank\n          : null;\n    const itemIndicator = selectedIcon ? (\n      <calcite-icon\n        class={{\n          [CSS.bulletPointIcon]: selectedIcon === ICONS.bulletPoint,\n          [CSS.checkmarkIcon]: selectedIcon === ICONS.checkmark,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        icon={selectedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n\n    const hidden = !(this.parentExpanded || this.depth === 1);\n    const isExpanded = this.updateAfterInitialRender && this.expanded;\n    const { hasEndActions } = this;\n    const slotNode = (\n      <slot\n        key=\"actionsEndSlot\"\n        name={SLOTS.actionsEnd}\n        onSlotchange={this.actionsEndSlotChangeHandler}\n      />\n    );\n\n    const iconStartEl = (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    return (\n      <Host\n        aria-expanded={this.hasChildren ? toAriaBoolean(isExpanded) : undefined}\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-selected={this.selected ? \"true\" : showCheckmark ? \"false\" : undefined}\n        calcite-hydrated-hidden={hidden}\n        role=\"treeitem\"\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.itemExpanded]: isExpanded }}>\n            <div class={CSS.nodeAndActionsContainer}>\n              <div\n                class={{\n                  [CSS.nodeContainer]: true,\n                  [CSS_UTILITY.rtl]: rtl,\n                }}\n                data-selection-mode={this.selectionMode}\n                ref={(el) => (this.defaultSlotWrapper = el as HTMLElement)}\n              >\n                {chevron}\n                {itemIndicator}\n                {this.iconStart ? iconStartEl : null}\n                {checkbox ? checkbox : defaultSlotNode}\n              </div>\n              <div\n                class={CSS.actionsEnd}\n                hidden={!hasEndActions}\n                ref={(el) => (this.actionSlotWrapper = el as HTMLElement)}\n              >\n                {slotNode}\n              </div>\n            </div>\n\n            <div\n              class={{\n                [CSS.childrenContainer]: true,\n                [CSS_UTILITY.rtl]: rtl,\n              }}\n              data-test-id=\"calcite-tree-children\"\n              onClick={this.childrenClickHandler}\n              role={this.hasChildren ? \"group\" : undefined}\n            >\n              <slot name={SLOTS.children} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\")\n  onClick(event: Event): void {\n    if (this.disabled || this.isActionEndEvent(event)) {\n      return;\n    }\n\n    // Solve for if the item is clicked somewhere outside the slotted anchor.\n    // Anchor is triggered anywhere you click\n    const [link] = filterDirectChildren<HTMLAnchorElement>(this.el, \"a\");\n    if (link && (event.composedPath()[0] as any).tagName.toLowerCase() !== \"a\") {\n      const target = link.target === \"\" ? \"_self\" : link.target;\n      window.open(link.href, target);\n    }\n    this.calciteInternalTreeItemSelect.emit({\n      modifyCurrentSelection: this.selectionMode === \"ancestors\" || this.isSelectionMultiLike,\n      updateItem: true,\n    });\n    this.userChangedValue = true;\n  }\n\n  private iconClickHandler = (event: MouseEvent): void => {\n    event.stopPropagation();\n    this.expanded = !this.expanded;\n  };\n\n  private childrenClickHandler = (event: MouseEvent): void => event.stopPropagation();\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (this.isActionEndEvent(event) || event.defaultPrevented) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.userChangedValue = true;\n        this.calciteInternalTreeItemSelect.emit({\n          modifyCurrentSelection: this.isSelectionMultiLike,\n          updateItem: true,\n        });\n        event.preventDefault();\n        break;\n      case \"Enter\": {\n        // activates a node, i.e., performs its default action. For parent nodes, one possible default action is to open or close the node. In single-select trees where selection does not follow focus (see note below), the default action is typically to select the focused node.\n        const link = Array.from(this.el.children).find((el) =>\n          el.matches(\"a\"),\n        ) as HTMLAnchorElement;\n\n        this.userChangedValue = true;\n\n        if (link) {\n          link.click();\n          this.selected = true;\n        } else {\n          this.calciteInternalTreeItemSelect.emit({\n            modifyCurrentSelection: this.isSelectionMultiLike,\n            updateItem: true,\n          });\n        }\n        event.preventDefault();\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTreeItemSelect: EventEmitter<TreeItemSelectDetail>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @State() hasEndActions = false;\n\n  /**\n   * Used to make sure initially expanded tree-item can properly\n   * transition and emit events from closed state when rendered.\n   *\n   * @private\n   */\n  @State() updateAfterInitialRender = false;\n\n  actionSlotWrapper!: HTMLElement;\n\n  childrenSlotWrapper!: HTMLElement;\n\n  defaultSlotWrapper!: HTMLElement;\n\n  private parentTreeItem?: HTMLCalciteTreeItemElement;\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private isActionEndEvent(event: Event): boolean {\n    const composedPath = event.composedPath();\n    return composedPath.includes(this.actionSlotWrapper);\n  }\n\n  private updateParentIsExpanded = (el: HTMLCalciteTreeItemElement, expanded: boolean): void => {\n    const items = getSlotted<HTMLCalciteTreeItemElement>(el, SLOTS.children, {\n      all: true,\n      selector: \"calcite-tree-item\",\n    });\n    items.forEach((item) => (item.parentExpanded = expanded));\n  };\n\n  /**\n   * This is meant to be called in `componentDidLoad` in order to take advantage of the hierarchical component lifecycle\n   * and help check for item selection as items are initialized\n   *\n   * @private\n   */\n  private updateAncestorTree(): void {\n    const parentItem = this.parentTreeItem;\n    if (this.selectionMode !== \"ancestors\" || !parentItem) {\n      return;\n    }\n\n    if (this.selected) {\n      const parentTree = this.el.parentElement;\n      const siblings = Array.from(parentTree?.children);\n      const selectedSiblings = siblings.filter(\n        (child: HTMLCalciteTreeItemElement) => child.selected,\n      );\n\n      if (siblings.length === selectedSiblings.length) {\n        parentItem.selected = true;\n        parentItem.indeterminate = false;\n      } else if (selectedSiblings.length > 0) {\n        parentItem.indeterminate = true;\n      }\n\n      const childItems = Array.from(\n        this.el.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n      );\n\n      childItems.forEach((item: HTMLCalciteTreeItemElement) => {\n        item.selected = true;\n        item.indeterminate = false;\n      });\n    } else if (this.indeterminate) {\n      const parentItem = this.parentTreeItem;\n      parentItem.indeterminate = true;\n    }\n  }\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n}\n"],"mappings":"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","ignoreList":[]}