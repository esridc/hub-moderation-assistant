{"version":3,"names":["PopoverManager","constructor","this","registeredElements","Map","registeredElementCount","queryPopover","composedPath","registeredElement","find","pathEl","has","get","togglePopovers","event","togglePopover","triggerDisabled","open","Array","from","values","filter","popover","autoClose","includes","forEach","keyDownHandler","defaultPrevented","key","closeAllPopovers","isActivationKey","clickHandler","isKeyboardTriggeredClick","registerElement","referenceEl","set","addListeners","unregisterElement","delete","removeListeners","window","addEventListener","removeEventListener","CSS","container","imageContainer","closeButtonContainer","closeButton","content","hasHeader","header","headerContent","heading","defaultPopoverPlacement","ARIA_CONTROLS","ARIA_EXPANDED","popoverCss","CalcitePopoverStyle0","manager","Popover","mutationObserver","createObserver","updateFocusTrapElements","guid","openTransitionProp","hasLoaded","setTransitionEl","el","transitionEl","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","setUpReferenceElement","warn","removeReferences","effectiveReferenceElement","getReferenceElement","connectFloatingUI","referenceElement","console","tagName","addReferences","getId","id","setExpandedAttr","setAttribute","toAriaBoolean","removeAttribute","hide","storeArrowEl","arrowEl","reposition","defaultOffsetDistance","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","flipPlacementsHandler","onMessagesChange","offsetDistanceOffsetHandler","offsetSkiddingHandler","openHandler","onToggleOpenCloseComponent","overlayPositioningHandler","placementHandler","referenceElementHandler","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectLocalized","connectMessages","connectFocusTrap","requestAnimationFrame","componentWillLoad","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnectFloatingUI","delayed","placement","overlayPositioning","flipDisabled","offsetDistance","offsetSkidding","floatingEl","type","setFocus","componentFocusable","forceUpdate","focusFirstTabbable","queryElementRoots","onBeforeOpen","calcitePopoverBeforeOpen","emit","onOpen","calcitePopoverOpen","onBeforeClose","calcitePopoverBeforeClose","onClose","calcitePopoverClose","renderCloseButton","messages","closable","h","class","appearance","onClick","ref","closeButtonEl","scale","text","close","icon","getIconScale","renderHeader","headingLevel","headingNode","Heading","level","render","label","pointerDisabled","floatingLayout","displayed","hidden","arrowNode","FloatingArrow","Host","role","FloatingCSS","animation","animationActive"],"sources":["src/components/popover/PopoverManager.ts","src/components/popover/resources.ts","src/components/popover/popover.scss?tag=calcite-popover&encapsulation=shadow","src/components/popover/popover.tsx"],"sourcesContent":["import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { isKeyboardTriggeredClick } from \"../../utils/dom\";\n\nexport default class PopoverManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new Map<ReferenceElement, HTMLCalcitePopoverElement>();\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, popover: HTMLCalcitePopoverElement): void {\n    this.registeredElementCount++;\n\n    this.registeredElements.set(referenceEl, popover);\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryPopover = (composedPath: EventTarget[]): HTMLCalcitePopoverElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private togglePopovers = (event: KeyboardEvent | PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const togglePopover = this.queryPopover(composedPath);\n\n    if (togglePopover && !togglePopover.triggerDisabled) {\n      togglePopover.open = !togglePopover.open;\n    }\n\n    Array.from(this.registeredElements.values())\n      .filter(\n        (popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover),\n      )\n      .forEach((popover) => (popover.open = false));\n  };\n\n  private closeAllPopovers(): void {\n    Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      this.closeAllPopovers();\n    } else if (isActivationKey(event.key)) {\n      this.togglePopovers(event);\n    }\n  };\n\n  private clickHandler = (event: PointerEvent): void => {\n    if (isKeyboardTriggeredClick(event)) {\n      return;\n    }\n\n    this.togglePopovers(event);\n  };\n\n  private addListeners(): void {\n    window.addEventListener(\"click\", this.clickHandler);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"click\", this.clickHandler);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  imageContainer: \"image-container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContent: \"header-content\",\n  heading: \"heading\",\n};\n\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-popover-z-index: Sets the z-index value for the component.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, theme(\"zIndex.popover\"));\n}\n\n@include floatingUIHost();\n@include floatingUIArrow();\n\n:host([scale=\"s\"]) {\n  .heading {\n    @apply text-n1-wrap\n    px-3\n    py-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .heading {\n    @apply text-0-wrap\n    px-4\n    py-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .heading {\n    @apply text-1-wrap\n    px-5\n    py-4;\n  }\n}\n\n:host {\n  @apply pointer-events-none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  @apply bg-foreground-1\n    border-color-3\n    rounded\n    border\n    border-solid;\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-color-border-3);\n}\n\n.header {\n  @apply border-b-color-3\n    flex\n    flex-auto\n    items-stretch\n    justify-start\n    border-0\n    border-b\n    border-solid;\n}\n\n.heading {\n  @apply text-color-1\n  word-break\n  m-0\n  block\n  flex-auto\n  self-center\n  whitespace-normal\n  font-medium;\n}\n\n.container {\n  @apply text-color-1\n    relative\n    flex\n    h-full\n    flex-row\n    flex-nowrap\n    rounded;\n  &.has-header {\n    @apply flex-col;\n  }\n}\n\n.content {\n  @apply word-break\n  flex\n  h-full\n  w-full\n  flex-col\n  flex-nowrap\n  self-center;\n}\n\n.close-button-container {\n  @apply flex overflow-hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: theme(\"borderRadius.DEFAULT\");\n  border-end-end-radius: theme(\"borderRadius.DEFAULT\");\n}\n\n.has-header .close-button-container {\n  border-end-end-radius: none;\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  @apply h-full;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { getIconScale } from \"../../utils/component\";\nimport PopoverManager from \"./PopoverManager\";\nimport { PopoverMessages } from \"./assets/popover/t9n\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\n\nconst manager = new PopoverManager();\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-popover\",\n  styleUrl: \"popover.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Popover\n  implements\n    FloatingUIComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\n   */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** When `true`, displays a close button within the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\n   */\n  @Prop({ reflect: true }) flipDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * When `true`, removes the caret pointer.\n   */\n  @Prop({ reflect: true }) pointerDisabled = false;\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PopoverMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PopoverMessages;\n\n  /**\n   * Offsets the position of the popover away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offsets the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n    this.setExpandedAttr();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = defaultPopoverPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   *  The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\n   */\n  @Prop() referenceElement!: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\n   *\n   * This property can be set to `true` to manage when the component is open.\n   */\n  @Prop({ reflect: true }) triggerDisabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePopoverElement;\n\n  mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.updateFocusTrapElements(),\n  );\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  @State() effectiveLocale = \"\";\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() defaultMessages: PopoverMessages;\n\n  arrowEl: SVGElement;\n\n  closeButtonEl: HTMLCalciteActionElement;\n\n  guid = `calcite-popover-${guid()}`;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  hasLoaded = false;\n\n  focusTrap: FocusTrap;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.setFilteredPlacements();\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n\n    // we set up the ref element in the next frame to ensure PopoverManager\n    // event handlers are invoked after connect (mainly for `components` output target)\n    requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n    this.hasLoaded = true;\n  }\n\n  disconnectedCallback(): void {\n    this.removeReferences();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    deactivateFocusTrap(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      flipDisabled,\n      filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        flipDisabled,\n        flipPlacements: filteredFlipPlacements,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"popover\",\n      },\n      delayed,\n    );\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    forceUpdate(this.el);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = this.getReferenceElement();\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  setExpandedAttr = (): void => {\n    const { effectiveReferenceElement, open } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n    }\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n    this.setExpandedAttr();\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n      effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  getReferenceElement(): ReferenceElement {\n    const { referenceElement, el } = this;\n\n    return (\n      (typeof referenceElement === \"string\"\n        ? queryElementRoots(el, { id: referenceElement })\n        : referenceElement) || null\n    );\n  }\n\n  hide = (): void => {\n    this.open = false;\n  };\n\n  onBeforeOpen(): void {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calcitePopoverOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.calcitePopoverBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calcitePopoverClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  storeArrowEl = (el: SVGElement): void => {\n    this.arrowEl = el;\n    this.reposition(true);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderCloseButton(): VNode {\n    const { messages, closable } = this;\n    return closable ? (\n      <div class={CSS.closeButtonContainer} key={CSS.closeButtonContainer}>\n        <calcite-action\n          appearance=\"transparent\"\n          class={CSS.closeButton}\n          onClick={this.hide}\n          ref={(closeButtonEl) => (this.closeButtonEl = closeButtonEl)}\n          scale={this.scale}\n          text={messages.close}\n        >\n          <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n        </calcite-action>\n      </div>\n    ) : null;\n  }\n\n  renderHeader(): VNode {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    return headingNode ? (\n      <div class={CSS.header} key={CSS.header}>\n        {headingNode}\n        {this.renderCloseButton()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { effectiveReferenceElement, heading, label, open, pointerDisabled, floatingLayout } =\n      this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? (\n      <FloatingArrow floatingLayout={floatingLayout} key=\"floating-arrow\" ref={this.storeArrowEl} />\n    ) : null;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          ref={this.setTransitionEl}\n        >\n          {arrowNode}\n          <div\n            class={{\n              [CSS.hasHeader]: !!heading,\n              [CSS.container]: true,\n            }}\n          >\n            {this.renderHeader()}\n            <div class={CSS.content}>\n              <slot />\n            </div>\n            {!heading ? this.renderCloseButton() : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}