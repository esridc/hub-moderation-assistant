{"version":3,"names":["pickListCss","CalcitePickListStyle0","logger","deprecated","name","removalVersion","suggested","PickList","this","lastSelectedItem","mutationObserver","createObserver","mutationObserverCallback","bind","setFilterEl","el","filterEl","setFilteredItems","filteredItems","deselectRemovedItems","deselectSiblingItems","selectSiblings","handleFilter","handleFilterEvent","getItemData","keyDownHandler","Map","connectedCallback","initialize","call","initializeObserver","connectInteractive","disconnectedCallback","cleanUpObserver","disconnectInteractive","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","handleInitialFilter","componentDidRender","updateHostInteraction","calciteListItemRemoveHandler","event","removeItem","calciteListItemChangeHandler","calciteInternalListItemPropsChangeHandler","stopPropagation","setUpFilter","calciteInternalListItemValueChangeHandler","calciteListFocusOutHandler","setUpItems","filterEnabled","dataForFilter","getSelectedItems","selectedValues","setFocus","focusId","componentFocusable","getIconType","multiple","ICON_TYPES","square","circle","render","h","List","key","onKeyDown","props","pickListGroupCss","CalcitePickListGroupStyle0","PickListGroup","connectConditionalSlotComponent","disconnectConditionalSlotComponent","groupTitle","headingLevel","hasParentItem","getSlotted","SLOTS","parentItem","sectionClasses","CSS","container","indented","title","parentLevel","closest","relativeLevel","constrainHeadingLevel","level","Fragment","Heading","class","heading","pickListItemCss","CalcitePickListItemStyle0","PickListItem","pickListClickHandler","disabled","deselectDisabled","selected","nonInteractive","shiftPressed","shiftKey","pickListKeyDownHandler","preventDefault","removeClickHandler","calciteListItemRemove","emit","descriptionWatchHandler","calciteInternalListItemPropsChange","labelWatchHandler","onMessagesChange","metadataWatchHandler","selectedWatchHandler","calciteListItemChange","item","value","valueWatchHandler","newValue","oldValue","calciteInternalListItemValueChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectLocalized","connectMessages","setUpMessages","disconnectLocalized","disconnectMessages","toggleSelected","coerce","focusEl","focus","renderIcon","icon","iconFlipRtl","iconDot","onClick","flipRtl","ICONS","checked","scale","renderRemoveAction","removable","remove","slot","actionsEnd","text","messages","renderActionsStart","hasActionsStart","actionsStart","actions","renderActionsEnd","hasActionsEnd","description","label","InteractiveContainer","ref","tabIndex","toAriaBoolean","textContainer","role"],"sources":["src/components/pick-list/pick-list.scss?tag=calcite-pick-list&encapsulation=shadow","src/components/pick-list/pick-list.tsx","src/components/pick-list-group/pick-list-group.scss?tag=calcite-pick-list-group&encapsulation=shadow","src/components/pick-list-group/pick-list-group.tsx","src/components/pick-list-item/pick-list-item.scss?tag=calcite-pick-list-item&encapsulation=shadow","src/components/pick-list-item/pick-list-item.tsx"],"sourcesContent":[":host {\n  @apply text-color-2\n    text-n1h\n    relative\n    box-border\n    flex\n    flex-shrink-0\n    flex-grow\n    flex-col\n    items-stretch\n    bg-transparent;\n\n  * {\n    @apply box-border;\n  }\n}\n\n@include disabled();\n\n:host([filter-enabled]) header {\n  @apply bg-foreground-1\n    mb-1\n    flex\n    items-stretch\n    justify-end;\n  &.sticky-pos {\n    @apply sticky top-0 z-default;\n  }\n  @apply shadow-border-bottom;\n}\n\ncalcite-filter {\n  @apply mb-0;\n}\n\n:host([loading][disabled]) {\n  min-block-size: 2rem;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport type { ValueUnion } from \"../types\";\nimport { logger } from \"../../utils/logger\";\nimport { ICON_TYPES } from \"./resources\";\nimport {\n  calciteInternalListItemValueChangeHandler,\n  calciteListFocusOutHandler,\n  calciteListItemChangeHandler,\n  cleanUpObserver,\n  deselectRemovedItems,\n  deselectSiblingItems,\n  getItemData,\n  handleFilter,\n  handleFilterEvent,\n  handleInitialFilter,\n  initialize,\n  initializeObserver,\n  ItemData,\n  keyDownHandler,\n  ListFocusId,\n  mutationObserverCallback,\n  removeItem,\n  selectSiblings,\n  setFocus,\n  setUpItems,\n} from \"./shared-list-logic\";\nimport List from \"./shared-list-render\";\n\nlogger.deprecated(\"component\", {\n  name: \"pick-list\",\n  removalVersion: 3,\n  suggested: \"list\",\n});\n\n/**\n * @deprecated Use the `calcite-list` component instead.\n * @slot - A slot for adding `calcite-pick-list-item` or `calcite-pick-list-group` elements. Items are displayed as a vertical list.\n * @slot menu-actions - A slot for adding a button and menu combination for performing actions, such as sorting.\n */\n@Component({\n  tag: \"calcite-pick-list\",\n  styleUrl: \"pick-list.scss\",\n  shadow: true,\n})\nexport class PickList<\n    ItemElement extends HTMLCalcitePickListItemElement = HTMLCalcitePickListItemElement,\n  >\n  implements InteractiveComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The component's filtered items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) filteredItems: HTMLCalcitePickListItemElement[] = [];\n\n  /**\n   * The component's filtered data.\n   *\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by shared-list-logic\n  @Prop({ mutable: true }) filteredData: ItemData = [];\n\n  /**\n   * When `true`, an input appears at the top of the list that can be used by end users to filter items in the list.\n   */\n  @Prop({ reflect: true }) filterEnabled = false;\n\n  /**\n   * Placeholder text for the filter input field.\n   */\n  @Prop({ reflect: true }) filterPlaceholder: string;\n\n  /**\n   * Text for the filter input field.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by shared-list-logic\n  @Prop({ reflect: true, mutable: true }) filterText: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Similar to standard radio buttons and checkboxes.\n   * When `true`, a user can select multiple `calcite-pick-list-item`s at a time.\n   * When `false`, only a single `calcite-pick-list-item` can be selected at a time,\n   * and a new selection will deselect previous selections.\n   */\n  @Prop({ reflect: true }) multiple = false;\n\n  /**\n   * When `true` and single selection is enabled, the selection changes when navigating `calcite-pick-list-item`s via keyboard.\n   */\n  @Prop({ reflect: true }) selectionFollowsFocus = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListElement;\n\n  @State() selectedValues: Map<string, ItemElement> = new Map();\n\n  @State() dataForFilter: ItemData = [];\n\n  items: ItemElement[];\n\n  lastSelectedItem: ItemElement = null;\n\n  mutationObserver = createObserver(\"mutation\", mutationObserverCallback.bind(this));\n\n  emitCalciteListChange: () => void;\n\n  emitCalciteListFilter: () => void;\n\n  filterEl: HTMLCalciteFilterElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    initialize.call(this);\n    initializeObserver.call(this);\n    connectInteractive(this);\n  }\n\n  disconnectedCallback(): void {\n    cleanUpObserver.call(this);\n    disconnectInteractive(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    handleInitialFilter.call(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Emits when any of the `calcite-pick-list-item` selections have changed.\n   */\n  @Event({ cancelable: false }) calciteListChange: EventEmitter<\n    Map<string, HTMLCalcitePickListItemElement>\n  >;\n\n  /**\n   * Emits when a filter has changed.\n   */\n  @Event({ cancelable: false }) calciteListFilter: EventEmitter<void>;\n\n  @Listen(\"calciteListItemRemove\")\n  calciteListItemRemoveHandler(event: CustomEvent<void>): void {\n    removeItem.call(this, event);\n  }\n\n  @Listen(\"calciteListItemChange\")\n  calciteListItemChangeHandler(event: CustomEvent): void {\n    calciteListItemChangeHandler.call(this, event);\n  }\n\n  @Listen(\"calciteInternalListItemPropsChange\")\n  calciteInternalListItemPropsChangeHandler(event: CustomEvent): void {\n    event.stopPropagation();\n    this.setUpFilter();\n  }\n\n  @Listen(\"calciteInternalListItemValueChange\")\n  calciteInternalListItemValueChangeHandler(event: CustomEvent): void {\n    calciteInternalListItemValueChangeHandler.call(this, event);\n    event.stopPropagation();\n  }\n\n  @Listen(\"focusout\")\n  calciteListFocusOutHandler(event: FocusEvent): void {\n    calciteListFocusOutHandler.call(this, event);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setUpItems(): void {\n    setUpItems.call(this, \"calcite-pick-list-item\");\n  }\n\n  setUpFilter(): void {\n    if (this.filterEnabled) {\n      this.dataForFilter = this.getItemData();\n    }\n  }\n\n  setFilterEl = (el: HTMLCalciteFilterElement): void => {\n    this.filterEl = el;\n  };\n\n  setFilteredItems = (filteredItems: any[]): void => {\n    this.filteredItems = filteredItems;\n  };\n\n  deselectRemovedItems = deselectRemovedItems.bind(this);\n\n  deselectSiblingItems = deselectSiblingItems.bind(this);\n\n  selectSiblings = selectSiblings.bind(this);\n\n  handleFilter = handleFilter.bind(this);\n\n  handleFilterEvent = handleFilterEvent.bind(this);\n\n  getItemData = getItemData.bind(this);\n\n  keyDownHandler = keyDownHandler.bind(this);\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Returns the component's selected `calcite-pick-list-item`s. */\n  @Method()\n  async getSelectedItems(): Promise<Map<string, HTMLCalcitePickListItemElement>> {\n    return this.selectedValues;\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   *\n   * @param focusId\n   */\n  @Method()\n  async setFocus(focusId?: ListFocusId): Promise<void> {\n    await componentFocusable(this);\n\n    return setFocus.call(this, focusId);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  getIconType(): ValueUnion<typeof ICON_TYPES> {\n    return this.multiple ? ICON_TYPES.square : ICON_TYPES.circle;\n  }\n\n  render(): VNode {\n    return <List onKeyDown={this.keyDownHandler} props={this} />;\n  }\n}\n",":host {\n  @apply text-color-2\n    text-n1\n    mb-1\n    box-border\n    block\n    bg-transparent;\n\n  * {\n    @apply box-border;\n  }\n}\n\n:host(:last-child) {\n  @apply mb-0;\n}\n\n@import \"../../assets/styles/header\";\n\n.heading {\n  @apply text-0h text-n1-wrap\n    text-color-3\n    my-2\n    mx-4;\n}\n\n.container--indented {\n  margin-inline-start: theme(\"margin.6\");\n}\n\n@include base-component();\n","import { Component, Element, Fragment, h, Prop, VNode } from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted } from \"../../utils/dom\";\nimport { constrainHeadingLevel, Heading, HeadingLevel } from \"../functional/Heading\";\nimport { logger } from \"../../utils/logger\";\nimport { CSS, SLOTS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"pick-list-group\",\n  removalVersion: 3,\n  suggested: \"list-item-group\",\n});\n\n/**\n * @deprecated Use the `calcite-list` component instead.\n * @slot - A slot for adding `calcite-pick-list-item` elements.\n */\n@Component({\n  tag: \"calcite-pick-list-group\",\n  styleUrl: \"pick-list-group.scss\",\n  shadow: true,\n})\nexport class PickListGroup implements ConditionalSlotComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the title for all nested `calcite-pick-list-item`s.\n   *\n   */\n  @Prop({ reflect: true }) groupTitle: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListGroupElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el, groupTitle, headingLevel } = this;\n    const hasParentItem = getSlotted(el, SLOTS.parentItem) !== null;\n    const sectionClasses = {\n      [CSS.container]: true,\n      [CSS.indented]: hasParentItem,\n    };\n\n    const title = groupTitle;\n    const parentLevel = el.closest(\"calcite-pick-list\")?.headingLevel;\n    const relativeLevel = parentLevel ? constrainHeadingLevel(parentLevel + 1) : null;\n    const level = headingLevel || relativeLevel;\n\n    return (\n      <Fragment>\n        {title ? (\n          <Heading class={CSS.heading} level={level}>\n            {title}\n          </Heading>\n        ) : null}\n        <slot name={SLOTS.parentItem} />\n        <section class={sectionClasses}>\n          <slot />\n        </section>\n      </Fragment>\n    );\n  }\n}\n",":host {\n  @apply bg-foreground-1\n    text-n1\n    text-color-1\n    shadow-border-bottom\n    bg-foreground-1\n    text-n1h\n    m-0\n    mb-px\n    box-border\n    flex\n    items-stretch;\n  transition: background-color var(--calcite-animation-timing);\n  animation: calcite-fade-in var(--calcite-animation-timing);\n\n  * {\n    @apply box-border;\n  }\n}\n\n.label {\n  @apply focus-base\n    flex\n    flex-auto\n    cursor-pointer\n    items-center\n    bg-transparent;\n  &:focus {\n    @apply focus-inset;\n  }\n  &:hover {\n    @apply bg-foreground-2;\n  }\n}\n\n:host([non-interactive]:hover) {\n  @apply bg-foreground-1;\n}\n\n:host([non-interactive]) .label,\n:host([non-interactive]) .icon {\n  @apply pointer-events-none;\n}\n\n.icon {\n  @apply my-0 flex cursor-pointer items-center p-1;\n  color: theme(\"colors.brand\");\n  flex: 0 0 auto;\n  line-height: 0;\n  &:hover {\n    @apply bg-foreground-2;\n  }\n}\n\n.icon-dot {\n  @apply flex w-6 items-center p-2;\n  &::before {\n    @apply opacity-0;\n    content: \"\\2022\";\n  }\n}\n\n.icon calcite-icon {\n  @apply opacity-0;\n}\n\n:host([selected]) .icon-dot::before,\n:host([selected]) .icon calcite-icon {\n  transition: opacity var(--calcite-animation-timing);\n  @apply opacity-100;\n}\n\n.text-container {\n  @apply text-n2-wrap\n    word-break\n    pointer-events-none\n    flex\n    flex-col\n    flex-nowrap\n    overflow-hidden\n    py-2\n    px-3;\n}\n\n.title {\n  @apply text-color-1 font-normal;\n}\n\n.description {\n  @apply text-color-3 mt-0.5 font-normal;\n}\n\n.actions {\n  @apply m-0 flex flex-initial items-stretch justify-end;\n}\n\n.actions--start ~ .label {\n  padding-inline-start: theme(\"padding.1\");\n}\n\n@include disabled();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ICON_TYPES } from \"../pick-list/resources\";\nimport { logger } from \"../../utils/logger\";\nimport { PickListItemMessages } from \"./assets/pick-list-item/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlogger.deprecated(\"component\", {\n  name: \"pick-list-item\",\n  removalVersion: 3,\n  suggested: \"list-item\",\n});\n\n/**\n * @deprecated Use the `calcite-list` component instead.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component.\n */\n@Component({\n  tag: \"calcite-pick-list-item\",\n  styleUrl: \"pick-list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class PickListItem\n  implements ConditionalSlotComponent, InteractiveComponent, LoadableComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * A description for the component that displays below the label text.\n   */\n  @Prop({ reflect: true }) description: string;\n\n  @Watch(\"description\")\n  descriptionWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `false`, the component cannot be deselected by user interaction.\n   */\n  @Prop({ reflect: true }) deselectDisabled = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true }) nonInteractive = false;\n\n  /**\n   * Determines the icon SVG symbol that will be shown. Options are `\"circle\"`, `\"square\"`, `\"grip\"` or `null`.\n   *\n   * @see [ICON_TYPES](https://github.com/Esri/calcite-design-system/blob/dev/src/components/pick-list/resources.ts#L5)\n   */\n  @Prop({ reflect: true }) icon: ICON_TYPES | null = null;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Label and accessible name for the component. Appears next to the icon.\n   */\n  @Prop({ reflect: true }) label!: string;\n\n  @Watch(\"label\")\n  labelWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PickListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PickListItemMessages;\n\n  @Watch(\"defaultMessages\")\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent list.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  @Watch(\"metadata\")\n  metadataWatchHandler(): void {\n    this.calciteInternalListItemPropsChange.emit();\n  }\n\n  /**\n   * When `true`, displays a remove action that removes the item from the list.\n   */\n  @Prop({ reflect: true }) removable = false;\n\n  /**\n   * When `true`, selects an item. Toggles when an item is checked/unchecked.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  selectedWatchHandler(): void {\n    this.calciteListItemChange.emit({\n      item: this.el,\n      value: this.value,\n      selected: this.selected,\n      shiftPressed: this.shiftPressed,\n    });\n\n    this.shiftPressed = false;\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value!: any;\n\n  @Watch(\"value\")\n  valueWatchHandler(newValue: any, oldValue: any): void {\n    this.calciteInternalListItemValueChange.emit({ oldValue, newValue });\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePickListItemElement;\n\n  private focusEl: HTMLLabelElement;\n\n  shiftPressed: boolean;\n\n  @State() defaultMessages: PickListItemMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected or unselected.\n   */\n  @Event({ cancelable: false }) calciteListItemChange: EventEmitter<{\n    item: HTMLCalcitePickListItemElement;\n    value: any;\n    selected: boolean;\n    shiftPressed: boolean;\n  }>;\n\n  /**\n   * Fires when the remove button is pressed.\n   */\n  @Event({ cancelable: true }) calciteListItemRemove: EventEmitter<void>;\n\n  /**\n   * Emits when the component's label, description, value, or metadata properties are modified.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemPropsChange: EventEmitter<void>;\n\n  /**\n   * Emits when the component's value property is modified.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemValueChange: EventEmitter<{\n    oldValue: any;\n    newValue: any;\n  }>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Toggles the selection state. By default this won't trigger an event.\n   * The first argument allows the value to be coerced, rather than swapping values.\n   *\n   * @param coerce\n   */\n  @Method()\n  async toggleSelected(coerce?: boolean): Promise<void> {\n    this.selected = typeof coerce === \"boolean\" ? coerce : !this.selected;\n  }\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.focusEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  pickListClickHandler = (event: MouseEvent): void => {\n    if (this.disabled || (this.deselectDisabled && this.selected) || this.nonInteractive) {\n      return;\n    }\n\n    this.shiftPressed = event.shiftKey;\n    this.selected = !this.selected;\n  };\n\n  pickListKeyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \" \") {\n      event.preventDefault();\n      if ((this.deselectDisabled && this.selected) || this.nonInteractive) {\n        return;\n      }\n      this.selected = !this.selected;\n    }\n  };\n\n  removeClickHandler = (): void => {\n    this.calciteListItemRemove.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderIcon(): VNode {\n    const { icon, iconFlipRtl } = this;\n\n    if (!icon) {\n      return null;\n    }\n\n    return (\n      <span\n        class={{\n          [CSS.icon]: true,\n          [CSS.iconDot]: icon === ICON_TYPES.circle,\n        }}\n        onClick={this.pickListClickHandler}\n      >\n        {icon === ICON_TYPES.square ? (\n          <calcite-icon flipRtl={iconFlipRtl} icon={ICONS.checked} scale=\"s\" />\n        ) : null}\n      </span>\n    );\n  }\n\n  renderRemoveAction(): VNode {\n    return this.removable ? (\n      <calcite-action\n        class={CSS.remove}\n        icon={ICONS.remove}\n        onClick={this.removeClickHandler}\n        slot={SLOTS.actionsEnd}\n        text={this.messages.remove}\n      />\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    const hasActionsStart = getSlotted(el, SLOTS.actionsStart);\n\n    return hasActionsStart ? (\n      <div class={{ [CSS.actions]: true, [CSS.actionsStart]: true }}>\n        <slot name={SLOTS.actionsStart} />\n      </div>\n    ) : null;\n  }\n\n  renderActionsEnd(): VNode {\n    const { el, removable } = this;\n    const hasActionsEnd = getSlotted(el, SLOTS.actionsEnd);\n\n    return hasActionsEnd || removable ? (\n      <div class={{ [CSS.actions]: true, [CSS.actionsEnd]: true }}>\n        <slot name={SLOTS.actionsEnd} />\n        {this.renderRemoveAction()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { description, label } = this;\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        {this.renderIcon()}\n        {this.renderActionsStart()}\n        <label\n          aria-label={label}\n          class={CSS.label}\n          onClick={this.pickListClickHandler}\n          onKeyDown={this.pickListKeyDownHandler}\n          ref={(focusEl): HTMLLabelElement => (this.focusEl = focusEl)}\n          tabIndex={0}\n        >\n          <div\n            aria-checked={toAriaBoolean(this.selected)}\n            class={CSS.textContainer}\n            role=\"menuitemcheckbox\"\n          >\n            <span class={CSS.title}>{label}</span>\n            {description ? <span class={CSS.description}>{description}</span> : null}\n          </div>\n        </label>\n        {this.renderActionsEnd()}\n      </InteractiveContainer>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}